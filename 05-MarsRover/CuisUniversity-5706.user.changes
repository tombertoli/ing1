

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (14 May 2023 15:52:14) as /home/antonio/Ingenieria de Software I/Cuis University/Rover/linux64/CuisUniversity-5706.image!


TestCase subclass: #RoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #RoverTests category: 'MarsRover-TDD' stamp: 'a 5/14/2023 15:52:52'!
TestCase subclass: #RoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #Rover category: 'MarsRover-TDD' stamp: 'a 5/14/2023 15:55:50'!
Object subclass: #Rover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!RoverTests methodsFor: 'no messages' stamp: 'a 5/14/2023 15:55:39'!
test01
	self assertRover: (Rover at: 1@1 heading: #Norte) at: 1@1 heading: #Norte! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:56:21'!
test01RoverBeginsAtPositionAndHeading
	self assertRover: (Rover at: 1@1 heading: #Norte) at: 1@1 heading: #Norte! !

!methodRemoval: RoverTests #test01 stamp: 'a 5/14/2023 15:56:21'!
test01
	self assertRover: (Rover at: 1@1 heading: #Norte) at: 1@1 heading: #Norte!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 15:56:26'!
ERROR!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:57:51'!
assertRover: aRover at: aPosition heading: aDirection 
	self assert: aPosition equals: aRover position. 
	self assert: aDirection equals: aRover direction. ! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 15:58:03'!
ERROR!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 15:58:03'!
ERROR!
!Rover class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:58:11'!
at: aRenameMe1 heading: aRenameMe2 
	self shouldBeImplemented.! !
!Rover class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:59:01' prior: 50603992!
at: aPosition heading: aDirection 
	^self new intializeAt: aPosition heading: aDirection ! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 15:59:03'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:59:07'!
intializeAt: aPosition heading: aDirection 
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:59:18' prior: 50604006!
intializeAt: aPosition heading: aDirection 
	! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 15:59:19'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:59:26'!
position
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:59:48' prior: 50604019!
position
	^1@1! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 15:59:49'!
ERROR!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 15:59:49'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:59:53'!
direction
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 15:59:59' prior: 50604033!
direction
	^#Norte! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:00:01'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:02:26'!
test02MovingRoverForwardModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'f') at: 1@1 heading: #Norte! !

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:02:27'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:02:31'!
command: aRenameMe1 
	self shouldBeImplemented.! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:03:18' prior: 50604044!
test02MovingRoverForwardModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'f') at: 1@2 heading: #Norte! !

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:03:19'!
ERROR!
!Rover methodsFor: 'error handling' stamp: 'a 5/14/2023 16:03:25' overrides: 16902107!
error: aRenameMe1 
	self shouldBeImplemented.! !

!methodRemoval: Rover #error: stamp: 'a 5/14/2023 16:03:35'!
error: aRenameMe1 
	self shouldBeImplemented.!

!classDefinition: #Rover category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:04:35'!
Object subclass: #Rover
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:04:32' prior: 50604055!
command: aRenameMe1 
	position := 1@2! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:04:48'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:04:48'!
FAILURE!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:04:48'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:05:09' prior: 50604023!
position
	^position! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:05:11'!
FAILURE!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:05:11'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:05:11'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:05:53' prior: 50604087!
command: aCommandsPackage 
	position := 1@2! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:05:59' prior: 50604116!
command: aCommandsList 
	position := 1@2! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:06:14' prior: 50604012!
intializeAt: aPosition heading: aDirection 
	position:= aPosition ! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:06:25' prior: 50604126!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 ! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:06:31'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:06:31'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:06:54'!
test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'f') at: 1@3 heading: #Norte! !

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:06:55'!
FAILURE!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:07:15' prior: 50604143!
test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'ff') at: 1@3 heading: #Norte! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:08:08' prior: 50604121!
command: aCommandsList 
	aCommandsList size =1 ifTrue: [position := 1@2]
	ifFalse: [position := 1@3]! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:08:09'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:08:09'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:08:09'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:08:29'!
test03MovingRoverBackwardsModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'ff') at: 1@3 heading: #Norte! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:08:36'!
test04MovingRoverBackwardsModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'ff') at: 1@3 heading: #Norte! !

!methodRemoval: RoverTests #test03MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:08:36'!
test03MovingRoverBackwardsModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'ff') at: 1@3 heading: #Norte!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:08:50' prior: 50604188!
test04MovingRoverBackwardsModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'b') at: 1@0 heading: #Norte! !

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:08:52'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:10:24' prior: 50604163!
command: aCommandsList 
	(aCommandsList at: 1) =$b ifTrue: [^position:=1@0] .
	
	aCommandsList size =1 
		ifTrue: [position := 1@2]
		ifFalse: [position := 1@3]! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:10:31'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:10:31'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:10:31'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:10:31'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:10:31'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:10:54' prior: 50604217!
command: aCommandsList 
	(aCommandsList at: 1) =$b ifTrue: [position:=1@0. ^self] .
	
	aCommandsList size =1 
		ifTrue: [position := 1@2]
		ifFalse: [position := 1@3]! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:10:55'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:10:55'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:10:55'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:10:55'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:17:33'!
test00NoCommandsRaisesError
	self should:[
		(Rover at: 1@1 heading: #Norte) command: '']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:17:37'!
ERROR!
!Rover class methodsFor: 'error handling' stamp: 'a 5/14/2023 16:18:04'!
invalidCommandErrorDescription
	self shouldBeImplemented.! !
!Rover class methodsFor: 'error handling' stamp: 'a 5/14/2023 16:18:31' prior: 50604278!
invalidCommandErrorDescription
	^'El comando ingresado es inválido'! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:18:31'!
FAILURE!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:18:31'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:18:31'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:18:31'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:18:31'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:18:31'!
FAILURE!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:18:39'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:18:57'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:19:00'!
FAILURE!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:19:00'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:20:25' prior: 50604244!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	(aCommandsList at: 1) =$b ifTrue: [position:=1@0. ^self] .
	
	aCommandsList size =1 
		ifTrue: [position := 1@2]
		ifFalse: [position := 1@3]! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:20:26'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:20:26'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:20:26'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:20:26'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:20:26'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:20:48'!
test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'bb') at: 1@0 heading: #Norte! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:20:53' prior: 50604349!
test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'bb') at: 1@-1 heading: #Norte! !

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:20:55'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:22:16' prior: 50604321!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	(aCommandsList at: 1) =$b ifTrue: 
		[aCommandsList size =1 
			ifTrue: [position:=1@0]
			ifFalse: [position:=1@-1] .
			^self
		].
	aCommandsList size =1 
		ifTrue: [position := 1@2]
		ifFalse: [position := 1@3]! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:22:17'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:22:17'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:22:17'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:22:17'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:22:17'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:22:17'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:28:46'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:28:46'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:46'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:46'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:46'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:46'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:28:49'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:28:49'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:49'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:49'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:49'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:28:49'!
PASSED!

Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #Command category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:29:04'!
Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Command subclass: #ValidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #ValidCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:29:21'!
Command subclass: #ValidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Command subclass: #InvalidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #InvalidCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:29:25'!
Command subclass: #InvalidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

ValidCommand subclass: #MoveForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #MoveForwardCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:29:46'!
ValidCommand subclass: #MoveForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

ValidCommand subclass: #MoveBackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #MoveBackwardCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:29:51'!
ValidCommand subclass: #MoveBackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classRemoval: #InvalidCommand stamp: 'a 5/14/2023 16:31:37'!
Command subclass: #InvalidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Command subclass: #MoveBackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #MoveBackwardCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:32:40'!
Command subclass: #MoveBackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Command subclass: #MoveForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #MoveForwardCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 16:32:49'!
Command subclass: #MoveForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classRemoval: #ValidCommand stamp: 'a 5/14/2023 16:32:51'!
Command subclass: #ValidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!Command methodsFor: 'no messages' stamp: 'a 5/14/2023 16:36:53'!
executeWith: aRover 
	self subclassResponsibility ! !
!MoveBackwardCommand methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:37:00' overrides: 50604539!
executeWith: aRover 
	self subclassResponsibility ! !
!MoveForwardCommand methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:37:00' overrides: 50604539!
executeWith: aRover 
	self subclassResponsibility ! !

!methodRemoval: Command #executeWith: stamp: 'a 5/14/2023 16:37:00'!
executeWith: aRover 
	self subclassResponsibility !
!Command methodsFor: 'no messages' stamp: 'a 5/14/2023 16:37:11'!
executeWith: aRover 
	self subclassResponsibility ! !
!MoveBackwardCommand methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:37:35' prior: 50604544 overrides: 50604557!
executeWith: aRover 
	aRover moveBackward ! !
!MoveForwardCommand methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:37:46' prior: 50604549 overrides: 50604557!
executeWith: aRover 
	aRover moveForward ! !
!Rover methodsFor: 'nil' stamp: 'a 5/14/2023 16:38:32'!
moveForward 
	position := position x @ (position y +1)! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:38:48'!
moveBackward 
	position := position x @ (position y -1)! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:40:41' prior: 50604369!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | 
		currentCommand executeWith: self. 
		].! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:42:19' prior: 50604583!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | 
		Command subclasses detect: [:aCommandClass | aCommandClass canHandle: currentCommand ].
		currentCommand executeWith: self. 
		].! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:42:24'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:42:24'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:42:24'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:42:24'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:42:24'!
ERROR!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:42:24'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:43:26' prior: 50604592!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | command | 
		command:= Command subclasses detect: [:aCommandClass | aCommandClass canHandle: currentCommand ].
		command new executeWith: self. 
		].! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:43:46' prior: 50604625!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		currentCommandClass:= Command subclasses detect: [:aCommandClass | aCommandClass canHandle: currentCommand ].
		currentCommandClass new executeWith: self. 
		].! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:44:07'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:44:07'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:44:07'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:44:07'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:44:07'!
ERROR!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:44:07'!
ERROR!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:44:09'!
ERROR!
!Command class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:44:16'!
canHandle: currentCommand 
	self shouldBeImplemented.! !
!Command class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:44:29' prior: 50604677!
canHandle: currentCommand 
	self subclassResponsibility ! !

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:44:31'!
ERROR!
!Command class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:44:51' prior: 50604682!
canHandle: aCommand 
	self subclassResponsibility ! !
!MoveBackwardCommand class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:44:55' overrides: 50604691!
canHandle: aCommand 
	self subclassResponsibility ! !
!MoveForwardCommand class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:44:55' overrides: 50604691!
canHandle: aCommand 
	self subclassResponsibility ! !

!methodRemoval: Command class #canHandle: stamp: 'a 5/14/2023 16:44:55'!
canHandle: aCommand 
	self subclassResponsibility !
!Command class methodsFor: 'no messages' stamp: 'a 5/14/2023 16:45:11'!
canHandle: aCommand 
	self subclassResponsibility ! !
!MoveBackwardCommand class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:46:31' prior: 50604697 overrides: 50604711!
canHandle: aCommand 
	^aCommand = $b ! !
!MoveForwardCommand class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:46:44' prior: 50604703 overrides: 50604711!
canHandle: aCommand 
	^aCommand = $f! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:46:46'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:46:46'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:46:46'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:46:46'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:46:46'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:46:46'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:47:19' prior: 50604638!
command: aCommandsList 
	"aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ]."
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		currentCommandClass:= Command subclasses detect: [:aCommandClass | aCommandClass canHandle: currentCommand ].
		currentCommandClass new executeWith: self. 
		].! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:47:20'!
FAILURE!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:47:20'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:47:20'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:47:20'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:47:20'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:47:20'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:47:20'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:51:03' prior: 50604749!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		currentCommandClass:= Command subclasses detect: [:aCommandClass | aCommandClass canHandle: currentCommand ].
		currentCommandClass new executeWith: self. 
		]! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 16:51:04'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 16:51:04'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:51:04'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:51:04'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:51:04'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 16:51:04'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:04:27'!
test06RotatingLeftTurnsNorthToWest
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'l') at: 1@1 heading: #Oeste! !

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:04:31'!
ERROR!

Command subclass: #RotateLeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #RotateLeftCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:05:34'!
Command subclass: #RotateLeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!RotateLeftCommand methodsFor: 'no messages' stamp: 'a 5/14/2023 17:05:50' overrides: 50604557!
executeWith: aRover 
	aRover rotateLeft ! !
!RotateLeftCommand class methodsFor: 'no messages' stamp: 'a 5/14/2023 17:06:02' overrides: 50604711!
canHandle: aCommand 
	^aCommand = $l! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:06:43'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:06:43'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:06:43'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:06:43'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:06:43'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:06:43'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:06:43'!
ERROR!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:06:43'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:06:47'!
rotateLeft
	self shouldBeImplemented.! !

!classDefinition: #Rover category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:07:16'!
Object subclass: #Rover
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:07:14' prior: 50604880!
rotateLeft
	direction:= #Oeste! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:07:18'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:07:18'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:18'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:18'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:18'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:18'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:07:18'!
FAILURE!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:07:18'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:07:41' prior: 50604037!
direction
	^direction ! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:07:42'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:07:42'!
FAILURE!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:42'!
FAILURE!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:42'!
FAILURE!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:42'!
FAILURE!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:07:42'!
FAILURE!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:07:42'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:07:43'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:07:59' prior: 50604131!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= #Norte! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:08:00'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:08:00'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:08:00'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:08:00'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:08:00'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:08:00'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:08:00'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:08:29'!
test07RotatingRightTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'r') at: 1@1 heading: #Este! !

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:08:57'!
ERROR!

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:08:57'!
ERROR!

Command subclass: #RotateRightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #RotateRightCommand category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:09:13'!
Command subclass: #RotateRightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!RotateRightCommand methodsFor: 'no messages' stamp: 'a 5/14/2023 17:09:24' overrides: 50604557!
executeWith: aRover 
	aRover rotateRight ! !
!RotateRightCommand class methodsFor: 'no messages' stamp: 'a 5/14/2023 17:09:35' overrides: 50604711!
canHandle: aCommand 
	^aCommand = $r! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:09:38'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:09:38'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:38'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:38'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:38'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:38'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:09:38'!
PASSED!

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:09:38'!
ERROR!

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:09:38'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:09:42'!
rotateRight
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:09:49' prior: 50605050!
rotateRight
	direction:=#Este! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:09:50'!
PASSED!

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:10:07'!
PASSED!

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:10:08'!
PASSED!

!testRun: #RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:10:10'!
PASSED!

!methodRemoval: RoverTests #test07RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:10:37'!
test07RotatingRightTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'r') at: 1@1 heading: #Este!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:10:52'!
test07RotatingLeftTwiceTurnsNorthToSouth
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'l') at: 1@1 heading: #Sur! !

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:20:59'!
FAILURE!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:21:06' prior: 50605103!
test07RotatingLeftTwiceTurnsNorthToSouth
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'll') at: 1@1 heading: #Sur! !

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:21:07'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:22:10' prior: 50604892!
rotateLeft
	direction = #Oeste ifTrue: [direction:= #Sur].
	direction = #Norte ifTrue: [direction:= #Oeste].! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:22:42' prior: 50605125!
rotateLeft
	direction = #Oeste ifTrue: [direction:= #Sur. ^self].
	direction = #Norte ifTrue: [direction:= #Oeste. ^self].! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:22:43'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:22:43'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:22:43'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:22:43'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:22:43'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:22:43'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:22:43'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:22:43'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:30:19'!
test08RotatingLeftThreeTimesTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'lll') at: 1@1 heading: #Este! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:30:22'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:30:22'!
FAILURE!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:30:22'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:31:06' prior: 50605132!
rotateLeft
	direction = #Norte ifTrue: [direction:= #Oeste. ^self].
	direction = #Oeste ifTrue: [direction:= #Sur. ^self].
	direction = #Sur ifTrue: [direction:= #Este. ^self].! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:31:07'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:31:07'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:31:42'!
test08RotatingLeftFourTimesTurnsDoesNotModifyDirection
	self assertRover: ((Rover at: 1@1 heading: #Norte) command: 'llll') at: 1@1 heading: #Norte! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:31:54' prior: 50605208!
rotateLeft
	direction = #Norte ifTrue: [direction:= #Oeste. ^self].
	direction = #Oeste ifTrue: [direction:= #Sur. ^self].
	direction = #Sur ifTrue: [direction:= #Este. ^self].
	direction = #Este ifTrue: [direction:= #Norte. ^self].! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:31:55'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:31:55'!
PASSED!

Object subclass: #Direction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #Direction category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:32:29'!
Object subclass: #Direction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Direction subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #North category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:32:41'!
Direction subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Direction subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #South category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:32:44'!
Direction subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Direction subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #East category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:32:47'!
Direction subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Direction subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #West category: 'MarsRover-TDD' stamp: 'a 5/14/2023 17:32:51'!
Direction subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:34:25' prior: 50605256!
rotateLeft
	direction:=direction left
"
	direction = #Norte ifTrue: [direction:= #Oeste. ^self].
	direction = #Oeste ifTrue: [direction:= #Sur. ^self].
	direction = #Sur ifTrue: [direction:= #Este. ^self].
	direction = #Este ifTrue: [direction:= #Norte. ^self].
"
! !
!Direction methodsFor: 'no messages' stamp: 'a 5/14/2023 17:34:38'!
left 
	self subclassResponsibility ! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:34:45' overrides: 50605365!
left 
	self subclassResponsibility ! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:34:45' overrides: 50605365!
left 
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:34:45' overrides: 50605365!
left 
	self subclassResponsibility ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:34:45' overrides: 50605365!
left 
	self subclassResponsibility ! !

!methodRemoval: Direction #left stamp: 'a 5/14/2023 17:34:45'!
left 
	self subclassResponsibility !
!Direction methodsFor: 'no messages' stamp: 'a 5/14/2023 17:34:51'!
left 
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:35:12' prior: 50605380 overrides: 50605392!
left 
	^South new ! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:35:22' prior: 50605370 overrides: 50605392!
left 
	^East new! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:35:35' prior: 50605375 overrides: 50605392!
left 
	^West new ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:35:42' prior: 50605385 overrides: 50605392!
left 
	^North new! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:36:18'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:36:18'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:36:18'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:36:18'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:36:18'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:36:18'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:36:18'!
ERROR!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:36:18'!
ERROR!

!testRun: #RoverTests #test08RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:36:18'!
ERROR!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:36:18'!
ERROR!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:36:19'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:37:05' prior: 50604956!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= North new! !

!methodRemoval: Rover #rotateRight stamp: 'a 5/14/2023 17:37:31'!
rotateRight
	direction:=#Este!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:37:39'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test08RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:37:39'!
FAILURE!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:37:45'!
FAILURE!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:38:00' prior: 50603964!
test01RoverBeginsAtPositionAndHeading
	self assertRover: (Rover at: 1@1 heading: North new) at: 1@1 heading: #Norte! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:38:01'!
FAILURE!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:38:26' prior: 50605498!
test01RoverBeginsAtPositionAndHeading
	self assertRover: (Rover at: 1@1 heading: North new) at: 1@1 heading: North new! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:38:27'!
FAILURE!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:38:41' prior: 50604060!
test02MovingRoverForwardModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'f') at: 1@2 heading: North new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:38:50' prior: 50604155!
test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'ff') at: 1@3 heading: North new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:39:03' prior: 50604205!
test04MovingRoverBackwardsModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'b') at: 1@0 heading: North new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:39:40' prior: 50604357!
test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'bb') at: 1@-1 heading: North new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:39:55' prior: 50604822!
test06RotatingLeftTurnsNorthToWest
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'l') at: 1@1 heading: West new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:40:09' prior: 50605114!
test07RotatingLeftTwiceTurnsNorthToSouth
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'll') at: 1@1 heading: South new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:40:20' prior: 50605248!
test08RotatingLeftFourTimesTurnsDoesNotModifyDirection
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'llll') at: 1@1 heading: North new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:40:28' prior: 50605166!
test08RotatingLeftThreeTimesTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'lll') at: 1@1 heading: East new! !

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:40:30'!
FAILURE!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:40:33'!
FAILURE!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:40:44'!
FAILURE!
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:41:35' prior: 50605397 overrides: 50605392!
left 
	^North new ! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:41:42' prior: 50605402 overrides: 50605392!
left 
	^West new! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:42:18' prior: 50605599 overrides: 50605392!
left 
	^East new! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:42:24' prior: 50605594 overrides: 50605392!
left 
	^South new ! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:42:26'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test08RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:42:26'!
FAILURE!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:42:27'!
FAILURE!
!Direction methodsFor: 'nil' stamp: 'a 5/14/2023 17:44:08' overrides: 16901772!
= aDirection 
	self subclassResponsibility ! !
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:45:01' prior: 50605649 overrides: 16901772!
= aDirection 
	aDirection class = self class! !
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:45:02' prior: 50605654 overrides: 16901772!
= aDirection 
	^aDirection class = self class! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:45:06'!
FAILURE!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:45:06'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:45:06'!
FAILURE!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:45:08'!
FAILURE!
!North methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:46:04' prior: 50605603 overrides: 50605392!
left 
	^West new! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:46:27' prior: 50605406 overrides: 50605392!
left 
	^East new ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:46:35' prior: 50605410 overrides: 50605392!
left 
	^South new! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:46:41' prior: 50605607 overrides: 50605392!
left 
	^North new ! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:46:43'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:46:43'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:48:18'!
test06RotatingRightTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'r') at: 1@1 heading: East new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:48:25'!
test09RotatingRightTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'r') at: 1@1 heading: East new! !

!methodRemoval: RoverTests #test06RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:48:25'!
test06RotatingRightTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'r') at: 1@1 heading: East new!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:49:01'!
test09RotatingLeftFourTimesTurnsDoesNotModifyDirection
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'llll') at: 1@1 heading: North new! !

!methodRemoval: RoverTests #test08RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:49:01'!
test08RotatingLeftFourTimesTurnsDoesNotModifyDirection
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'llll') at: 1@1 heading: North new!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:49:07'!
test10RotatingRightTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'r') at: 1@1 heading: East new! !

!methodRemoval: RoverTests #test09RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:49:07'!
test09RotatingRightTurnsNorthToEast
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'r') at: 1@1 heading: East new!
!Rover methodsFor: 'nil' stamp: 'a 5/14/2023 17:49:33'!
rotateRight 
	direction:= direction right! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:50:36' prior: 50605803!
rotateRight 
	"(direction = North new) ifTrue: ["
	direction:= East new	! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:50:37'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:50:37'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:50:58'!
test11RotatingRightTwiceTurnsNorthToSouth
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'rr') at: 1@1 heading: South new! !

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:50:59'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:52:24' prior: 50605808!
rotateRight 
	"(direction = North new) ifTrue: ["
	direction = East new ifTrue: [direction:= South new. ^self]. 
	direction:= East new	
	! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:52:25'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:52:25'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:52:54'!
test12RotatingRightThreeTimesTurnsNorthToWest
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'rrr') at: 1@1 heading: West new! !

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 17:52:55'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:53:22' prior: 50605862!
rotateRight 
	"(direction = North new) ifTrue: ["
	direction = East new ifTrue: [direction:= South new. ^self]. 
	direction = South new ifTrue: [direction:= West new. ^self]. 
	direction:= East new	
	! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:53:23'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 17:53:23'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:53:55'!
test13RotatingRightFourTimesDoesNotChangeState
	self assertRover: ((Rover at: 1@1 heading: North new) command: 'rrrr') at: 1@1 heading: North new! !

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 17:53:57'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:54:26' prior: 50605921!
rotateRight 
	"(direction = North new) ifTrue: ["
	direction = East new ifTrue: [direction:= South new. ^self]. 
	direction = South new ifTrue: [direction:= West new. ^self]. 
	direction = West new ifTrue: [direction:= North new. ^self]. 
	direction:= East new	
	! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 17:54:27'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 17:54:27'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:54:44' prior: 50605986!
rotateRight 
	"(direction = North new) ifTrue: ["
	direction:= direction left
	! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:54:45'!
FAILURE!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 17:54:45'!
FAILURE!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 17:54:45'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:54:47'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:54:55' prior: 50606045!
rotateRight 
	"(direction = North new) ifTrue: ["
	direction:= direction right
	! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:54:55'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:54:55'!
ERROR!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:54:55'!
ERROR!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 17:54:55'!
ERROR!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 17:54:55'!
ERROR!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:54:57'!
ERROR!
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:02'!
right
	self shouldBeImplemented.! !
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:05' prior: 50606158!
right
	self subclassResponsibility ! !

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:55:08'!
ERROR!
!North methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:31' overrides: 50606162!
right
	self subclassResponsibility ! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:31' overrides: 50606162!
right
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:31' overrides: 50606162!
right
	self subclassResponsibility ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:31' overrides: 50606162!
right
	self subclassResponsibility ! !

!methodRemoval: Direction #right stamp: 'a 5/14/2023 17:55:31'!
right
	self subclassResponsibility !
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:38'!
right 
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:55:51' prior: 50606180 overrides: 50606192!
right
	^North new! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:56:03' prior: 50606170 overrides: 50606192!
right
	^East new! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:56:13' prior: 50606175 overrides: 50606192!
right
	^West new! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:56:23' prior: 50606185 overrides: 50606192!
right
	^North new! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:56:50' prior: 50606102!
rotateRight 
	direction:= direction right
	! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:56:52'!
FAILURE!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 17:56:52'!
FAILURE!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 17:56:52'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:56:53'!
FAILURE!
!East methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 17:57:25' prior: 50606197 overrides: 50606192!
right
	^South new! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 17:57:40'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 17:57:40'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:01:37'!
test14InvalidCommandRaisesError
	self should:[
		(Rover at: 1@1 heading: #Norte) command: 'p']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription! !

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:01:39'!
FAILURE!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:02:12' prior: 50606322!
test14InvalidCommandRaisesError
	self should:[
		(Rover at: 1@1 heading: North new) command: 'p']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:02:18' prior: 50604267!
test00NoCommandsRaisesError
	self should:[
		(Rover at: 1@1 heading: North new) command: '']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:02:19'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:02:19'!
FAILURE!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:02:19'!
FAILURE!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:02:47'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:02:47'!
FAILURE!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:02:47'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:03:57' prior: 50604787!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		currentCommandClass:= Command subclasses 
			detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
			ifNone: [self error: self class invalidCommandErrorDescription ].
		currentCommandClass new executeWith: self. 
		]! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:03:59'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:03:59'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:04:25' prior: 50606462!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self error: self class invalidCommandErrorDescription ].
		currentCommandClass new executeWith: self. 
		]! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:04:28'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:04:28'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:04:56' prior: 50605354!
rotateLeft
	direction:=direction left! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:08:20'!
test15InvalidCommandRaisesErrorAndDoesNotAllowAnyMoreCommands
	self should:[
		(Rover at: 1@1 heading: North new) command: 'pf']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription! !

!testRun: #RoverTests #test15InvalidCommandRaisesErrorAndDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:08:21'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandRaisesErrorAndDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:08:21'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:09:41'!
test15InvalidCommandDoesNotAllowAnyMoreCommands
	self should:[
		(Rover at: 1@1 heading: North new) command: 'pf']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription! !

!methodRemoval: RoverTests #test15InvalidCommandRaisesErrorAndDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:09:41'!
test15InvalidCommandRaisesErrorAndDoesNotAllowAnyMoreCommands
	self should:[
		(Rover at: 1@1 heading: North new) command: 'pf']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:11:14' prior: 50606668!
test15InvalidCommandDoesNotAllowAnyMoreCommands
	| rover |
	rover:= Rover at: 1@1 heading: North new.
	rover command: 'p'. 
	self should:[
		rover command: 'f']
	raise: 
		Error
	withMessageText: 
		Rover invalidStateErrorDescription! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:12:38' prior: 50606688!
test15InvalidCommandDoesNotAllowAnyMoreCommands
	| rover |
	rover:= Rover at: 1@1 heading: North new.
	[rover command: 'p'] on: Error do: []. 
	self should:[
		rover command: 'f']
	raise: 
		Error
	withMessageText: 
		Rover invalidStateErrorDescription! !

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:12:45'!
ERROR!
!Rover class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:12:51'!
invalidStateErrorDescription
	self shouldBeImplemented.! !
!Rover class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:13:17' prior: 50606713!
invalidStateErrorDescription
	^'El Rover está bloqueado'! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:13:18'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:13:18'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:13:18'!
FAILURE!
!Rover class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:13:31' prior: 50606718!
invalidStateErrorDescription
	^'El Rover está bloqueado, recibió un comando inválido'! !

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:13:32'!
FAILURE!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:13:40'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:13:40'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:13:40'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:15:00' prior: 50606529!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand. self error: self class invalidCommandErrorDescription ].
		currentCommandClass new executeWith: self. 
		]! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:15:01'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:15:01'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:15:01'!
FAILURE!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:15:03'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:16:13' prior: 50606849!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand].
		currentCommandClass new executeWith: self. 
		]! !

!classDefinition: #Rover category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:16:22'!
Object subclass: #Rover
	instanceVariableNames: 'position direction isBlocked'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!Rover methodsFor: 'nil' stamp: 'a 5/14/2023 18:16:18'!
handleInvalidCommand
	isBlocked:= true. 
	self error: self class invalidCommandErrorDescription! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:16:42' prior: 50605451!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= North new.
	isBlocked:= false. ! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:18:42' prior: 50606924!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		isBlocked ifTrue:[self error: self class invalidStateErrorDescription ].
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand].
		currentCommandClass new executeWith: self. 
		]! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:18:43'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:18:43'!
PASSED!

Object subclass: #RoverState
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #RoverState category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:19:10'!
Object subclass: #RoverState
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Object subclass: #RoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #RoverState category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:20:30'!
Object subclass: #RoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

RoverState subclass: #ValidRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #ValidRoverState category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:21:53'!
RoverState subclass: #ValidRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

RoverState subclass: #BlockedRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #BlockedRoverState category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:21:56'!
RoverState subclass: #BlockedRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #Rover category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:22:17'!
Object subclass: #Rover
	instanceVariableNames: 'position direction state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:22:17' prior: 50606952!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= North new.
	state:= false. ! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:22:17' prior: 50606959!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		state ifTrue:[self error: self class invalidStateErrorDescription ].
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand].
		currentCommandClass new executeWith: self. 
		]! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:22:17' prior: 50606946!
handleInvalidCommand
	state:= true. 
	self error: self class invalidCommandErrorDescription! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:22:27' prior: 50607084!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= North new.
	state:= ValidRoverState new. ! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:23:54' prior: 50607091!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		state handleCommand: currentCommand .
		"[self error: self class invalidStateErrorDescription ]."
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand].
		currentCommandClass new executeWith: self. 
		]! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:29:10' prior: 50607122!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		"[self error: self class invalidStateErrorDescription ]."
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand].
		state := state executeCommand: currentCommandClass new.
		]! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:29:34' prior: 50607109!
handleInvalidCommand
	state:= BlockedRoverState new. 
	self error: self class invalidCommandErrorDescription! !

----SNAPSHOT----(14 May 2023 18:32:42) CuisUniversity-5706.image priorSource: 8713034!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:33:30' prior: 50607141!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		"[self error: self class invalidStateErrorDescription ]."
		state := state executeCommand: currentCommandClass new.
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand].
		]! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:33:47' prior: 50607168!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand | | currentCommandClass | 
		"[self error: self class invalidStateErrorDescription ]."
		state := state executeCommand: currentCommand.
		currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: currentCommand ] 
				ifNone: [self handleInvalidCommand].
		]! !
!RoverState methodsFor: 'no messages' stamp: 'a 5/14/2023 18:34:11'!
executeCommand: aCommand 
	self subclassResponsibility ! !
!ValidRoverState methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:34:17' overrides: 50607203!
executeCommand: aCommand 
	self subclassResponsibility ! !
!BlockedRoverState methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:34:17' overrides: 50607203!
executeCommand: aCommand 
	self subclassResponsibility ! !

!methodRemoval: RoverState #executeCommand: stamp: 'a 5/14/2023 18:34:17'!
executeCommand: aCommand 
	self subclassResponsibility !
!RoverState methodsFor: 'nil' stamp: 'a 5/14/2023 18:34:33'!
executeCommand: aCommand 
	self subclassResponsibility ! !

!classDefinition: #BlockedRoverState category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:35:48'!
RoverState subclass: #BlockedRoverState
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!
!BlockedRoverState methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:35:47' prior: 50607215 overrides: 50607223!
executeCommand: aCommand 
	rover roverIsBlocked ! !

Object subclass: #RoverState
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

RoverState subclass: #BlockedRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #BlockedRoverState category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:36:06'!
RoverState subclass: #BlockedRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

Object subclass: #RoverState
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!classDefinition: #RoverState category: 'MarsRover-TDD' stamp: 'a 5/14/2023 18:36:10'!
Object subclass: #RoverState
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-TDD'!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:36:40'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:36:40'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:36:40'!
ERROR!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:36:40'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:36:40'!
FAILURE!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:36:41'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:37:05' prior: 50607115!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= North new.
	state:= ValidRoverState with: self . ! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:37:07'!
FAILURE!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:37:07'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:37:07'!
ERROR!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:37:09'!
FAILURE!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:37:24'!
FAILURE!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:37:24'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:37:24'!
ERROR!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:37:29'!
FAILURE!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:37:54'!
ERROR!
!RoverState class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:38:05'!
with: aRover 
	self shouldBeImplemented.! !
!RoverState class methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:38:34' prior: 50607451!
with: aRover 
	^self new initializeWith:aRover ! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:38:35'!
ERROR!
!RoverState methodsFor: 'initialization' stamp: 'a 5/14/2023 18:38:42'!
initializeWith: aRover 
	self shouldBeImplemented.
	rover := aRover.! !
!RoverState methodsFor: 'initialization' stamp: 'a 5/14/2023 18:38:47' prior: 50607463!
initializeWith: aRover 
	rover := aRover.! !

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:38:49'!
PASSED!

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:38:50'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:38:50'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:39:08'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:40:46' prior: 50607186!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand |  
		"[self error: self class invalidStateErrorDescription ]."
		state := state executeCommand: currentCommand.
		]! !
!ValidRoverState methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:41:02' prior: 50607209 overrides: 50607223!
executeCommand: aCommand 
	| currentCommandClass |
	currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: aCommand ] 
				ifNone: [rover handleInvalidCommand]. ! !
!ValidRoverState methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:42:21' prior: 50607499 overrides: 50607223!
executeCommand: aCommand 
	| currentCommandClass |
	currentCommandClass:= 
			Command subclasses 
				detect: [:aCommandClass | aCommandClass canHandle: aCommand ] 
				ifNone: [rover handleInvalidCommand]. 
				
	currentCommandClass new executeWith: rover! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:42:53' prior: 50607486!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand |  
		"[self error: self class invalidStateErrorDescription ]."
		state executeCommand: currentCommand.
		]! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:43:06' prior: 50607521!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [self error: 	self class invalidCommandErrorDescription ].
	
	aCommandsList do: [:currentCommand |  
		state executeCommand: currentCommand.
		]! !
!BlockedRoverState methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:44:02' prior: 50607237 overrides: 50607223!
executeCommand: aCommand 
	rover cannotExecute ! !
!BlockedRoverState methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:44:37' prior: 50607543 overrides: 50607223!
executeCommand: aCommand 
	rover roverIsBlockedWhenExecuting ! !
!Rover methodsFor: 'nil' stamp: 'a 5/14/2023 18:44:58'!
roverIsBlockedWhenExecuting
	self error: self class invalidStateErrorDescription ! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:45:01'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:45:01'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:45:01'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 18:46:25' prior: 50607159!
handleInvalidCommand
	state:= BlockedRoverState with: self. 
	self error: self class invalidCommandErrorDescription! !

!testRun: #RoverTests #test00NoCommandsRaisesError stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/14/2023 18:46:28'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/14/2023 18:46:28'!
PASSED!

----SNAPSHOT----(14 May 2023 18:46:41) CuisUniversity-5706.image priorSource: 8816463!

----SNAPSHOT----(14 May 2023 18:51:48) CuisUniversity-5706.image priorSource: 8832865!

----STARTUP---- (15 May 2023 10:07:02) as /home/antonio/Ingenieria de Software I/Cuis University/Rover/linux64/CuisUniversity-5706.image!

!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:10:19'!
test00NoCommandsDoesNothing
	self should:[
		(Rover at: 1@1 heading: North new) command: '']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription! !

!methodRemoval: RoverTests #test00NoCommandsRaisesError stamp: 'a 5/15/2023 10:10:19'!
test00NoCommandsRaisesError
	self should:[
		(Rover at: 1@1 heading: North new) command: '']
	raise: 
		Error
	withMessageText: 
		Rover invalidCommandErrorDescription!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:11:54' prior: 50607688!
test00NoCommandsDoesNothing
	self assertRover:((Rover at: 1@1  heading: North new) command: '')	 at: 1@1 heading: North new. ! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:11:56'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:12:13' prior: 50607532!
command: aCommandsList 
	aCommandsList isEmpty ifTrue: [^self ].
	
	aCommandsList do: [:currentCommand |  
		state executeCommand: currentCommand.
		]! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:12:19' prior: 50607715!
command: aCommandsList 
	
	aCommandsList do: [:currentCommand |  
		state executeCommand: currentCommand.
		]! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:12:21'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:12:21'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:14:13'!
test16
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'f')at: 1@0 heading: South! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:14:23' prior: 50607787!
test16
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'f')at: 1@0 heading: South new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:14:56'!
test16RoverHeadingSouthMovesForwardCorrectly
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'f')at: 1@0 heading: South new! !

!methodRemoval: RoverTests #test16 stamp: 'a 5/15/2023 10:14:56'!
test16
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'f')at: 1@0 heading: South new!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardCorrectly stamp: 'a 5/15/2023 10:15:12'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:16:33' prior: 50604573!
moveForward 
	direction = South new ifTrue: [1@0].
	position := position x @ (position y +1)! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:16:43' prior: 50607816!
moveForward 
	direction = South new ifTrue: [position:=1@0].
	position := position x @ (position y +1)! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:16:47' prior: 50607822!
moveForward 
	direction = South new ifTrue: [position:=1@0. ^self].
	position := position x @ (position y +1)! !

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardCorrectly stamp: 'a 5/15/2023 10:16:48'!
FAILURE!

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:17:11'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardCorrectly stamp: 'a 5/15/2023 10:17:11'!
FAILURE!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardCorrectly stamp: 'a 5/15/2023 10:17:11'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:18:25' prior: 50607327!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= aDirection new.
	state:= ValidRoverState with: self . ! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:18:26'!
FAILURE!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:18:26'!
ERROR!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardCorrectly stamp: 'a 5/15/2023 10:18:26'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:18:37' prior: 50607900!
intializeAt: aPosition heading: aDirection 
	position:= 1@1 .
	direction:= aDirection.
	state:= ValidRoverState with: self . ! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:19:12' prior: 50607965!
intializeAt: aPosition heading: aDirection 
	position:=aPosition .
	direction:= aDirection.
	state:= ValidRoverState with: self . ! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:19:19'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardCorrectly stamp: 'a 5/15/2023 10:19:19'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:19:31'!
test16RoverHeadingSouthMovesForwardOnceCorrectly
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'f')at: 1@0 heading: South new! !

!methodRemoval: RoverTests #test16RoverHeadingSouthMovesForwardCorrectly stamp: 'a 5/15/2023 10:19:31'!
test16RoverHeadingSouthMovesForwardCorrectly
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'f')at: 1@0 heading: South new!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:19:46'!
test17RoverHeadingSouthMovesForwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'ff')at: 1@0 heading: South new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:19:50' prior: 50608052!
test17RoverHeadingSouthMovesForwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'ff')at: 1@-1 heading: South new! !

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:19:51'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:20:19' prior: 50607829!
moveForward 
	direction = South new ifTrue: [position:=position x @ (position y -1). ^self].
	position := position x @ (position y +1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:20:20'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:20:20'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:21:01'!
test18RoverHeadingEastMovesForwardOnceCorrectly
	self assertRover: ((Rover at: 1@1  heading: East new) command: 'f')at: 2@1 heading: East new! !

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:21:01'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:21:27' prior: 50608072!
moveForward 
	direction = East new ifTrue: [position:=2@1. ^self].
	direction = South new ifTrue: [position:=position x @ (position y -1). ^self].
	position := position x @ (position y +1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:21:28'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:21:28'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:21:42'!
test19RoverHeadingEastMovesForwardTwiceeCorrectly
	self assertRover: ((Rover at: 1@1  heading: East new) command: 'ff')at: 3@1 heading: East new! !

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:21:42'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:22:04' prior: 50608152!
moveForward 
	direction = East new ifTrue: [position:=(position x+1) @position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y -1). ^self].
	position := position x @ (position y +1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:22:04'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:22:04'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:22:42'!
test20RoverHeadingWestMovesForwardOnceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'f')at: 0@1 heading: West new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:23:03'!
test21RoverHeadingWestMovesForwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'ff')at: -1@1 heading: West new! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:23:15' prior: 50608237!
moveForward 
	direction = East new ifTrue: [position:=(position x-1) @position y. ^self].
	direction = East new ifTrue: [position:=(position x+1) @position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y -1). ^self].
	position := position x @ (position y +1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:23:15'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:23:15'!
FAILURE!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:23:15'!
FAILURE!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:23:15'!
FAILURE!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:23:15'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:23:22' prior: 50608330!
moveForward 
	direction = West new ifTrue: [position:=(position x-1) @position y. ^self].
	direction = East new ifTrue: [position:=(position x+1) @position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y -1). ^self].
	position := position x @ (position y +1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:23:23'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:23:23'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:24:46' prior: 50608418!
moveForward 

	^direction moveForwardWith: self.
	"
	direction = West new ifTrue: [position:=(position x-1) @position y. ^self].
	direction = East new ifTrue: [position:=(position x+1) @position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y -1). ^self].
	position := position x @ (position y +1)
	"! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:24:48'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:24:48'!
ERROR!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:24:50'!
ERROR!
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:24:54'!
moveForwardWith: aRover 
	self shouldBeImplemented.! !
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:24:59' prior: 50608598!
moveForwardWith: aRover 
	self subclassResponsibility ! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:25:06' overrides: 50608603!
moveForwardWith: aRover 
	self subclassResponsibility ! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:25:06' overrides: 50608603!
moveForwardWith: aRover 
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:25:06' overrides: 50608603!
moveForwardWith: aRover 
	self subclassResponsibility ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:25:06' overrides: 50608603!
moveForwardWith: aRover 
	self subclassResponsibility ! !

!methodRemoval: Direction #moveForwardWith: stamp: 'a 5/15/2023 10:25:06'!
moveForwardWith: aRover 
	self subclassResponsibility !
!Direction methodsFor: 'nil' stamp: 'a 5/15/2023 10:25:14'!
moveForwardWith: aRover 
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:25:43' prior: 50608618 overrides: 50608631!
moveForwardWith: aRover 
	aRover moveRight ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:26:25' prior: 50608637 overrides: 50608631!
moveForwardWith: aRover 
	aRover moveEast ! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:26:34' prior: 50608608 overrides: 50608631!
moveForwardWith: aRover 
	aRover moveNorth ! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:26:57' prior: 50608613 overrides: 50608631!
moveForwardWith: aRover 
	aRover moveSouth ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:27:07' prior: 50608623 overrides: 50608631!
moveForwardWith: aRover 
	aRover moveWest ! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:27:10'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:27:10'!
ERROR!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:11'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:27:15'!
moveNorth
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:27:32' prior: 50608740!
moveNorth
	position := position x @ (position y +1)! !

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:34'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:34'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:35'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:27:38'!
moveSouth
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:27:55' prior: 50608760!
moveSouth
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:27:56'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:56'!
ERROR!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:27:56'!
ERROR!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:56'!
ERROR!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:27:56'!
ERROR!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:27:58'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:28:01'!
moveEast
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:28:22' prior: 50608847!
moveEast
	position := (position x +1) @ position y! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:28:23'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:23'!
ERROR!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:28:23'!
ERROR!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:24'!
ERROR!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:28:27'!
moveWest
	self shouldBeImplemented.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:28:40' prior: 50608934!
moveWest
	position := (position x -1)@position y! !

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:41'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:28:42'!
PASSED!

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:28:49'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:28:49'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:29:02' prior: 50608506!
moveForward 

	^direction moveForwardWith: self.! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:29:12' prior: 50609025!
moveForward 

	^direction moveForwardWith: self.
! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:29:49' prior: 50604578!
moveBackward 
	
	direction = West new ifTrue: [position:=(position x+1) @position y. ^self].
	direction = East new ifTrue: [position:=(position x-1) @position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)
	! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/14/2023 16:38:48' prior: 50609035!
moveBackward 
	position := position x @ (position y -1)! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:30:55'!
test22RoverHeadingSouthMovesBackwardOnceCorrectly
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'b')at: 1@2 heading: South new! !

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:30:56'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:31:23' prior: 50609048!
moveBackward 
	direction = South new ifTrue: [position:= 1@2. ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:31:23'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:31:23'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:31:42'!
test23RoverHeadingSouthMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: South new) command: 'bb')at: 1@3 heading: South new! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:31:58' prior: 50609064!
moveBackward 
	direction = South new ifTrue: [position x @ (position y +1)].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:31:59'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:31:59'!
FAILURE!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:31:59'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:32:06' prior: 50609157!
moveBackward 
	direction = South new ifTrue: [position x @ (position y +1). ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:32:06'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:32:06'!
FAILURE!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:32:06'!
FAILURE!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:32:08'!
FAILURE!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:32:52'!
FAILURE!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:33:01'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:33:30' prior: 50609247!
moveBackward 
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:33:32'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:33:32'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:34:09'!
test24RoverHeadingEastMovesBackwardOnceCorrectly
	self assertRover: ((Rover at: 1@1  heading: East new) command: 'b')at: 0@1 heading: East new! !

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:34:11'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:34:36' prior: 50609347!
moveBackward 
	direction = East new ifTrue: [position:=0@1. ^self].
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:34:37'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:34:52'!
test25RoverHeadingEastMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: East new) command: 'bb')at: -1@1 heading: East new! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:35:13' prior: 50609372!
moveBackward 
	direction = East new ifTrue: [position:=(position x-1) @ position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:13'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:35:29'!
test25RoverHeadingWestMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'b')at: 2@1 heading: East new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:35:32' prior: 50609574!
test25RoverHeadingWestMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'b')at: 2@1 heading: West new! !
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:35:50' prior: 50609475!
moveBackward 
	direction = West new ifTrue: [position:=2@1. ^self].
	direction = East new ifTrue: [position:=(position x-1) @ position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:51'!
PASSED!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:35:59'!
test26RoverHeadingWestMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'b')at: 2@1 heading: West new! !

!methodRemoval: RoverTests #test25RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:35:59'!
test25RoverHeadingWestMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'b')at: 2@1 heading: West new!
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:36:20'!
test27RoverHeadingWestMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'b')at: 2@1 heading: West new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:36:26' prior: 50609709!
test27RoverHeadingWestMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'bb')at: 3@1 heading: West new! !
!RoverTests methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:36:32'!
test26RoverHeadingWestMovesBackwardOnceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'b')at: 2@1 heading: West new! !

!methodRemoval: RoverTests #test26RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:34'!
test26RoverHeadingWestMovesBackwardTwiceCorrectly
	self assertRover: ((Rover at: 1@1  heading: West new) command: 'b')at: 2@1 heading: West new!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:36:45' prior: 50609590!
moveBackward 
	direction = East new ifTrue: [position:=(position x+1) @ position y. ^self].
	direction = East new ifTrue: [position:=(position x-1) @ position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:36:45'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:46'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:36:46'!
FAILURE!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:46'!
FAILURE!

!testRun: #RoverTests #test26RoverHeadingWestMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:36:46'!
FAILURE!

!testRun: #RoverTests #test27RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:46'!
FAILURE!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:36:51' prior: 50609741!
moveBackward 
	direction = West new ifTrue: [position:=(position x+1) @ position y. ^self].
	direction = East new ifTrue: [position:=(position x-1) @ position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test26RoverHeadingWestMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!

!testRun: #RoverTests #test27RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:36:52'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:09' prior: 50609850!
moveBackward
	direction moveBackwardWith: self
	"
	direction = West new ifTrue: [position:=(position x+1) @ position y. ^self].
	direction = East new ifTrue: [position:=(position x-1) @ position y. ^self].
	direction = South new ifTrue: [position:=position x @ (position y +1). ^self].
	position := position x @ (position y -1)
	"! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:38:11'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test26RoverHeadingWestMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test27RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:38:11'!
ERROR!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:38:13'!
ERROR!
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:17'!
moveBackwardWith: aRover 
	self shouldBeImplemented.! !
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:34' prior: 50610072!
moveBackwardWith: aRover 
	self subclassResponsibility ! !

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:38:35'!
ERROR!
!North methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:44' overrides: 50610077!
moveBackwardWith: aRover 
	self subclassResponsibility ! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:44' overrides: 50610077!
moveBackwardWith: aRover 
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:44' overrides: 50610077!
moveBackwardWith: aRover 
	self subclassResponsibility ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:44' overrides: 50610077!
moveBackwardWith: aRover 
	self subclassResponsibility ! !

!methodRemoval: Direction #moveBackwardWith: stamp: 'a 5/15/2023 10:38:44'!
moveBackwardWith: aRover 
	self subclassResponsibility !
!Direction methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:38:51'!
moveBackwardWith: aRover 
	self subclassResponsibility ! !
!East methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:39:10' prior: 50610096 overrides: 50610110!
moveBackwardWith: aRover 
	aRover moveWest ! !
!North methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:39:18' prior: 50610086 overrides: 50610110!
moveBackwardWith: aRover 
	aRover moveSouth ! !
!South methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:39:25' prior: 50610091 overrides: 50610110!
moveBackwardWith: aRover 
	aRover moveNorth ! !
!West methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:39:32' prior: 50610101 overrides: 50610110!
moveBackwardWith: aRover 
	aRover moveEast ! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test26RoverHeadingWestMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!

!testRun: #RoverTests #test27RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:35'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:39:43' prior: 50609959!
moveBackward
	direction moveBackwardWith: self! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test26RoverHeadingWestMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!

!testRun: #RoverTests #test27RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:44'!
PASSED!
!Rover methodsFor: 'as yet unclassified' stamp: 'a 5/15/2023 10:39:52' prior: 50609030!
moveForward 

	direction moveForwardWith: self.
! !

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:39:52'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test26RoverHeadingWestMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

!testRun: #RoverTests #test27RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:39:53'!
PASSED!

----SNAPSHOT----(15 May 2023 10:40:03) CuisUniversity-5706.image priorSource: 8832953!

!testRun: #RoverTests #test00NoCommandsDoesNothing stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test01RoverBeginsAtPositionAndHeading stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test02MovingRoverForwardModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test03MovingRoverForwardTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test04MovingRoverBackwardsModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test05MovingRoverBackwardsTwiceModifiesCorrectlyRoversPosition stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test06RotatingLeftTurnsNorthToWest stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test07RotatingLeftTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test08RotatingLeftThreeTimesTurnsNorthToEast stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test09RotatingLeftFourTimesTurnsDoesNotModifyDirection stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test10RotatingRightTurnsNorthToEast stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test11RotatingRightTwiceTurnsNorthToSouth stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test12RotatingRightThreeTimesTurnsNorthToWest stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test13RotatingRightFourTimesDoesNotChangeState stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test14InvalidCommandRaisesError stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test15InvalidCommandDoesNotAllowAnyMoreCommands stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test16RoverHeadingSouthMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test17RoverHeadingSouthMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test18RoverHeadingEastMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test19RoverHeadingEastMovesForwardTwiceeCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test20RoverHeadingWestMovesForwardOnceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test21RoverHeadingWestMovesForwardTwiceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test22RoverHeadingSouthMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test23RoverHeadingSouthMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test24RoverHeadingEastMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test25RoverHeadingEastMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test26RoverHeadingWestMovesBackwardOnceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

!testRun: #RoverTests #test27RoverHeadingWestMovesBackwardTwiceCorrectly stamp: 'a 5/15/2023 10:51:36'!
PASSED!

----SNAPSHOT----(15 May 2023 10:51:39) CuisUniversity-5706.image priorSource: 8921059!

----SNAPSHOT----(15 May 2023 10:57:37) CuisUniversity-5706.image priorSource: 8924235!