

----QUIT----(26 May 2023 20:53:32) CuisUniversity-5819.image priorSource: 4873322!

----STARTUP---- (26 May 2023 20:53:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5819.image!


----QUIT----(26 May 2023 20:53:33) CuisUniversity-5819.image priorSource: 9302089!

----STARTUP---- (4 June 2023 17:52:08) as /home/antonio/Ingenieria de Software I/Cuis University/linux64/CuisUniversity-5819.image!


----End fileIn of /home/antonio/Descargas/MarsRover-WithHeading.st----!

TestCase subclass: #MarsRoverLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogTest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 17:53:37'!
TestCase subclass: #MarsRoverLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 17:55:53'!
Object subclass: #Log
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 17:55:38'!
test01NewLogIsEmpty 
	| newLog |
	newLog := Log for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog text. ! !

!classRenamed: #Log as: #Logger stamp: 'a 6/4/2023 17:55:57'!
Smalltalk renameClassNamed: #Log as: #Logger!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 17:55:57' prior: 50622860!
test01NewLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog text. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 17:56:24' prior: 50622872!
test01NewLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. ! !
!Logger methodsFor: 'no messages' stamp: 'a 6/4/2023 17:56:47'!
log 
	^OrderedCollection new. ! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'a 6/4/2023 17:57:01'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 17:57:02'!
ERROR!

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 17:57:02'!
ERROR!
!Logger class methodsFor: 'no messages' stamp: 'a 6/4/2023 17:57:33'!
for: aMarsRover
	self new initializeFor: aMarsRover! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 17:57:41' prior: 50622950!
for: aMarsRover
	^self new initializeFor: aMarsRover! !
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 17:58:35'!
initializeFor: aMarsRover 
! !

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 17:58:36'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 17:59:58'!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover 
	self assert: OrderedCollection new equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:00:56' prior: 50622965!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: OrderedCollection new equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:00:57'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 18:00:57'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:00:57'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:02:17' prior: 50622975!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:02:18'!
FAILURE!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:02:50'!
Object subclass: #Logger
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 18:02:49' prior: 50622959!
initializeFor: aMarsRover 
	rover := aMarsRover ! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:04:13'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:04:11' prior: 50622608!
moveNorth
	
	position := position + (0@1). 
	logger positionChanged: 1@2. ! !
!MarsRover methodsFor: 'nil' stamp: 'a 6/4/2023 18:04:50'!
logger: aLogger 
	logger := aLogger ! !

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 18:05:04'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:05:04'!
ERROR!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:05:04'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:07:20' prior: 50622955!
for: aMarsRover
	|logger| 
	logger := self new initializeFor: aMarsRover. 
	aMarsRover logger: logger. 
	^logger! !

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 18:07:21'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:07:21'!
ERROR!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:07:21'!
ERROR!
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:07:45'!
positionChanged: aRenameMe1 
	self shouldBeImplemented.! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:08:18'!
Object subclass: #Logger
	instanceVariableNames: 'rover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:08:17' prior: 50623062!
positionChanged: aPosition 
	log add: aPosition . 
	! !

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:08:19'!
ERROR!
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 18:09:01' prior: 50623016!
initializeFor: aMarsRover 
	log:= OrderedCollection new. ! !
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 18:09:29' overrides: 16920235!
initialize
	log:= OrderedCollection new. ! !

!methodRemoval: Logger #initializeFor: stamp: 'a 6/4/2023 18:09:33'!
initializeFor: aMarsRover 
	log:= OrderedCollection new. !
!Logger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:10:00' prior: 50623047!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover logger: logger. 
	^logger! !

Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:10:09'!
Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 18:10:19'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:10:19'!
FAILURE!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:10:19'!
FAILURE!
!Logger methodsFor: 'log' stamp: 'a 6/4/2023 18:10:35' prior: 50622888!
log 
	^log. ! !

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 18:10:36'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:10:36'!
FAILURE!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:10:36'!
FAILURE!
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:10:49' prior: 50623074!
positionChanged: aPosition 
	log add: aPosition asString . 
	! !

!testRun: #MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 18:10:50'!
PASSED!

!testRun: #MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:10:50'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:11:01'!
test02LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:11:08'!
test03LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test02LogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:11:08'!
test02LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:12:55'!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:12:55'!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:13:01'!
test01NewPositionLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 18:13:01'!
test01NewLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:13:10'!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test03LogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:13:10'!
test03LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:13:39' prior: 50623216!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'fbb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '1@0') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:13:40'!
FAILURE!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:13:54'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:14:27' prior: 50623028!
moveNorth
	
	position := position + (0@1). 
	logger positionChanged: position. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:14:41' prior: 50622612!
moveSouth
	
	position := position + (0@-1). 
	logger positionChanged: position. ! !

marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
newLog := Logger for: marsRover. 
marsRover process: 'fblfb'.!

marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
newLog := Logger for: marsRover. 
marsRover process: 'fblfb'.
marsRover!

marsRover process: 'fblfb'.!

marsRover process: 'lf'.!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:17:35' prior: 50623239!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '2@1' with:'1@1') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:17:36'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:18:13' prior: 50622600!
moveEast
	
	position := position + (1@0).
	logger positionChanged: position. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:18:21' prior: 50622616!
moveWest
	
	position := position + (-1@0).
	logger positionChanged: position. ! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:18:24'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:18:24'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:18:24'!
FAILURE!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:18:24'!
FAILURE!

marsRover process: 'fblfb'.!

marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
newLog := Logger for: marsRover. 
marsRover process: 'fblfb'.!

marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
newLog := Logger for: marsRover. 
marsRover process: 'fblf'.!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:20:28' prior: 50623280!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:20:29'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:20:30'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:20:30'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:20:30'!
PASSED!

!classRenamed: #Logger as: #PositionLogger stamp: 'a 6/4/2023 18:20:41'!
Smalltalk renameClassNamed: #Logger as: #PositionLogger!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:20:41' prior: 50623329!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := PositionLogger for: marsRover. 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:20:41' prior: 50623179!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := PositionLogger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:20:41' prior: 50623200!
test01NewPositionLogIsEmpty 
	| newLog |
	newLog := PositionLogger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. ! !

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:23:21'!
Object subclass: #DirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:23:15'!
test04DirectionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := DirectionLogger for: marsRover. 
	marsRover process: 'rlrrrr'.
	self assert: (OrderedCollection with: 'East' with: 'North' with: 'East' with:'South' with: 'West' with: 'North') equals: newLog log. ! !

Object subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:23:34'!
Object subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #PositionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:24:02'!
Object subclass: #PositionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:24:05'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:24:06'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:24:07'!
PASSED!

Object subclass: #DirectionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:24:18'!
Object subclass: #DirectionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!DirectionLogger methodsFor: 'no messages' stamp: 'a 6/4/2023 18:24:32'!
log 
	^log! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:24:56'!
headingChanged: aHeading
	log add: aHeading . ! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:25:14' overrides: 16920235!
initialize 
	log:=OrderedCollection new. ! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:25:18' prior: 50623469 overrides: 16920235!
initialize 
	log:=OrderedCollection new! !
!DirectionLogger class methodsFor: 'no messages' stamp: 'a 6/4/2023 18:25:31'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover logger: logger. 
	^logger! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:25:40'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:25:40'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:25:40'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:25:40'!
FAILURE!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:25:40'!
FAILURE!
!DirectionLogger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:27:00' prior: 50623479!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover directionLogger: logger. 
	^logger! !
!PositionLogger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:27:23' prior: 50623096!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover logger: logger. 
	^logger! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:27:30'!
positionLogger: aLogger 
	logger := aLogger ! !
!PositionLogger class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:27:30' prior: 50623510!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover positionLogger: logger. 
	^logger! !

!methodRemoval: MarsRover #logger: stamp: 'a 6/4/2023 18:27:30'!
logger: aLogger 
	logger := aLogger !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:28:00'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50623301!
moveWest
	
	position := position + (-1@0).
	positionLogger positionChanged: position. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50623258!
moveNorth
	
	position := position + (0@1). 
	positionLogger positionChanged: position. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50623516!
positionLogger: aLogger 
	positionLogger := aLogger ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50623296!
moveEast
	
	position := position + (1@0).
	positionLogger positionChanged: position. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50623264!
moveSouth
	
	position := position + (0@-1). 
	positionLogger positionChanged: position. ! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger headingLogger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:28:06'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger headingLogger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:16'!
headingLogger: aLogger 
	headingLogger := aLogger ! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'a 6/4/2023 18:28:19'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'a 6/4/2023 18:28:19'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'a 6/4/2023 18:28:19'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'a 6/4/2023 18:28:19'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'a 6/4/2023 18:28:19'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'a 6/4/2023 18:28:19'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'a 6/4/2023 18:28:19'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'a 6/4/2023 18:28:19'!
ERROR!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:28:22'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:28:22'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:28:22'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:28:22'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:28:22'!
ERROR!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:28:28'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:28:28'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:28:28'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:28:28'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:28:28'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:36'!
directionLogger: logger 
	self shouldBeImplemented.! !

!methodRemoval: MarsRover #directionLogger: stamp: 'a 6/4/2023 18:29:02'!
directionLogger: logger 
	self shouldBeImplemented.!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:29:09'!
directionLogger: aLogger 
	headingLogger := aLogger ! !

!methodRemoval: MarsRover #headingLogger: stamp: 'a 6/4/2023 18:29:09'!
headingLogger: aLogger 
	headingLogger := aLogger !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:29:13'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:29:13'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:29:13'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:29:13'!
FAILURE!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:29:13'!
FAILURE!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:29:34'!
FAILURE!
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:30:07' prior: 50623464!
headingChanged: aHeading
	log add: aHeading asString. ! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:30:13'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:30:13'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:30:13'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:30:13'!
FAILURE!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:30:13'!
FAILURE!
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:31:27' prior: 50623713!
headingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:31:30'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:31:30'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:31:30'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:31:30'!
FAILURE!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:31:30'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:32:58' prior: 50622550!
headEast
	
	head := MarsRoverHeadingEast for: self. 
	headingLogger headingChanged: head! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:33:11' prior: 50622554!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	headingLogger headingChanged: head! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:33:15' prior: 50622558!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	headingLogger headingChanged: head! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:33:20' prior: 50622562!
headWest
	
	head := MarsRoverHeadingWest for: self .
	headingLogger headingChanged: head! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:33:23'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:33:23'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:33:23'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:33:23'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:33:23'!
ERROR!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:34:04'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:34:04'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:34:04'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:34:04'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:34:04'!
ERROR!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:35:46'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:35:46'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:35:46'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:35:46'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:35:46'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:11' prior: 50623778!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:18' prior: 50623772!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:26' prior: 50623766!
headEast
	
	head := MarsRoverHeadingEast for: self. 
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:31' prior: 50623784!
headWest
	
	head := MarsRoverHeadingWest for: self .
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:37:33'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:37:33'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:37:33'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:37:33'!
PASSED!

Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:38:35'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:38:45'!
Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #PositionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:39:02'!
Logger subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #DirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:39:13'!
Logger subclass: #DirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:39:24'!
log 
	^log! !

!methodRemoval: DirectionLogger #log stamp: 'a 6/4/2023 18:39:24'!
log 
	^log!

!methodRemoval: PositionLogger #log stamp: 'a 6/4/2023 18:39:24'!
log 
	^log. !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:39:30' overrides: 16920235!
initialize 
	log:=OrderedCollection new! !

!methodRemoval: DirectionLogger #initialize stamp: 'a 6/4/2023 18:39:30'!
initialize 
	log:=OrderedCollection new!

!methodRemoval: PositionLogger #initialize stamp: 'a 6/4/2023 18:39:30'!
initialize
	log:= OrderedCollection new. !
!Logger class methodsFor: 'no messages' stamp: 'a 6/4/2023 18:40:57'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover addLogger: logger. 
	^logger! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:41:21'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger headingLogger loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:41:19'!
addLogger: aLogger 
	loggers add: aLogger ! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:41:33'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:05' prior: 50623855!
headEast
	
	head := MarsRoverHeadingEast for: self. 
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:14' prior: 50623848!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:16' prior: 50623841!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:22' prior: 50623862!
headWest
	
	head := MarsRoverHeadingWest for: self .
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:42' prior: 50623545!
moveNorth
	
	position := position + (0@1). 
	loggers do: [:logger | logger positionChanged: position]. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:51' prior: 50624009!
moveNorth
	
	position := position + (0@1). 
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:56' prior: 50623562!
moveSouth
	
	position := position + (0@-1). 
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:59' prior: 50623539!
moveWest
	
	position := position + (-1@0).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:43:04' prior: 50623556!
moveEast
	
	position := position + (1@0).
	loggers do: [:logger | logger positionChanged: position]! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:43:09'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:43:09'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:43:09'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:43:09'!
ERROR!
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:43:24'!
positionChanged: aPosition 
	log add: aPosition asString . 
	! !

!methodRemoval: PositionLogger #positionChanged: stamp: 'a 6/4/2023 18:43:24'!
positionChanged: aPosition 
	log add: aPosition asString . 
	!
!PositionLogger methodsFor: 'nil' stamp: 'a 6/4/2023 18:43:53' overrides: 50624052!
positionChanged: aPosition 
	log add: aPosition asString . ! !
!Logger methodsFor: 'nil' stamp: 'a 6/4/2023 18:44:12'!
headingChanged: aHeading
	self subclassResponsibility ! !
!PositionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:44:35' overrides: 50624066!
headingChanged: aHeading ! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:44:45' overrides: 50624052!
positionChanged: aHeading
	! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:45:55'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:45:55'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:45:55'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:45:55'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:45:57'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 18:46:31' prior: 50622544!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:46:36'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:46:36'!
FAILURE!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:46:36'!
FAILURE!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:46:36'!
FAILURE!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:46:41'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:46:41'!
FAILURE!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:46:41'!
FAILURE!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:46:41'!
FAILURE!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:46:42'!
FAILURE!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:47:04' prior: 50623373!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:47:11'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:47:12'!
FAILURE!

!methodRemoval: PositionLogger class #for: stamp: 'a 6/4/2023 18:47:43'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover positionLogger: logger. 
	^logger!

!methodRemoval: DirectionLogger class #for: stamp: 'a 6/4/2023 18:47:49'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover directionLogger: logger. 
	^logger!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:47:51'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:47:51'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:47:51'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:47:51'!
PASSED!

Logger subclass: #PositionAndDirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndDirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 18:50:36'!
Logger subclass: #PositionAndDirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionAndDirectionLogger methodsFor: 'no messages' stamp: 'a 6/4/2023 18:50:46'!
eadingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].! !
!PositionAndDirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:50:57' overrides: 50624066!
headingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].! !

!methodRemoval: PositionAndDirectionLogger #eadingChanged: stamp: 'a 6/4/2023 18:50:57'!
eadingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].!
!PositionAndDirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:51:06' overrides: 50624052!
positionChanged: aPosition 
	log add: aPosition asString . ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:52:29'!
test05DirectionAndPositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := DirectionLogger for: marsRover. 
	marsRover process: 'rflbr'.
	self assert: (OrderedCollection with: 'East' with: '2@1' with: 'North' with:'2@0' with: 'East') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:52:30'!
FAILURE!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:52:54' prior: 50624236!
test05DirectionAndPositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog :=PositionAndDirectionLogger for: marsRover. 
	marsRover process: 'rflbr'.
	self assert: (OrderedCollection with: 'East' with: '2@1' with: 'North' with:'2@0' with: 'East') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:52:55'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 18:52:55'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 18:52:55'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:52:55'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:52:55'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 18:52:55'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:14' prior: 50624027!
moveWest
	
	position update: (position + (-1@0)).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:27' prior: 50624021!
moveSouth
	
	position update: (position + (0@-1)).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:36' prior: 50624015!
moveNorth
	
	position update: (position + (0@1)).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:45' prior: 50624033!
moveEast
	
	position update: (position + (1@0)).
	loggers do: [:logger | logger positionChanged: position]! !

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:04:16'!
Object subclass: #PositionWatcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:04:11' prior: 50624097!
initializeAt: aPosition heading: aHeadingType

	position := PositionWatcher watching: aPosition.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:04:34' prior: 50624321!
initializeAt: aPosition heading: aHeadingType

	position := PositionWatcher for: aPosition.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !

ProtoObject subclass: #PositionWatcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:04:48'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: 'PositionWatcher class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:05:07'!
PositionWatcher class
	instanceVariableNames: 'position'!
!PositionWatcher class methodsFor: 'no messages' stamp: 'a 6/4/2023 19:05:06'!
for: aPosition 
	position:= aPosition ! !
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:05:31' prior: 50624329!
initializeAt: aPosition heading: aHeadingType

	position := PositionWatcher for: aPosition notifying: loggers.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:06:26' prior: 50624355!
for: aPosition 
	position:= aPosition 
	! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'a 6/4/2023 19:06:26'!
ERROR!

!classDefinition: 'PositionWatcher class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:06:53'!
PositionWatcher class
	instanceVariableNames: 'position notifiers'!
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:06:48' prior: 50624368!
for: aPosition 
	| loggers |
	position:= aPosition. 
	notifiers:= loggers! !
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:08:02'!
for: aPosition notifying: loggers
	position:= aPosition. 
	notifiers:= loggers! !

!methodRemoval: PositionWatcher class #for: stamp: 'a 6/4/2023 19:08:06'!
for: aPosition 
	| loggers |
	position:= aPosition. 
	notifiers:= loggers!

PositionWatcher class
	instanceVariableNames: ''!

!classDefinition: 'PositionWatcher class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:09:36'!
PositionWatcher class
	instanceVariableNames: ''!

ProtoObject subclass: #PositionWatcher
	instanceVariableNames: 'position notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:09:39'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: 'position notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:10:10' prior: 50624455!
for: aPosition notifying: loggers
	^self new initializeFor:aPosition notifying: loggers! !
!PositionWatcher methodsFor: 'no messages' stamp: 'a 6/4/2023 19:10:58'!
initializeFor: aPosition notifying: objectsToNotify 
	position := aPosition . 
	notifiers := objectsToNotify ! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:11:45'!
update: newPosition 
	position:= newPosition . 
	notifiers do: [:currentNotifier | currentNotifier positionChanged: newPosition ]. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:11' prior: 50624301!
moveNorth
	
	position update: (position + (0@1)).! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:15' prior: 50624307!
moveEast
	
	position update: (position + (1@0)).! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:19' prior: 50624295!
moveSouth
	
	position update: (position + (0@-1)).
! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:23' prior: 50624289!
moveWest
	
	position update: (position + (-1@0)).
! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:12:27'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:12:27'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:12:27'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:12:27'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:12:27'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:12:28'!
ERROR!

----STARTUP---- (4 June 2023 19:13:00) as /home/antonio/Ingenieria de Software I/Cuis University/linux64/CuisUniversity-5819.image!


!classDefinition: #MarsRoverTest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverTest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:21:23'!
test01DoesNotMoveWhenNoCommand

	self 
		assertIsAt: 1@2 
		heading: self north 
		afterProcessing: '' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:28:12'!
test02IsAtFailsForDifferentPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@2 heading: self north)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:28:31'!
test03IsAtFailsForDifferentHeading

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@1 heading: self south)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:30:17'!
test04IncrementsYAfterMovingForwardWhenHeadingNorth

	self 
		assertIsAt: 1@3 
		heading: self north 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:30:11'!
test06DecrementsYAfterMovingBackwardsWhenHeadingNorth

	self 
		assertIsAt: 1@1 
		heading: self north 
		afterProcessing: 'b' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:59'!
test07PointToEashAfterRotatingRightWhenHeadingNorth

	self 
		assertIsAt: 1@2 
		heading: self east 
		afterProcessing: 'r' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:51'!
test08PointsToWestAfterRotatingLeftWhenPointingNorth

	self 
		assertIsAt: 1@2 
		heading: self west 
		afterProcessing: 'l' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:45'!
test09DoesNotProcessInvalidCommand

	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: self north.
	
	self 
		should: [ marsRover process: 'x' ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: marsRover invalidCommandErrorDescription.
			self assert: (marsRover isAt: 1@2 heading: self north) ]! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:39'!
test10CanProcessMoreThanOneCommand

	self 
		assertIsAt: 1@4 
		heading: self north 
		afterProcessing: 'ff' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:31'!
test11IncrementsXAfterMovingForwareWhenHeadingEast

	self 
		assertIsAt: 2@2 
		heading: self east 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:19'!
test12DecrementsXAfterMovingBackwardWhenHeadingEast

	self 
		assertIsAt: 0@2 
		heading: self east 
		afterProcessing: 'b' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:14'!
test13PointsToSouthAfterRotatingRightWhenHeadingEast

		self 
		assertIsAt: 1@2 
		heading: self south 
		afterProcessing: 'r' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:05'!
test14PointsToNorthAfterRotatingLeftWhenPointingEast

		self 
		assertIsAt: 1@2 
		heading: self north 
		afterProcessing: 'l' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:00'!
test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth

	self 
		assertIsAt: 1@1 
		heading: self west 
		afterProcessing: 'ffblrr' 
		whenStartingAt: 1@2 
		heading: self south 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:28:52'!
test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest

	self 
		assertIsAt: 0@2 
		heading: self north 
		afterProcessing: 'ffblrr' 
		whenStartingAt: 1@2 
		heading: self west 
! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:31'!
east

	^ MarsRoverHeadingEast ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:38'!
north

	^ MarsRoverHeadingNorth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:45'!
south

	^ MarsRoverHeadingSouth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:54'!
west

	^ MarsRoverHeadingWest ! !
!MarsRoverTest methodsFor: 'assertions' stamp: 'HAW 10/7/2021 20:20:47'!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	| marsRover |
	
	marsRover := MarsRover at: startPosition heading: startHeadingType. 
	
	marsRover process: commands.
	
	self assert: (marsRover isAt: newPosition heading: newHeadingType)! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'exceptions' stamp: 'HAW 6/30/2018 19:48:45'!
invalidCommandErrorDescription
	
	^'Invalid command'! !
!MarsRover methodsFor: 'exceptions' stamp: 'HAW 6/30/2018 19:50:26'!
signalInvalidCommand
	
	self error: self invalidCommandErrorDescription ! !
!MarsRover methodsFor: 'initialization' stamp: 'HAW 10/7/2021 20:10:49'!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:02'!
headEast
	
	head := MarsRoverHeadingEast for: self! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:12'!
headNorth
	
	head := MarsRoverHeadingNorth for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:17'!
headSouth
	
	head := MarsRoverHeadingSouth for: self! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:24'!
headWest
	
	head := MarsRoverHeadingWest for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20'!
rotateLeft
	
	head rotateLeft! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44'!
rotateRight
	
	head rotateRight! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 10/7/2021 20:16:32'!
isAt: aPosition heading: aHeadingType

	^position = aPosition and: [ head isHeading: aHeadingType ]! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:16:51'!
isBackwardCommand: aCommand

	^aCommand = $b! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:16:19'!
isForwardCommand: aCommand

	^aCommand = $f ! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:17:51'!
isRotateLeftCommand: aCommand

	^aCommand = $l! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:17:21'!
isRotateRightCommand: aCommand

	^aCommand = $r! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24'!
moveBackward
	
	head moveBackward! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:15:01'!
moveEast
	
	position := position + (1@0)! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53'!
moveForward
	
	head moveForward! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:13:12'!
moveNorth
	
	position := position + (0@1)! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:13:34'!
moveSouth
	
	position := position + (0@-1)! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:15:32'!
moveWest
	
	position := position + (-1@0)! !
!MarsRover methodsFor: 'command processing' stamp: 'HAW 6/30/2018 19:48:26'!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ]
! !
!MarsRover methodsFor: 'command processing' stamp: 'HAW 8/22/2019 12:08:50'!
processCommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !

!classDefinition: 'MarsRover class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRover class
	instanceVariableNames: 'headings'!

!classDefinition: 'MarsRover class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRover class
	instanceVariableNames: 'headings'!
!MarsRover class methodsFor: 'instance creation' stamp: 'HAW 10/7/2021 20:10:30'!
at: aPosition heading: aHeadingType
	
	^self new initializeAt: aPosition heading: aHeadingType! !

!classDefinition: #MarsRoverHeading category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeading category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeading methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20'!
rotateLeft

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44'!
rotateRight

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'testing' stamp: 'HAW 10/7/2021 20:15:38'!
isHeading: aHeadingType

	^self isKindOf: aHeadingType ! !
!MarsRoverHeading methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24'!
moveBackward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53'!
moveForward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'initialization' stamp: 'HAW 10/7/2021 20:11:59'!
initializeFor: aMarsRover 
	
	marsRover := aMarsRover.! !

!classDefinition: 'MarsRoverHeading class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading class
	instanceVariableNames: ''!

!classDefinition: 'MarsRoverHeading class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading class
	instanceVariableNames: ''!
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'HAW 10/7/2021 20:11:35'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !

!classDefinition: #MarsRoverHeadingEast category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingEast category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingEast methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50624885!
moveBackward
	
	^marsRover moveWest! !
!MarsRoverHeadingEast methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50624889!
moveForward
	
	^marsRover moveEast! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50624872!
rotateLeft
	
	^marsRover headNorth! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50624876!
rotateRight
	
	^marsRover headSouth! !

!classDefinition: #MarsRoverHeadingNorth category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingNorth category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingNorth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50624885!
moveBackward
	
	^marsRover moveSouth! !
!MarsRoverHeadingNorth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50624889!
moveForward
	
	^marsRover moveNorth! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50624872!
rotateLeft
	
	^marsRover headWest! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50624876!
rotateRight
	
	^marsRover headEast! !

!classDefinition: #MarsRoverHeadingSouth category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingSouth category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50624885!
moveBackward
	
	^marsRover moveNorth! !
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50624889!
moveForward
	
	^marsRover moveSouth! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50624872!
rotateLeft
	
	^marsRover headEast! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50624876!
rotateRight
	
	^marsRover headWest! !

!classDefinition: #MarsRoverHeadingWest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingWest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingWest methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50624885!
moveBackward

	^marsRover moveEast! !
!MarsRoverHeadingWest methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50624889!
moveForward
	
	^marsRover moveWest! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50624872!
rotateLeft
	
	^marsRover headSouth! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50624876!
rotateRight
	
	^marsRover headNorth! !

!classDefinition: #MarsRoverLogTest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
TestCase subclass: #MarsRoverLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogTest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
TestCase subclass: #MarsRoverLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Log
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 17:55:38'!
test01NewLogIsEmpty 
	| newLog |
	newLog := Log for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog text. ! !

!classRenamed: #Log as: #Logger stamp: 'a 6/4/2023 19:13:09'!
Smalltalk renameClassNamed: #Log as: #Logger!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 17:55:57' prior: 50625079!
test01NewLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog text. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 17:56:24' prior: 50625091!
test01NewLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. ! !
!Logger methodsFor: 'no messages' stamp: 'a 6/4/2023 17:56:47'!
log 
	^OrderedCollection new. ! !
!Logger class methodsFor: 'no messages' stamp: 'a 6/4/2023 17:57:33'!
for: aMarsRover
	self new initializeFor: aMarsRover! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 17:57:41' prior: 50625111!
for: aMarsRover
	^self new initializeFor: aMarsRover! !
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 17:58:35'!
initializeFor: aMarsRover 
! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 17:59:58'!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover 
	self assert: OrderedCollection new equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:00:56' prior: 50625124!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: OrderedCollection new equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:02:17' prior: 50625134!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: 'rover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 18:02:49' prior: 50625120!
initializeFor: aMarsRover 
	rover := aMarsRover ! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:04:11' prior: 50624809!
moveNorth
	
	position := position + (0@1). 
	logger positionChanged: 1@2. ! !
!MarsRover methodsFor: 'nil' stamp: 'a 6/4/2023 18:04:50'!
logger: aLogger 
	logger := aLogger ! !
!Logger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:07:20' prior: 50625116!
for: aMarsRover
	|logger| 
	logger := self new initializeFor: aMarsRover. 
	aMarsRover logger: logger. 
	^logger! !
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:07:45'!
positionChanged: aRenameMe1 
	self shouldBeImplemented.! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: 'rover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:08:17' prior: 50625191!
positionChanged: aPosition 
	log add: aPosition . 
	! !
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 18:09:01' prior: 50625163!
initializeFor: aMarsRover 
	log:= OrderedCollection new. ! !
!Logger methodsFor: 'initialization' stamp: 'a 6/4/2023 18:09:29' overrides: 16920235!
initialize
	log:= OrderedCollection new. ! !

!methodRemoval: Logger #initializeFor: stamp: 'a 6/4/2023 19:13:09'!
initializeFor: aMarsRover 
	log:= OrderedCollection new. !
!Logger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:10:00' prior: 50625185!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover logger: logger. 
	^logger! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'log' stamp: 'a 6/4/2023 18:10:35' prior: 50625107!
log 
	^log. ! !
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:10:49' prior: 50625203!
positionChanged: aPosition 
	log add: aPosition asString . 
	! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:11:01'!
test02LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:11:08'!
test03LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test02LogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:13:09'!
test02LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:12:55'!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test02LogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:13:09'!
test02LogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:13:01'!
test01NewPositionLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test01NewLogIsEmpty stamp: 'a 6/4/2023 19:13:09'!
test01NewLogIsEmpty 
	| newLog |
	newLog := Logger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:13:10'!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!methodRemoval: MarsRoverLogTest #test03LogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:13:09'!
test03LogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:13:39' prior: 50625320!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'fbb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '1@0') equals: newLog log. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:14:27' prior: 50625175!
moveNorth
	
	position := position + (0@1). 
	logger positionChanged: position. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:14:41' prior: 50624813!
moveSouth
	
	position := position + (0@-1). 
	logger positionChanged: position. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:17:35' prior: 50625343!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '2@1' with:'1@1') equals: newLog log. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:18:13' prior: 50624801!
moveEast
	
	position := position + (1@0).
	logger positionChanged: position. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:18:21' prior: 50624817!
moveWest
	
	position := position + (-1@0).
	logger positionChanged: position. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:20:28' prior: 50625367!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: newLog log. ! !

!classRenamed: #Logger as: #PositionLogger stamp: 'a 6/4/2023 19:13:09'!
Smalltalk renameClassNamed: #Logger as: #PositionLogger!
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:20:41' prior: 50625390!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := PositionLogger for: marsRover. 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:20:41' prior: 50625283!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := PositionLogger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:20:41' prior: 50625304!
test01NewPositionLogIsEmpty 
	| newLog |
	newLog := PositionLogger for: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth). 
	self assert: OrderedCollection new equals: newLog log. ! !

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #DirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:23:15'!
test04DirectionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := DirectionLogger for: marsRover. 
	marsRover process: 'rlrrrr'.
	self assert: (OrderedCollection with: 'East' with: 'North' with: 'East' with:'South' with: 'West' with: 'North') equals: newLog log. ! !

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #PositionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #PositionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #DirectionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #DirectionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!DirectionLogger methodsFor: 'no messages' stamp: 'a 6/4/2023 18:24:32'!
log 
	^log! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:24:56'!
headingChanged: aHeading
	log add: aHeading . ! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:25:14' overrides: 16920235!
initialize 
	log:=OrderedCollection new. ! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:25:18' prior: 50625515 overrides: 16920235!
initialize 
	log:=OrderedCollection new! !
!DirectionLogger class methodsFor: 'no messages' stamp: 'a 6/4/2023 18:25:31'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover logger: logger. 
	^logger! !
!DirectionLogger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:27:00' prior: 50625525!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover directionLogger: logger. 
	^logger! !
!PositionLogger class methodsFor: 'instance creation' stamp: 'a 6/4/2023 18:27:23' prior: 50625222!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover logger: logger. 
	^logger! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:27:30'!
positionLogger: aLogger 
	logger := aLogger ! !
!PositionLogger class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:27:30' prior: 50625538!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover positionLogger: logger. 
	^logger! !

!methodRemoval: MarsRover #logger: stamp: 'a 6/4/2023 19:13:09'!
logger: aLogger 
	logger := aLogger !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50625384!
moveWest
	
	position := position + (-1@0).
	positionLogger positionChanged: position. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50625355!
moveNorth
	
	position := position + (0@1). 
	positionLogger positionChanged: position. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50625544!
positionLogger: aLogger 
	positionLogger := aLogger ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50625379!
moveEast
	
	position := position + (1@0).
	positionLogger positionChanged: position. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:00' prior: 50625361!
moveSouth
	
	position := position + (0@-1). 
	positionLogger positionChanged: position. ! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger headingLogger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger headingLogger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:16'!
headingLogger: aLogger 
	headingLogger := aLogger ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:28:36'!
directionLogger: logger 
	self shouldBeImplemented.! !

!methodRemoval: MarsRover #directionLogger: stamp: 'a 6/4/2023 19:13:09'!
directionLogger: logger 
	self shouldBeImplemented.!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:29:09'!
directionLogger: aLogger 
	headingLogger := aLogger ! !

!methodRemoval: MarsRover #headingLogger: stamp: 'a 6/4/2023 19:13:09'!
headingLogger: aLogger 
	headingLogger := aLogger !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:30:07' prior: 50625510!
headingChanged: aHeading
	log add: aHeading asString. ! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:31:27' prior: 50625636!
headingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:32:58' prior: 50624751!
headEast
	
	head := MarsRoverHeadingEast for: self. 
	headingLogger headingChanged: head! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:33:11' prior: 50624755!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	headingLogger headingChanged: head! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:33:15' prior: 50624759!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	headingLogger headingChanged: head! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:33:20' prior: 50624763!
headWest
	
	head := MarsRoverHeadingWest for: self .
	headingLogger headingChanged: head! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:11' prior: 50625666!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:18' prior: 50625660!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:26' prior: 50625654!
headEast
	
	head := MarsRoverHeadingEast for: self. 
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:37:31' prior: 50625672!
headWest
	
	head := MarsRoverHeadingWest for: self .
	headingLogger ifNotNil: [headingLogger headingChanged: head]! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Logger subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Logger subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Logger subclass: #DirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Logger subclass: #DirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:39:24'!
log 
	^log! !

!methodRemoval: DirectionLogger #log stamp: 'a 6/4/2023 19:13:09'!
log 
	^log!

!methodRemoval: PositionLogger #log stamp: 'a 6/4/2023 19:13:09'!
log 
	^log. !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:39:30' overrides: 16920235!
initialize 
	log:=OrderedCollection new! !

!methodRemoval: DirectionLogger #initialize stamp: 'a 6/4/2023 19:13:09'!
initialize 
	log:=OrderedCollection new!

!methodRemoval: PositionLogger #initialize stamp: 'a 6/4/2023 19:13:09'!
initialize
	log:= OrderedCollection new. !
!Logger class methodsFor: 'no messages' stamp: 'a 6/4/2023 18:40:57'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover addLogger: logger. 
	^logger! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLogger headingLogger loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:41:19'!
addLogger: aLogger 
	loggers add: aLogger ! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:05' prior: 50625692!
headEast
	
	head := MarsRoverHeadingEast for: self. 
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:14' prior: 50625685!
headNorth
	
	head := MarsRoverHeadingNorth for: self .
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:16' prior: 50625678!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 18:42:22' prior: 50625699!
headWest
	
	head := MarsRoverHeadingWest for: self .
	loggers do: [:logger | logger headingChanged: head]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:42' prior: 50625573!
moveNorth
	
	position := position + (0@1). 
	loggers do: [:logger | logger positionChanged: position]. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:51' prior: 50625843!
moveNorth
	
	position := position + (0@1). 
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:56' prior: 50625590!
moveSouth
	
	position := position + (0@-1). 
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:42:59' prior: 50625567!
moveWest
	
	position := position + (-1@0).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:43:04' prior: 50625584!
moveEast
	
	position := position + (1@0).
	loggers do: [:logger | logger positionChanged: position]! !
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 18:43:24'!
positionChanged: aPosition 
	log add: aPosition asString . 
	! !

!methodRemoval: PositionLogger #positionChanged: stamp: 'a 6/4/2023 19:13:10'!
positionChanged: aPosition 
	log add: aPosition asString . 
	!
!PositionLogger methodsFor: 'nil' stamp: 'a 6/4/2023 18:43:53' overrides: 50625873!
positionChanged: aPosition 
	log add: aPosition asString . ! !
!Logger methodsFor: 'nil' stamp: 'a 6/4/2023 18:44:12'!
headingChanged: aHeading
	self subclassResponsibility ! !
!PositionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:44:35' overrides: 50625887!
headingChanged: aHeading ! !
!DirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:44:45' overrides: 50625873!
positionChanged: aHeading
	! !
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 18:46:31' prior: 50624745!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:47:04' prior: 50625420!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!methodRemoval: PositionLogger class #for: stamp: 'a 6/4/2023 19:13:10'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover positionLogger: logger. 
	^logger!

!methodRemoval: DirectionLogger class #for: stamp: 'a 6/4/2023 19:13:10'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover directionLogger: logger. 
	^logger!

!classDefinition: #PositionAndDirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
Logger subclass: #PositionAndDirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndDirectionLogger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
Logger subclass: #PositionAndDirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionAndDirectionLogger methodsFor: 'no messages' stamp: 'a 6/4/2023 18:50:46'!
eadingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].! !
!PositionAndDirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:50:57' overrides: 50625887!
headingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].! !

!methodRemoval: PositionAndDirectionLogger #eadingChanged: stamp: 'a 6/4/2023 19:13:10'!
eadingChanged: aHeading
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].!
!PositionAndDirectionLogger methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 18:51:06' overrides: 50625873!
positionChanged: aPosition 
	log add: aPosition asString . ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:52:29'!
test05DirectionAndPositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := DirectionLogger for: marsRover. 
	marsRover process: 'rflbr'.
	self assert: (OrderedCollection with: 'East' with: '2@1' with: 'North' with:'2@0' with: 'East') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 18:52:54' prior: 50625992!
test05DirectionAndPositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog :=PositionAndDirectionLogger for: marsRover. 
	marsRover process: 'rflbr'.
	self assert: (OrderedCollection with: 'East' with: '2@1' with: 'North' with:'2@0' with: 'East') equals: newLog log. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:14' prior: 50625861!
moveWest
	
	position update: (position + (-1@0)).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:27' prior: 50625855!
moveSouth
	
	position update: (position + (0@-1)).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:36' prior: 50625849!
moveNorth
	
	position update: (position + (0@1)).
	loggers do: [:logger | logger positionChanged: position]! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 18:58:45' prior: 50625867!
moveEast
	
	position update: (position + (1@0)).
	loggers do: [:logger | logger positionChanged: position]! !

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
Object subclass: #PositionWatcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:04:11' prior: 50625901!
initializeAt: aPosition heading: aHeadingType

	position := PositionWatcher watching: aPosition.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:04:34' prior: 50626052!
initializeAt: aPosition heading: aHeadingType

	position := PositionWatcher for: aPosition.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: 'PositionWatcher class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
PositionWatcher class
	instanceVariableNames: 'position'!
!PositionWatcher class methodsFor: 'no messages' stamp: 'a 6/4/2023 19:05:06'!
for: aPosition 
	position:= aPosition ! !
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:05:31' prior: 50626060!
initializeAt: aPosition heading: aHeadingType

	position := PositionWatcher for: aPosition notifying: loggers.
	head := aHeadingType for: self .
	loggers:=OrderedCollection new ! !
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:06:26' prior: 50626089!
for: aPosition 
	position:= aPosition 
	! !

!classDefinition: 'PositionWatcher class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
PositionWatcher class
	instanceVariableNames: 'position notifiers'!
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:06:48' prior: 50626102!
for: aPosition 
	| loggers |
	position:= aPosition. 
	notifiers:= loggers! !
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:08:02'!
for: aPosition notifying: loggers
	position:= aPosition. 
	notifiers:= loggers! !

!methodRemoval: PositionWatcher class #for: stamp: 'a 6/4/2023 19:13:10'!
for: aPosition 
	| loggers |
	position:= aPosition. 
	notifiers:= loggers!

!classDefinition: 'PositionWatcher class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
PositionWatcher class
	instanceVariableNames: ''!

!classDefinition: 'PositionWatcher class' category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
PositionWatcher class
	instanceVariableNames: ''!

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: 'position notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:13:10'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: 'position notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:10:10' prior: 50626119!
for: aPosition notifying: loggers
	^self new initializeFor:aPosition notifying: loggers! !
!PositionWatcher methodsFor: 'no messages' stamp: 'a 6/4/2023 19:10:58'!
initializeFor: aPosition notifying: objectsToNotify 
	position := aPosition . 
	notifiers := objectsToNotify ! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:11:45'!
update: newPosition 
	position:= newPosition . 
	notifiers do: [:currentNotifier | currentNotifier positionChanged: newPosition ]. ! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:11' prior: 50626032!
moveNorth
	
	position update: (position + (0@1)).! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:15' prior: 50626038!
moveEast
	
	position update: (position + (1@0)).! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:19' prior: 50626026!
moveSouth
	
	position update: (position + (0@-1)).
! !
!MarsRover methodsFor: 'moving' stamp: 'a 6/4/2023 19:12:23' prior: 50626020!
moveWest
	
	position update: (position + (-1@0)).
! !

----SNAPSHOT----(4 June 2023 19:13:44) CuisUniversity-5819.image priorSource: 9302310!
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:15:18'!
messageNotUnderstood: aMessage 
	^aMessage sendTo: position! !

----SNAPSHOT----(4 June 2023 19:15:41) CuisUniversity-5819.image priorSource: 9425429!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:15:44'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:15:44'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:15:44'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:15:44'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:15:44'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:15:47'!
ERROR!

----STARTUP---- (4 June 2023 19:15:57) as /home/antonio/Ingenieria de Software I/Cuis University/linux64/CuisUniversity-5819.image!


!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:16:09'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:16:09'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:16:09'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:16:09'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:16:09'!
ERROR!

| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover. 
	marsRover process: 'f'.!

----STARTUP---- (4 June 2023 19:16:54) as /home/antonio/Ingenieria de Software I/Cuis University/linux64/CuisUniversity-5819.image!


1 tuvieja!
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:17:48' overrides: 16920394!
doesNotUnderstand: aMessage 
	^aMessage sendTo: position! !

!methodRemoval: PositionWatcher #messageNotUnderstood: stamp: 'a 6/4/2023 19:17:48'!
messageNotUnderstood: aMessage 
	^aMessage sendTo: position!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:17:50'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:17:50'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:17:50'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:17:50'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:17:50'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:17:53'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:18:06'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:19:05' prior: 50626093!
initializeAt: aPosition heading: aHeadingType
	loggers:=OrderedCollection new .
	position := PositionWatcher for: aPosition notifying: loggers.
	head := aHeadingType for: self .
! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:19:07'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:19:07'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:19:07'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:19:07'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:19:07'!
PASSED!

!classDefinition: #HeadingWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:21:13'!
ProtoObject subclass: #HeadingWatcher
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:21:04' prior: 50626292!
initializeAt: aPosition heading: aHeadingType
	loggers:=OrderedCollection new .
	position := PositionWatcher for: aPosition notifying: loggers.
	head := HeadingWatcher for: (aHeadingType for: self) notifying: loggers.
! !

ProtoObject subclass: #HeadingWatcher
	instanceVariableNames: 'heading notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:21:30'!
ProtoObject subclass: #HeadingWatcher
	instanceVariableNames: 'heading notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!HeadingWatcher methodsFor: 'no messages' stamp: 'a 6/4/2023 19:21:43' overrides: 16920394!
doesNotUnderstand: aMessage 
	^aMessage sendTo: heading! !
!HeadingWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:22:23'!
update: newHeading 
	heading:= newHeading . 
	notifiers do: [:currentNotifier | currentNotifier headingChanged: newHeading ]. ! !
!HeadingWatcher methodsFor: 'nil' stamp: 'a 6/4/2023 19:22:48'!
initializeFor: aPosition notifying: objectsToNotify 
	heading := aPosition . 
	notifiers := objectsToNotify ! !
!HeadingWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:22:51' prior: 50626362!
initializeFor: aHeading notifying: objectsToNotify 
	heading := aHeading . 
	notifiers := objectsToNotify ! !
!HeadingWatcher class methodsFor: 'no messages' stamp: 'a 6/4/2023 19:23:14'!
for: aPosition notifying: loggers
	^self new initializeFor:aPosition notifying: loggers! !
!HeadingWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:23:18' prior: 50626375!
for: aHeading notifying: loggers
	^self new initializeFor:aHeading notifying: loggers! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 19:23:55' prior: 50625819!
headEast
	
	head update: ( MarsRoverHeadingEast for: self)! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 19:24:20' prior: 50625825!
headNorth
	
	head update: ( MarsRoverHeadingNorth for: self)! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 19:24:27' prior: 50625831!
headSouth
	
	head update: ( MarsRoverHeadingNorth for: self)! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 19:24:37' prior: 50626398!
headSouth
	
	head update: ( MarsRoverHeadingSouth for: self)! !
!MarsRover methodsFor: 'heading' stamp: 'a 6/4/2023 19:24:43' prior: 50625837!
headWest
	head update: ( MarsRoverHeadingWest for: self)! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:24:47'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:24:47'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:24:47'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:24:47'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:24:47'!
PASSED!

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:25:54'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: 'watching notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:25:54' prior: 50626258 overrides: 16920394!
doesNotUnderstand: aMessage 
	^aMessage sendTo: watching! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:25:54' prior: 50626162!
initializeFor: aPosition notifying: objectsToNotify 
	watching := aPosition . 
	notifiers := objectsToNotify ! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:25:54' prior: 50626169!
update: newPosition 
	watching:= newPosition . 
	notifiers do: [:currentNotifier | currentNotifier positionChanged: newPosition ]. ! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:26:03' prior: 50626445!
initializeFor: watched notifying: objectsToNotify 
	watching := watched . 
	notifiers := objectsToNotify ! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:26:13' prior: 50626460!
initializeFor: watchedField notifying: objectsToNotify 
	watching := watchedField . 
	notifiers := objectsToNotify ! !

!classDefinition: #PositionWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:26:16'!
ProtoObject subclass: #PositionWatcher
	instanceVariableNames: 'watched notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:26:16' prior: 50626440 overrides: 16920394!
doesNotUnderstand: aMessage 
	^aMessage sendTo: watched! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:26:16' prior: 50626467!
initializeFor: watchedField notifying: objectsToNotify 
	watched := watchedField . 
	notifiers := objectsToNotify ! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:26:16' prior: 50626452!
update: newPosition 
	watched:= newPosition . 
	notifiers do: [:currentNotifier | currentNotifier positionChanged: newPosition ]. ! !
!PositionWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:26:28' prior: 50626495!
update: newValue 
	watched:= newValue . 
	notifiers do: [:currentNotifier | currentNotifier positionChanged: newValue ]. ! !

!classRenamed: #PositionWatcher as: #VariableWatcher stamp: 'a 6/4/2023 19:26:40'!
Smalltalk renameClassNamed: #PositionWatcher as: #VariableWatcher!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:26:40' prior: 50626326!
initializeAt: aPosition heading: aHeadingType
	loggers:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: loggers.
	head := HeadingWatcher for: (aHeadingType for: self) notifying: loggers.
! !
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:27:03' prior: 50626515!
initializeAt: aPosition heading: aHeadingType
	loggers:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: loggers.
	head := VariableWatcher for: (aHeadingType for: self) notifying: loggers.
! !

!classRemoval: #HeadingWatcher stamp: 'a 6/4/2023 19:27:07'!
ProtoObject subclass: #HeadingWatcher
	instanceVariableNames: 'heading notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!VariableWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:27:57' prior: 50626156!
for: aPosition notifying: loggers 
	^self new initializeFor:aPosition notifying: loggers! !
!VariableWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:29:02'!
for: aPosition notifying: loggers with: aSymbol  
	^self new initializeFor:aPosition notifying: loggers! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:29:02' prior: 50626525!
initializeAt: aPosition heading: aHeadingType
	loggers:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: loggers with: #positionChanged.
	head := VariableWatcher for: (aHeadingType for: self) notifying: loggers with: #positionChanged.
! !

!methodRemoval: VariableWatcher class #for:notifying: stamp: 'a 6/4/2023 19:29:02'!
for: aPosition notifying: loggers 
	^self new initializeFor:aPosition notifying: loggers!
!VariableWatcher class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:29:32' prior: 50626549!
for: aPosition notifying: loggers with: aSymbol  
	^self new initializeFor:aPosition notifying: loggers with: aSymbol ! !
!VariableWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:29:59'!
initializeFor: watchedField notifying: objectsToNotify with: aSymbolToNotify  
	watched := watchedField . 
	notifiers := objectsToNotify ! !

!methodRemoval: VariableWatcher #initializeFor:notifying: stamp: 'a 6/4/2023 19:29:59'!
initializeFor: watchedField notifying: objectsToNotify 
	watched := watchedField . 
	notifiers := objectsToNotify !

ProtoObject subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

ProtoObject subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers symbolToUse'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #VariableWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:34:28'!
Object subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #VariableWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:34:34'!
Object subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!VariableWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:35:14' prior: 50626581!
initializeFor: watchedField notifying: objectsToNotify with: aSymbolToNotify  
	watched := watchedField . 
	notifiers := objectsToNotify . 
	symbol:=aSymbolToNotify ! !
!VariableWatcher methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 19:36:38' prior: 50626503 overrides: 16903929!
update: newValue 
	watched:= newValue . 
	notifiers do: [:currentNotifier | currentNotifier perform: symbol with: newValue]. ! !

----SNAPSHOT----(4 June 2023 19:36:48) CuisUniversity-5819.image priorSource: 9425662!

ProtoObject subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #VariableWatcher category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 19:36:53'!
ProtoObject subclass: #VariableWatcher
	instanceVariableNames: 'watched notifiers symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:36:55'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:36:55'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:36:55'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:36:55'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:36:55'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:36:57'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:37:52' prior: 50626556!
initializeAt: aPosition heading: aHeadingType
	loggers:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: loggers with: #positionChanged.
	head := VariableWatcher for: (aHeadingType for: self) notifying: loggers with: #headingChanged.
! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:38:04'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:38:04'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:38:04'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:38:04'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:38:04'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:38:05'!
ERROR!

!methodRemoval: MarsRover #directionLogger: stamp: 'a 6/4/2023 19:38:19'!
directionLogger: aLogger 
	headingLogger := aLogger !

!methodRemoval: MarsRover #positionLogger: stamp: 'a 6/4/2023 19:38:26'!
positionLogger: aLogger 
	positionLogger := aLogger !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:38:46'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:38:46'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:38:46'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:38:46'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:38:46'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:38:47'!
ERROR!
!Logger methodsFor: 'updating' stamp: 'a 6/4/2023 19:39:14' prior: 50625873!
positionChanged: aPosition 
	self subclassResponsibility 
	! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:39:32'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:39:32'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:39:32'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:39:32'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:39:32'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:39:33'!
ERROR!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/4/2023 19:40:24' prior: 50625909!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := PositionLogger for: marsRover. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:40:31'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:40:31'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:40:31'!
ERROR!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:40:31'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:40:31'!
ERROR!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:40:34'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'a 6/4/2023 19:41:22' prior: 50626687!
initializeAt: aPosition heading: aHeadingType
	loggers:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: loggers with: #positionChanged:.
	head := VariableWatcher for: (aHeadingType for: self) notifying: loggers with: #headingChanged:.
! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 19:41:26'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 19:41:26'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:41:26'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:41:26'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 19:41:26'!
PASSED!

----SNAPSHOT----(4 June 2023 19:43:25) CuisUniversity-5819.image priorSource: 9439936!

TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowTest category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:20:14'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:29:30'!
Object subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindowTest methodsFor: 'no messages' stamp: 'a 6/4/2023 20:29:23'!
test01NewPositionWindowIsEmpty
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := Window for: marsRover. 
	self assert: '' equals: window position. ! !
!Window class methodsFor: 'no messages' stamp: 'a 6/4/2023 20:29:48'!
for: aRover 
! !
!Window methodsFor: 'no messages' stamp: 'a 6/4/2023 20:30:06'!
position
	^OrderedCollection new. ! !
!Window methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:30:12' prior: 50626869!
position
	^'' ! !

!classRenamed: #Window as: #PositionWindow stamp: 'a 6/4/2023 20:30:19'!
Smalltalk renameClassNamed: #Window as: #PositionWindow!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:30:19' prior: 50626857!
test01NewPositionWindowIsEmpty
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	self assert: '' equals: window position. ! !

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:30:33'!
ERROR!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:30:33'!
ERROR!
!PositionWindow class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:30:50' prior: 50626866!
for: aRover 
	self new! !

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:30:51'!
ERROR!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:30:51'!
ERROR!
!PositionWindow class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:31:02' prior: 50626897!
for: aRover 
	^self new! !

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:31:02'!
PASSED!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:32:36'!
test02PositionWindowWithOneCommandIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'f'. 
	self assert: '1@2' equals: window position. ! !

!testRun: #MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:32:36'!
FAILURE!
!PositionWindow class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:33:25' prior: 50626908!
for: aRover 
	|logger| 
	logger := self new. 
	aRover addLogger: logger. 
	^logger! !
!PositionWindow class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:33:28' prior: 50626931!
for: aRover 
	|windows| 
	windows := self new. 
	aRover addLogger: windows. 
	^windows! !
!PositionWindow class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:33:36' prior: 50626937!
for: aRover 
	|window| 
	window := self new. 
	aRover addLogger: window. 
	^window! !
!PositionWindow class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:33:45' prior: 50626943!
for: aRover 
	|window| 
	window := self new. 
	aRover addWindow: window. 
	^window! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:34:09'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers windows'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:34:08'!
addWindow: aWindow 
	windows add: aWindow ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:34:47'!
addLoggerOrWindow: aLogger 
	loggers add: aLogger ! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:34:47' prior: 50625784!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover addLoggerOrWindow: logger. 
	^logger! !

!methodRemoval: MarsRover #addLogger: stamp: 'a 6/4/2023 20:34:47'!
addLogger: aLogger 
	loggers add: aLogger !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:34:55' prior: 50626967!
addLoggerOrWindow: aLoggerOrWindow
	loggers add: aLoggerOrWindow ! !

!methodRemoval: MarsRover #addWindow: stamp: 'a 6/4/2023 20:34:58'!
addWindow: aWindow 
	windows add: aWindow !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:35:04'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggersOrWindow windows'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:35:04' prior: 50626982!
addLoggerOrWindow: aLoggerOrWindow
	loggersOrWindow add: aLoggerOrWindow ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:35:04' prior: 50626806!
initializeAt: aPosition heading: aHeadingType
	loggersOrWindow:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: loggersOrWindow with: #positionChanged:.
	head := VariableWatcher for: (aHeadingType for: self) notifying: loggersOrWindow with: #headingChanged:.
! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:35:08'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggersOrWindows windows'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:35:08' prior: 50626999!
addLoggerOrWindow: aLoggerOrWindow
	loggersOrWindows add: aLoggerOrWindow ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:35:08' prior: 50627005!
initializeAt: aPosition heading: aHeadingType
	loggersOrWindows:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: loggersOrWindows with: #positionChanged:.
	head := VariableWatcher for: (aHeadingType for: self) notifying: loggersOrWindows with: #headingChanged:.
! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head loggersOrWindows'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:35:12'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggersOrWindows'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionWindow class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:35:31' prior: 50626949!
for: aRover 
	|window| 
	window := self new. 
	aRover addLoggerOrWindow: window. 
	^window! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 20:35:41'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 20:35:41'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 20:35:41'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 20:35:41'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 20:35:41'!
PASSED!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:35:43'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:35:43'!
ERROR!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:35:43'!
ERROR!
!PositionWindow methodsFor: 'updating' stamp: 'a 6/4/2023 20:35:56'!
positionChanged: aRenameMe1 
	self shouldBeImplemented.! !

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:36:21'!
Object subclass: #PositionWindow
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionWindow methodsFor: 'updating' stamp: 'a 6/4/2023 20:36:19' prior: 50627092!
positionChanged: aPosition 
	position := aPosition asString! !

!testRun: #MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:36:22'!
FAILURE!
!PositionWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:36:36' prior: 50626873!
position
	^position ! !
!PositionWindow methodsFor: 'nil' stamp: 'a 6/4/2023 20:36:47'!
intialize 
	position:=''! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/4/2023 20:36:59'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/4/2023 20:36:59'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 20:36:59'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 20:36:59'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/4/2023 20:36:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:37:01'!
FAILURE!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:37:01'!
PASSED!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:37:01'!
FAILURE!
!PositionWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:37:19' overrides: 16920235!
initialize 
	position:=''! !

!methodRemoval: PositionWindow #intialize stamp: 'a 6/4/2023 20:37:19'!
intialize 
	position:=''!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:37:24'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:37:24'!
PASSED!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:38:48'!
test03PositionWindowWithMultipleCommandsIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'fbff'. 
	self assert: '1@3' equals: window position. ! !

!testRun: #MarsRoverWindowTest #test03PositionWindowWithMultipleCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:38:51'!
PASSED!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:38:51'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:38:51'!
PASSED!

!testRun: #MarsRoverWindowTest #test03PositionWindowWithMultipleCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:38:51'!
PASSED!

!methodRemoval: MarsRoverWindowTest #test02PositionWindowWithOneCommandIsCurrentPosition stamp: 'a 6/4/2023 20:39:06'!
test02PositionWindowWithOneCommandIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'f'. 
	self assert: '1@2' equals: window position. !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:39:11'!
test02PositionWindowWithMultipleCommandsIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'fbff'. 
	self assert: '1@3' equals: window position. ! !

!methodRemoval: MarsRoverWindowTest #test03PositionWindowWithMultipleCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:39:11'!
test03PositionWindowWithMultipleCommandsIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'fbff'. 
	self assert: '1@3' equals: window position. !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:39:22'!
test02PositionWindowWithCommandsIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'fbff'. 
	self assert: '1@3' equals: window position. ! !

!methodRemoval: MarsRoverWindowTest #test02PositionWindowWithMultipleCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:39:22'!
test02PositionWindowWithMultipleCommandsIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'fbff'. 
	self assert: '1@3' equals: window position. !

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:39:24'!
PASSED!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:39:24'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:39:24'!
PASSED!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:40:09'!
test03HeadingWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover. 
	marsRover process: 'llrl'. 
	self assert: 'Apuntando al sur' equals: window position. ! !

!classDefinition: #HeadingWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:40:27'!
Object subclass: #HeadingWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:40:20' prior: 50627259!
test03HeadingWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := HeadingWindow for: marsRover. 
	marsRover process: 'llrl'. 
	self assert: 'Apuntando al sur' equals: window heading. ! !
!HeadingWindow methodsFor: 'no messages' stamp: 'a 6/4/2023 20:40:41'!
heading 
	^''! !
!HeadingWindow class methodsFor: 'no messages' stamp: 'a 6/4/2023 20:41:18'!
for: aRover 
	|window| 
	window := self new. 
	aRover addLoggerOrWindow: window. 
	^window! !

!classDefinition: #HeadingWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:41:24'!
Object subclass: #HeadingWindow
	instanceVariableNames: 'heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!HeadingWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:41:24' prior: 50627290!
heading 
	^heading! !
!HeadingWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:41:37' overrides: 16920235!
initialize 
	heading:=''! !
!HeadingWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:43:15'!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='apuntando al east'].! !
!HeadingWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:43:33' prior: 50627315!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al east'].! !

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:43:39'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:43:39'!
PASSED!

!testRun: #MarsRoverWindowTest #test03HeadingWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:43:39'!
PASSED!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:44:46'!
test03DirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := HeadingWindow for: marsRover. 
	marsRover process: 'llrl'. 
	self assert: 'Apuntando al sur' equals: window heading. ! !

!methodRemoval: MarsRoverWindowTest #test03HeadingWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:44:46'!
test03HeadingWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := HeadingWindow for: marsRover. 
	marsRover process: 'llrl'. 
	self assert: 'Apuntando al sur' equals: window heading. !

!classRenamed: #HeadingWindow as: #DirectionWindow stamp: 'a 6/4/2023 20:44:57'!
Smalltalk renameClassNamed: #HeadingWindow as: #DirectionWindow!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:44:57' prior: 50627356!
test03DirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := DirectionWindow for: marsRover. 
	marsRover process: 'llrl'. 
	self assert: 'Apuntando al sur' equals: window heading. ! !

!classDefinition: #PositionAndDirectionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:46:38'!
Object subclass: #PositionAndDirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:46:34'!
test03PositionAndDirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionAndDirectionWindow for: marsRover. 
	marsRover process: 'rflbr'. 
	self assert: 'Apuntando al este' equals: window heading. 
	self assert: '2@0' equals: window position.! !

Object subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:47:00'!
Object subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Window subclass: #DirectionWindow
	instanceVariableNames: 'heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:47:08'!
Window subclass: #DirectionWindow
	instanceVariableNames: 'heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Window subclass: #PositionWindow
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:47:12'!
Window subclass: #PositionWindow
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Window subclass: #PositionAndDirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndDirectionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:47:24'!
Window subclass: #PositionAndDirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Window subclass: #PositionAndDirectionWindow
	instanceVariableNames: 'heading position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndDirectionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:47:56'!
Window subclass: #PositionAndDirectionWindow
	instanceVariableNames: 'heading position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionAndDirectionWindow methodsFor: 'no messages' stamp: 'a 6/4/2023 20:48:07'!
heading 
	^heading! !
!PositionAndDirectionWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:48:15'!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al east'].! !
!PositionAndDirectionWindow methodsFor: 'nil' stamp: 'a 6/4/2023 20:48:42' overrides: 16920235!
initialize 
	position:=''. 
	heading:=''! !
!PositionAndDirectionWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:49:03'!
position
	^position ! !
!PositionAndDirectionWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:49:16'!
positionChanged: aPosition 
	position := aPosition asString! !
!DirectionWindow methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:49:57'!
positionChanged: aNewPosition! !
!PositionWindow methodsFor: 'updating' stamp: 'a 6/4/2023 20:50:12'!
headingChanged: aNewHeading 
! !
!Window methodsFor: 'no messages' stamp: 'a 6/4/2023 20:50:53'!
positionChanged: aNewPosition 
	self subclassResponsibility ! !
!Window methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:51:01'!
headingChanged: aNewHeading 
	self subclassResponsibility ! !

----SNAPSHOT----(4 June 2023 20:52:14) CuisUniversity-5819.image priorSource: 9445888!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:52:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:52:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test03DirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:52:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:52:21'!
ERROR!

!testRun: #MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:52:21'!
ERROR!
!Window class methodsFor: 'as yet unclassified' stamp: 'a 6/4/2023 20:52:51'!
for: aRover 
	|window| 
	window := self new. 
	aRover addLoggerOrWindow: window. 
	^window! !

!methodRemoval: DirectionWindow class #for: stamp: 'a 6/4/2023 20:52:51'!
for: aRover 
	|window| 
	window := self new. 
	aRover addLoggerOrWindow: window. 
	^window!

!methodRemoval: PositionWindow class #for: stamp: 'a 6/4/2023 20:52:51'!
for: aRover 
	|window| 
	window := self new. 
	aRover addLoggerOrWindow: window. 
	^window!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:52:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:52:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test03DirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:52:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:52:58'!
FAILURE!

!testRun: #MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:52:58'!
FAILURE!
!DirectionWindow methodsFor: 'updating' stamp: 'a 6/4/2023 20:53:28' prior: 50627330 overrides: 50627528!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].! !
!PositionAndDirectionWindow methodsFor: 'updating' stamp: 'a 6/4/2023 20:53:36' prior: 50627486 overrides: 50627528!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].! !

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/4/2023 20:53:39'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/4/2023 20:53:39'!
PASSED!

!testRun: #MarsRoverWindowTest #test03DirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:53:39'!
PASSED!

!testRun: #MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/4/2023 20:53:39'!
PASSED!

Object subclass: #RoverRecord
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #RoverRecord category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:56:11'!
Object subclass: #RoverRecord
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

RoverRecord subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:56:19'!
RoverRecord subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

RoverRecord subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'a 6/4/2023 20:56:26'!
RoverRecord subclass: #Logger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!RoverRecord methodsFor: 'updating' stamp: 'a 6/4/2023 20:57:01'!
positionChanged: aNewPosition 
	self subclassResponsibility ! !

!methodRemoval: Window #positionChanged: stamp: 'a 6/4/2023 20:57:01'!
positionChanged: aNewPosition 
	self subclassResponsibility !

!methodRemoval: Logger #positionChanged: stamp: 'a 6/4/2023 20:57:01'!
positionChanged: aPosition 
	self subclassResponsibility 
	!
!RoverRecord methodsFor: 'updating' stamp: 'a 6/4/2023 20:57:05'!
headingChanged: aNewHeading 
	self subclassResponsibility ! !

!methodRemoval: Window #headingChanged: stamp: 'a 6/4/2023 20:57:05'!
headingChanged: aNewHeading 
	self subclassResponsibility !

!methodRemoval: Logger #headingChanged: stamp: 'a 6/4/2023 20:57:05'!
headingChanged: aHeading
	self subclassResponsibility !

----SNAPSHOT----(4 June 2023 20:57:55) CuisUniversity-5819.image priorSource: 9468221!

----SNAPSHOT----(4 June 2023 20:58:26) CuisUniversity-5819.image priorSource: 9473471!

----STARTUP---- (5 June 2023 14:15:15) as /home/antonio/Ingenieria de Software I/Cuis University/linux64/CuisUniversity-5819.image!

!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 14:17:31' prior: 50625432!
test01NewPositionLogIsEmpty 
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth. 
	newLog := PositionLogger for: marsRover.
	self assert: OrderedCollection new equals: newLog log. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:18:13'!
addRecord: aLoggerOrWindow
	loggersOrWindows add: aLoggerOrWindow ! !
!Window class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:18:13' prior: 50627555!
for: aRover 
	|window| 
	window := self new. 
	aRover addRecord: window. 
	^window! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:18:13' prior: 50626972!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover addRecord: logger. 
	^logger! !

!methodRemoval: MarsRover #addLoggerOrWindow: stamp: 'a 6/5/2023 14:18:13'!
addLoggerOrWindow: aLoggerOrWindow
	loggersOrWindows add: aLoggerOrWindow !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:18:18' prior: 50627717!
addRecord: aRecord
	loggersOrWindows add: aRecord ! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:18:22'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head records'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:18:22' prior: 50627740!
addRecord: aRecord
	records add: aRecord ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:18:22' prior: 50627032!
initializeAt: aPosition heading: aHeadingType
	records:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: records with: #positionChanged:.
	head := VariableWatcher for: (aHeadingType for: self) notifying: records with: #headingChanged:.
! !

Object subclass: #RecordingStrategy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #RecordingStrategy category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:23:20'!
Object subclass: #RecordingStrategy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

RecordingStrategy subclass: #PositionRecordingStrategy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionRecordingStrategy category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:23:31'!
RecordingStrategy subclass: #PositionRecordingStrategy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

RecordingStrategy subclass: #HeadingRecordingStrategy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingRecordingStrategy category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:23:44'!
RecordingStrategy subclass: #HeadingRecordingStrategy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #RecordingStrategy
	instanceVariableNames: 'record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #RecordingStrategy category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:24:08'!
Object subclass: #RecordingStrategy
	instanceVariableNames: 'record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #RoverRecord
	instanceVariableNames: 'strategy'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #RoverRecord category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:25:02'!
Object subclass: #RoverRecord
	instanceVariableNames: 'strategy'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:25:39' prior: 50627729!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover addRecord: logger. 
	^logger! !
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'a 6/5/2023 14:26:02'!
for: aMarsRover with: aStrategy  
	
	^self new initializeFor: aMarsRover ! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02'!
for: aMarsRover with: aStrategy 
	|logger| 
	logger := self new. 
	aMarsRover addRecord: logger. 
	^logger! !
!Window class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02'!
for: aRover with: aStrategy  
	|window| 
	window := self new. 
	aRover addRecord: window. 
	^window! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50626774!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := PositionLogger for: marsRover with: nil. 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50627707!
test01NewPositionLogIsEmpty 
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth. 
	newLog := PositionLogger for: marsRover with: nil.
	self assert: OrderedCollection new equals: newLog log. ! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50627225!
test02PositionWindowWithCommandsIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover with: nil. 
	marsRover process: 'fbff'. 
	self assert: '1@3' equals: window position. ! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50627405!
test03PositionAndDirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionAndDirectionWindow for: marsRover with: nil. 
	marsRover process: 'rflbr'. 
	self assert: 'Apuntando al este' equals: window heading. 
	self assert: '2@0' equals: window position.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50626408!
headWest
	head update: ( MarsRoverHeadingWest for: self with: nil)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50626393!
headNorth
	
	head update: ( MarsRoverHeadingNorth for: self with: nil)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50626403!
headSouth
	
	head update: ( MarsRoverHeadingSouth for: self with: nil)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50626388!
headEast
	
	head update: ( MarsRoverHeadingEast for: self with: nil)! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50625407!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := PositionLogger for: marsRover with: nil. 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: newLog log. ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50627758!
initializeAt: aPosition heading: aHeadingType
	records:=OrderedCollection new .
	position := VariableWatcher for: aPosition notifying: records with: #positionChanged:.
	head := VariableWatcher for: (aHeadingType for: self with: nil) notifying: records with: #headingChanged:.
! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50627385!
test03DirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := DirectionWindow for: marsRover with: nil. 
	marsRover process: 'llrl'. 
	self assert: 'Apuntando al sur' equals: window heading. ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50625448!
test04DirectionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := DirectionLogger for: marsRover with: nil. 
	marsRover process: 'rlrrrr'.
	self assert: (OrderedCollection with: 'East' with: 'North' with: 'East' with:'South' with: 'West' with: 'North') equals: newLog log. ! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50626006!
test05DirectionAndPositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog :=PositionAndDirectionLogger for: marsRover with: nil. 
	marsRover process: 'rflbr'.
	self assert: (OrderedCollection with: 'East' with: '2@1' with: 'North' with:'2@0' with: 'East') equals: newLog log. ! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:02' prior: 50626881!
test01NewPositionWindowIsEmpty
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := PositionWindow for: marsRover with: nil. 
	self assert: '' equals: window position. ! !

!methodRemoval: MarsRoverHeading class #for: stamp: 'a 6/5/2023 14:26:02'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover !

!methodRemoval: Logger class #for: stamp: 'a 6/5/2023 14:26:02'!
for: aMarsRover
	|logger| 
	logger := self new. 
	aMarsRover addRecord: logger. 
	^logger!

!methodRemoval: Window class #for: stamp: 'a 6/5/2023 14:26:02'!
for: aRover 
	|window| 
	window := self new. 
	aRover addRecord: window. 
	^window!
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:36' prior: 50627845!
for: aMarsRover with: aStrategy 
	|logger| 
	logger := self new initializeWithStrategy: aStrategy. 
	aMarsRover addRecord: logger. 
	^logger! !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:26:56'!
initializeWithStrategy 
	log:=OrderedCollection new! !
!DirectionWindow methodsFor: 'initialization' stamp: 'a 6/5/2023 14:26:56'!
initializeWithStrategy 
	heading:=''! !
!PositionAndDirectionWindow methodsFor: 'initialization' stamp: 'a 6/5/2023 14:26:56'!
initializeWithStrategy 
	position:=''. 
	heading:=''! !
!PositionWindow methodsFor: 'initialization' stamp: 'a 6/5/2023 14:26:56'!
initializeWithStrategy 
	position:=''! !

!methodRemoval: Logger #initialize stamp: 'a 6/5/2023 14:26:56'!
initialize 
	log:=OrderedCollection new!

!methodRemoval: DirectionWindow #initialize stamp: 'a 6/5/2023 14:26:56'!
initialize 
	heading:=''!

!methodRemoval: PositionAndDirectionWindow #initialize stamp: 'a 6/5/2023 14:26:56'!
initialize 
	position:=''. 
	heading:=''!

!methodRemoval: PositionWindow #initialize stamp: 'a 6/5/2023 14:26:56'!
initialize 
	position:=''!
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy: aStrategy 
	log:=OrderedCollection new! !
!DirectionWindow methodsFor: 'initialization' stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy: aStrategy 
	heading:=''! !
!PositionAndDirectionWindow methodsFor: 'initialization' stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy: aStrategy 
	position:=''. 
	heading:=''! !
!PositionWindow methodsFor: 'initialization' stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy: aStrategy 
	position:=''! !

!methodRemoval: Logger #initializeWithStrategy stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy 
	log:=OrderedCollection new!

!methodRemoval: DirectionWindow #initializeWithStrategy stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy 
	heading:=''!

!methodRemoval: PositionAndDirectionWindow #initializeWithStrategy stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy 
	position:=''. 
	heading:=''!

!methodRemoval: PositionWindow #initializeWithStrategy stamp: 'a 6/5/2023 14:27:22'!
initializeWithStrategy 
	position:=''!
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:27:34' prior: 50628061!
initializeWithStrategy: aStrategy 
	log:=OrderedCollection new. 
	strategy:=aStrategy! !
!Logger methodsFor: 'nil' stamp: 'a 6/5/2023 14:28:53' overrides: 50627684!
headingChanged: aHeading
	strategy headingChanged: aHeading.
	"
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].
	"! !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:29:26' overrides: 50627671!
positionChanged: aPosition

	strategy positionChanged: aPosition 
"	log add: aPosition asString . "! !
!HeadingRecordingStrategy methodsFor: 'no messages' stamp: 'a 6/5/2023 14:30:23'!
headingChanged: aHeading
	record recordHeadingChange: aHeading! !
!HeadingRecordingStrategy methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:30:36'!
positionChanged: aPosition! !
!PositionRecordingStrategy methodsFor: 'no messages' stamp: 'a 6/5/2023 14:30:54'!
headingChanged: aHeading
	! !
!PositionRecordingStrategy methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:31:30'!
positionChanged: aPosition
	record recordPositionChange: aPosition ! !
!RecordingStrategy methodsFor: 'no messages' stamp: 'a 6/5/2023 14:31:44'!
headingChanged: aHeading
	self subclassResponsibility ! !
!RecordingStrategy methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:31:51'!
positionChanged: aPosition
	self subclassResponsibility ! !
!Logger methodsFor: 'nil' stamp: 'a 6/5/2023 14:32:39'!
recordHeadingChange: aHeading 
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'North']. 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'South']. 
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'East'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'West'].! !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:32:55'!
recordPositionChange: aPosition
	log add: aPosition asString . ! !
!Logger methodsFor: 'updating' stamp: 'a 6/5/2023 14:34:09' prior: 50628104 overrides: 50627684!
headingChanged: aHeading
	strategy headingChanged: aHeading.! !
!Logger methodsFor: 'updating' stamp: 'a 6/5/2023 14:34:13' prior: 50628118 overrides: 50627671!
positionChanged: aPosition

	strategy positionChanged: aPosition ! !

----SNAPSHOT----(5 June 2023 14:34:30) CuisUniversity-5819.image priorSource: 9473559!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 14:34:50' prior: 50627858!
test02PositionLogWithOneCommandIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: PositionRecordingStrategy . 
	marsRover process: 'f'.
	self assert: (OrderedCollection with: '1@2') equals: newLog log. ! !
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:35:14' prior: 50628098!
initializeWithStrategy: aStrategy 
	log:=OrderedCollection new. 
	strategy:=aStrategy new! !
!RecordingStrategy class methodsFor: 'no messages' stamp: 'a 6/5/2023 14:36:09'!
for: aRecord 
	^self new initializeForARecord: aRecord. ! !
!RecordingStrategy methodsFor: 'nil' stamp: 'a 6/5/2023 14:36:43'!
initializeForARecord: aRecord 
	record:=aRecord! !
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:37:21' prior: 50628196!
initializeWithStrategy: aStrategy 
	log:=OrderedCollection new. 
	strategy:=aStrategy for: self! !

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 14:37:28'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 14:38:09' prior: 50627870!
test01NewPositionLogIsEmpty 
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth. 
	newLog := Logger for: marsRover with: PositionRecordingStrategy.
	self assert: OrderedCollection new equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/5/2023 14:38:11'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 14:38:13'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 14:38:33' prior: 50627931!
test03PositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: PositionRecordingStrategy . 
	marsRover process: 'fblfb'.
	self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:38:34'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/5/2023 14:38:34'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 14:38:34'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:38:34'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:38:34'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:38:34'!
ERROR!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:38:37'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 14:38:49' prior: 50627968!
test04DirectionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: HeadingRecordingStrategy . 
	marsRover process: 'rlrrrr'.
	self assert: (OrderedCollection with: 'East' with: 'North' with: 'East' with:'South' with: 'West' with: 'North') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:38:50'!
PASSED!
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:40:31' prior: 50628211!
initializeWithStrategy: aStrategy 
	log:=OrderedCollection new. 
	strategy:= OrderedCollection with: (aStrategy for: self)! !
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:40:58'!
initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy
	log:=OrderedCollection new. 
	strategy:= OrderedCollection with: (aStrategy for: self) with: (aSecondStrategy for: self) ! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:41:20'!
for: aMarsRover with: aStrategy with: aSecondStrategy
	|logger| 
	logger := self new initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy . 
	aMarsRover addRecord: logger. 
	^logger! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 14:42:02' prior: 50627983!
test05DirectionAndPositionLogWithMultipleCommandsIsCorrect
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog :=Logger for: marsRover with: HeadingRecordingStrategy with: PositionRecordingStrategy. 
	marsRover process: 'rflbr'.
	self assert: (OrderedCollection with: 'East' with: '2@1' with: 'North' with:'2@0' with: 'East') equals: newLog log. ! !

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:42:04'!
ERROR!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:42:04'!
ERROR!
!Logger methodsFor: 'updating' stamp: 'a 6/5/2023 14:42:42' prior: 50628176 overrides: 50627671!
positionChanged: aPosition

	strategy do: [:currentStrategy | currentStrategy positionChanged: aPosition ]! !
!Logger methodsFor: 'updating' stamp: 'a 6/5/2023 14:42:57' prior: 50628170 overrides: 50627684!
headingChanged: aHeading
	strategy do: [:currentStrategy | currentStrategy headingChanged: aHeading ]! !

!classDefinition: #RoverRecord category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:43:18'!
Object subclass: #RoverRecord
	instanceVariableNames: 'strategies'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:43:18' prior: 50628350 overrides: 50627684!
headingChanged: aHeading
	strategies do: [:currentStrategy | currentStrategy headingChanged: aHeading ]! !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:43:18' prior: 50628343 overrides: 50627671!
positionChanged: aPosition

	strategies do: [:currentStrategy | currentStrategy positionChanged: aPosition ]! !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:43:18' prior: 50628301!
initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy
	log:=OrderedCollection new. 
	strategies:= OrderedCollection with: (aStrategy for: self) with: (aSecondStrategy for: self) ! !
!Logger methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:43:18' prior: 50628294!
initializeWithStrategy: aStrategy 
	log:=OrderedCollection new. 
	strategies:= OrderedCollection with: (aStrategy for: self)! !

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:43:26'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/5/2023 14:43:27'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 14:43:27'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:43:27'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:43:27'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:43:27'!
PASSED!

----SNAPSHOT----(5 June 2023 14:43:40) CuisUniversity-5819.image priorSource: 9488964!

!classRemoval: #DirectionLogger stamp: 'a 6/5/2023 14:43:45'!
Logger subclass: #DirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #PositionAndDirectionLogger stamp: 'a 6/5/2023 14:43:46'!
Logger subclass: #PositionAndDirectionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #PositionLogger stamp: 'a 6/5/2023 14:43:48'!
Logger subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/5/2023 14:43:53'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 14:43:53'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:43:53'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:43:53'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 14:43:53'!
PASSED!

RoverRecord subclass: #Window
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Window subclass: #DirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #DirectionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:45:36'!
Window subclass: #DirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Window subclass: #PositionAndDirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionAndDirectionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:45:40'!
Window subclass: #PositionAndDirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Window subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:45:43'!
Window subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

RoverRecord subclass: #Window
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'a 6/5/2023 14:45:48'!
RoverRecord subclass: #Window
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!DirectionWindow methodsFor: 'initialization' stamp: 'a 6/5/2023 14:46:06' prior: 50628066!
initializeWithStrategy: aStrategy 
	heading:=''.
	position:=''! !
!Window methodsFor: 'initialization' stamp: 'a 6/5/2023 14:46:14'!
initializeWithStrategy: aStrategy 
	heading:=''.
	position:=''! !

!methodRemoval: DirectionWindow #initializeWithStrategy: stamp: 'a 6/5/2023 14:46:14'!
initializeWithStrategy: aStrategy 
	heading:=''.
	position:=''!

!methodRemoval: PositionAndDirectionWindow #initializeWithStrategy: stamp: 'a 6/5/2023 14:46:24'!
initializeWithStrategy: aStrategy 
	position:=''. 
	heading:=''!

!methodRemoval: PositionWindow #initializeWithStrategy: stamp: 'a 6/5/2023 14:46:27'!
initializeWithStrategy: aStrategy 
	position:=''!
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:47:07' overrides: 50627684!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].! !

!methodRemoval: DirectionWindow #headingChanged: stamp: 'a 6/5/2023 14:47:07'!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].!

!methodRemoval: PositionAndDirectionWindow #headingChanged: stamp: 'a 6/5/2023 14:47:07'!
headingChanged: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].!
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:47:16' overrides: 50627671!
positionChanged: aPosition 
	position := aPosition asString! !

!methodRemoval: PositionAndDirectionWindow #positionChanged: stamp: 'a 6/5/2023 14:47:16'!
positionChanged: aPosition 
	position := aPosition asString!

!methodRemoval: PositionWindow #positionChanged: stamp: 'a 6/5/2023 14:47:16'!
positionChanged: aPosition 
	position := aPosition asString!
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:47:51' prior: 50628580 overrides: 50627671!
positionChanged: aPosition 
	strategies do: [:currentStrategy | currentStrategy positionChanged: aPosition].
	"position := aPosition asString"! !
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:48:16'!
recordPositionChange: aPosition 
	position := aPosition asString! !
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:48:27'!
reportHeadingChange: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].! !
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:48:32'!
recortHeadingChange: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].! !

!methodRemoval: Window #reportHeadingChange: stamp: 'a 6/5/2023 14:48:32'!
reportHeadingChange: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].!
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:48:37'!
recordHeadingChange: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].! !

!methodRemoval: Window #recortHeadingChange: stamp: 'a 6/5/2023 14:48:37'!
recortHeadingChange: aNewHeading
	(aNewHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading:='Apuntando al norte'].
	(aNewHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading:='Apuntando al sur'].
	(aNewHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading:='Apuntando al oeste'].
	(aNewHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading:='Apuntando al este'].!
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 14:49:05' prior: 50628536 overrides: 50627684!
headingChanged: aNewHeading
	strategies do: [:currentStrategy | currentStrategy headingChanged: aNewHeading]! !
!Window methodsFor: 'accessing' stamp: 'a 6/5/2023 14:49:27'!
heading 
	^heading! !

!methodRemoval: DirectionWindow #heading stamp: 'a 6/5/2023 14:49:27'!
heading 
	^heading!

!methodRemoval: PositionAndDirectionWindow #heading stamp: 'a 6/5/2023 14:49:27'!
heading 
	^heading!
!Window methodsFor: 'accessing' stamp: 'a 6/5/2023 14:49:37'!
position
	^position ! !

!methodRemoval: PositionAndDirectionWindow #position stamp: 'a 6/5/2023 14:49:37'!
position
	^position !

!methodRemoval: PositionWindow #position stamp: 'a 6/5/2023 14:49:37'!
position
	^position !
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:50:27' prior: 50628388!
initializeWithStrategy: aStrategy 
	"log:=OrderedCollection new. "
	strategies:= OrderedCollection with: (aStrategy for: self)! !
!RoverRecord methodsFor: 'initialization' stamp: 'a 6/5/2023 14:50:32'!
initializeWithStrategy: aStrategy 
	"log:=OrderedCollection new. "
	strategies:= OrderedCollection with: (aStrategy for: self)! !

!methodRemoval: Logger #initializeWithStrategy: stamp: 'a 6/5/2023 14:50:32'!
initializeWithStrategy: aStrategy 
	"log:=OrderedCollection new. "
	strategies:= OrderedCollection with: (aStrategy for: self)!
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:50:38' prior: 50628379!
initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy
	"log:=OrderedCollection new. "
	strategies:= OrderedCollection with: (aStrategy for: self) with: (aSecondStrategy for: self) ! !
!RoverRecord methodsFor: 'initialization' stamp: 'a 6/5/2023 14:50:41'!
initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy
	"log:=OrderedCollection new. "
	strategies:= OrderedCollection with: (aStrategy for: self) with: (aSecondStrategy for: self) ! !

!methodRemoval: Logger #initializeWithStrategy:andSecondStrategy: stamp: 'a 6/5/2023 14:50:41'!
initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy
	"log:=OrderedCollection new. "
	strategies:= OrderedCollection with: (aStrategy for: self) with: (aSecondStrategy for: self) !
!RoverRecord methodsFor: 'initialization' stamp: 'a 6/5/2023 14:50:52' prior: 50628712!
initializeWithStrategy: aStrategy 
	strategies:= OrderedCollection with: (aStrategy for: self)! !
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:51:14'!
intialize 
	log:=OrderedCollection new. ! !
!RoverRecord methodsFor: 'initialization' stamp: 'a 6/5/2023 14:51:28' prior: 50628735!
initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy
	strategies:= OrderedCollection with: (aStrategy for: self) with: (aSecondStrategy for: self) ! !
!RoverRecord methodsFor: 'initialization' stamp: 'a 6/5/2023 14:51:51'!
initialize: aStrategy 
	strategies:= OrderedCollection with: (aStrategy for: self)! !
!Window methodsFor: 'initialization' stamp: 'a 6/5/2023 14:51:51' overrides: 50628773!
initialize: aStrategy 
	heading:=''.
	position:=''! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:51:51' prior: 50628022!
for: aMarsRover with: aStrategy 
	|logger| 
	logger := self new initialize: aStrategy. 
	aMarsRover addRecord: logger. 
	^logger! !

!methodRemoval: RoverRecord #initializeWithStrategy: stamp: 'a 6/5/2023 14:51:51'!
initializeWithStrategy: aStrategy 
	strategies:= OrderedCollection with: (aStrategy for: self)!

!methodRemoval: Window #initializeWithStrategy: stamp: 'a 6/5/2023 14:51:51'!
initializeWithStrategy: aStrategy 
	heading:=''.
	position:=''!
!RoverRecord methodsFor: 'initialization' stamp: 'a 6/5/2023 14:52:57'!
initializeWith: aStrategy 
	strategies:= OrderedCollection with: (aStrategy for: self)! !
!Window methodsFor: 'initialization' stamp: 'a 6/5/2023 14:52:57' overrides: 50628801!
initializeWith: aStrategy 
	heading:=''.
	position:=''! !
!Logger class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:52:57' prior: 50628784!
for: aMarsRover with: aStrategy 
	|logger| 
	logger := self new initializeWith: aStrategy. 
	aMarsRover addRecord: logger. 
	^logger! !

!methodRemoval: RoverRecord #initialize: stamp: 'a 6/5/2023 14:52:57'!
initialize: aStrategy 
	strategies:= OrderedCollection with: (aStrategy for: self)!

!methodRemoval: Window #initialize: stamp: 'a 6/5/2023 14:52:57'!
initialize: aStrategy 
	heading:=''.
	position:=''!
!Window methodsFor: 'initialization' stamp: 'a 6/5/2023 14:53:06' overrides: 16920235!
initialize 
	heading:=''.
	position:=''! !

!methodRemoval: Window #initializeWith: stamp: 'a 6/5/2023 14:53:09'!
initializeWith: aStrategy 
	heading:=''.
	position:=''!
!Logger methodsFor: 'initialization' stamp: 'a 6/5/2023 14:53:25' overrides: 16920235!
initialize 
	log:=OrderedCollection new. ! !

!methodRemoval: Logger #intialize stamp: 'a 6/5/2023 14:53:25'!
intialize 
	log:=OrderedCollection new. !
!RoverRecord class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:54:10'!
for: aMarsRover with: aStrategy with: aSecondStrategy
	|logger| 
	logger := self new initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy . 
	aMarsRover addRecord: logger. 
	^logger! !

!methodRemoval: Logger class #for:with:with: stamp: 'a 6/5/2023 14:54:10'!
for: aMarsRover with: aStrategy with: aSecondStrategy
	|logger| 
	logger := self new initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy . 
	aMarsRover addRecord: logger. 
	^logger!
!RoverRecord class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:54:14'!
for: aMarsRover with: aStrategy 
	|logger| 
	logger := self new initializeWith: aStrategy. 
	aMarsRover addRecord: logger. 
	^logger! !

!methodRemoval: Logger class #for:with: stamp: 'a 6/5/2023 14:54:14'!
for: aMarsRover with: aStrategy 
	|logger| 
	logger := self new initializeWith: aStrategy. 
	aMarsRover addRecord: logger. 
	^logger!
!RoverRecord class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:54:18' prior: 50628863!
for: aMarsRover with: aStrategy 
	|record| 
	record := self new initializeWith: aStrategy. 
	aMarsRover addRecord: record. 
	^record! !
!RoverRecord class methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:54:30' prior: 50628845!
for: aMarsRover with: aStrategy with: aSecondStrategy
	|record| 
	record := self new initializeWithStrategy: aStrategy andSecondStrategy: aSecondStrategy . 
	aMarsRover addRecord: record. 
	^record! !

!methodRemoval: Window class #for:with: stamp: 'a 6/5/2023 14:54:38'!
for: aRover with: aStrategy  
	|window| 
	window := self new. 
	aRover addRecord: window. 
	^window!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:55:04' prior: 50627998!
test01NewPositionWindowIsEmpty
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := Window for: marsRover with: PositionRecordingStrategy . 
	self assert: '' equals: window position. ! !

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/5/2023 14:55:06'!
PASSED!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:55:14' prior: 50627881!
test02PositionWindowWithCommandsIsCurrentPosition
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := Window for: marsRover with: PositionRecordingStrategy . 
	marsRover process: 'fbff'. 
	self assert: '1@3' equals: window position. ! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:55:28' prior: 50627956!
test03DirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := Window for: marsRover with: HeadingRecordingStrategy . 
	marsRover process: 'llrl'. 
	self assert: 'Apuntando al sur' equals: window heading. ! !

!testRun: #MarsRoverWindowTest #test03DirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/5/2023 14:55:29'!
PASSED!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:55:49' prior: 50627893!
test03PositionAndDirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := Window for: marsRover with: PositionRecordingStrategy with: HeadingRecordingStrategy . 
	marsRover process: 'rflbr'. 
	self assert: 'Apuntando al este' equals: window heading. 
	self assert: '2@0' equals: window position.! !

!testRun: #MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/5/2023 14:55:51'!
PASSED!

----SNAPSHOT----(5 June 2023 14:55:57) CuisUniversity-5819.image priorSource: 9496497!

!classRemoval: #DirectionWindow stamp: 'a 6/5/2023 14:56:01'!
Window subclass: #DirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #PositionAndDirectionWindow stamp: 'a 6/5/2023 14:56:03'!
Window subclass: #PositionAndDirectionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #PositionWindow stamp: 'a 6/5/2023 14:56:06'!
Window subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/5/2023 14:56:07'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/5/2023 14:56:07'!
PASSED!

!testRun: #MarsRoverWindowTest #test03DirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/5/2023 14:56:07'!
PASSED!

!testRun: #MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/5/2023 14:56:07'!
PASSED!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 14:56:25'!
test04PositionAndDirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := Window for: marsRover with: PositionRecordingStrategy with: HeadingRecordingStrategy . 
	marsRover process: 'rflbr'. 
	self assert: 'Apuntando al este' equals: window heading. 
	self assert: '2@0' equals: window position.! !

!methodRemoval: MarsRoverWindowTest #test03PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/5/2023 14:56:25'!
test03PositionAndDirectionWindowWithCommandsIsCurrentHeading
	| marsRover window |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth . 
	window := Window for: marsRover with: PositionRecordingStrategy with: HeadingRecordingStrategy . 
	marsRover process: 'rflbr'. 
	self assert: 'Apuntando al este' equals: window heading. 
	self assert: '2@0' equals: window position.!

----SNAPSHOT----(5 June 2023 14:56:36) CuisUniversity-5819.image priorSource: 9513988!

----SNAPSHOT----(5 June 2023 14:57:35) CuisUniversity-5819.image priorSource: 9516192!

----STARTUP---- (5 June 2023 15:26:59) as /home/antonio/Ingenieria de Software I/Cuis University/linux64/CuisUniversity-5819.image!

!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 15:30:44'!
newPositionLoggerForMarsRover: aBlock
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: PositionRecordingStrategy . 
	aBlock value: marsRover! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 15:31:08' prior: 50629041!
newPositionLoggerForMarsRover: aBlock
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: PositionRecordingStrategy . 
	aBlock value: marsRover value: newLog! !
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 15:32:28' prior: 50628221!
test01NewPositionLogIsEmpty 
	self newPositionLoggerForMarsRover: [:aMarsRover :aLog | 
		self assert: OrderedCollection new equals: aLog log. 
	]! !

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/5/2023 15:32:30'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 15:33:00' prior: 50628184!
test02PositionLogWithOneCommandIsCorrect
	self newPositionLoggerForMarsRover: [:aMarsRover :aLog | 
		aMarsRover process: 'f'.
		self assert: (OrderedCollection with: '1@2') equals: aLog log. 
	]! !

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 15:33:02'!
PASSED!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 15:33:35' prior: 50628238!
test03PositionLogWithMultipleCommandsIsCorrect
	
	self newPositionLoggerForMarsRover: [:aMarsRover :aLog |
		aMarsRover process: 'fblfb'.
		self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: aLog log. 
	]! !

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 15:33:40'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/5/2023 15:33:40'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 15:33:40'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 15:33:40'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 15:33:40'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 15:33:40'!
PASSED!

----SNAPSHOT----(5 June 2023 15:33:55) CuisUniversity-5819.image priorSource: 9516280!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 15:34:51'!
newPositionLoggerForMarsRoverVerifies: aBlock
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: PositionRecordingStrategy . 
	aBlock value: marsRover value: newLog! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 15:34:51' prior: 50629061!
test01NewPositionLogIsEmpty 
	self newPositionLoggerForMarsRoverVerifies: [:aMarsRover :aLog | 
		self assert: OrderedCollection new equals: aLog log. 
	]! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 15:34:51' prior: 50629072!
test02PositionLogWithOneCommandIsCorrect
	self newPositionLoggerForMarsRoverVerifies: [:aMarsRover :aLog | 
		aMarsRover process: 'f'.
		self assert: (OrderedCollection with: '1@2') equals: aLog log. 
	]! !
!MarsRoverLogTest methodsFor: 'as yet unclassified' stamp: 'a 6/5/2023 15:34:51' prior: 50629085!
test03PositionLogWithMultipleCommandsIsCorrect
	
	self newPositionLoggerForMarsRoverVerifies: [:aMarsRover :aLog |
		aMarsRover process: 'fblfb'.
		self assert: (OrderedCollection with: '1@2' with: '1@1' with: '0@1' with:'1@1') equals: aLog log. 
	]! !

!methodRemoval: MarsRoverLogTest #newPositionLoggerForMarsRover: stamp: 'a 6/5/2023 15:34:51'!
newPositionLoggerForMarsRover: aBlock
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: PositionRecordingStrategy . 
	aBlock value: marsRover value: newLog!
!MarsRoverLogTest methodsFor: 'testing' stamp: 'a 6/5/2023 15:35:10' prior: 50629119!
newPositionLoggerForMarsRoverVerifies: aConditionToVerify
	| newLog marsRover |
	marsRover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	newLog := Logger for: marsRover with: PositionRecordingStrategy . 
	aConditionToVerify value: marsRover value: newLog! !

----SNAPSHOT----(5 June 2023 15:35:14) CuisUniversity-5819.image priorSource: 9518906!

----SNAPSHOT----(5 June 2023 15:36:32) CuisUniversity-5819.image priorSource: 9520937!

----SNAPSHOT----(5 June 2023 15:37:55) CuisUniversity-5819.image priorSource: 9521025!
!Window methodsFor: 'updating' stamp: 'a 6/5/2023 15:38:05' prior: 50628595 overrides: 50627671!
positionChanged: aPosition 
	strategies do: [:currentStrategy | currentStrategy positionChanged: aPosition].! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'a 6/5/2023 15:38:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test01NewPositionWindowIsEmpty stamp: 'a 6/5/2023 15:38:29'!
PASSED!

!testRun: #MarsRoverWindowTest #test02PositionWindowWithCommandsIsCurrentPosition stamp: 'a 6/5/2023 15:38:29'!
PASSED!

!testRun: #MarsRoverWindowTest #test03DirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/5/2023 15:38:29'!
PASSED!

!testRun: #MarsRoverWindowTest #test04PositionAndDirectionWindowWithCommandsIsCurrentHeading stamp: 'a 6/5/2023 15:38:29'!
PASSED!

!testRun: #MarsRoverLogTest #test01NewPositionLogIsEmpty stamp: 'a 6/5/2023 15:38:30'!
PASSED!

!testRun: #MarsRoverLogTest #test02PositionLogWithOneCommandIsCorrect stamp: 'a 6/5/2023 15:38:30'!
PASSED!

!testRun: #MarsRoverLogTest #test03PositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 15:38:30'!
PASSED!

!testRun: #MarsRoverLogTest #test04DirectionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 15:38:30'!
PASSED!

!testRun: #MarsRoverLogTest #test05DirectionAndPositionLogWithMultipleCommandsIsCorrect stamp: 'a 6/5/2023 15:38:30'!
PASSED!