

----QUIT----(30 May 2023 00:05:32) CuisUniversity-5832.image priorSource: 4928100!

----STARTUP---- (30 May 2023 00:05:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5832.image!


----QUIT----(30 May 2023 00:05:33) CuisUniversity-5832.image priorSource: 9366537!

----STARTUP---- (30 May 2023 12:03:27) as /Users/developer/Downloads/macos64-2/CuisUniversity-5832.image!


----End fileIn of /Users/developer/Downloads/Portfolio2/Portfolio-Solucion.st----!

TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:05:44'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:05:47'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!methodRemoval: TransferTransaction #transaction stamp: 'TB 5/30/2023 12:05:51'!
transaction

	^transaction!

!methodRemoval: TransferTransaction class #for:with:on: stamp: 'TB 5/30/2023 12:06:04'!
for: aTransfer with: aTransaction on: anAccount

	| transaction |
	transaction := self new initializeFor: aTransfer with: aTransaction.
	anAccount register: transaction.
	^transaction!
!TransferTransaction class methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:07:44'!
register: aTransferValue of: aTransfer on: anAccount

	self subclassResponsibility ! !
!TransferDeposit class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:08:05' overrides: 50625547!
register: aTransferValue of: aTransfer on: anAccount

	self subclassResponsibility ! !

!methodRemoval: TransferTransaction class #register:of:on: stamp: 'TB 5/30/2023 12:08:05'!
register: aTransferValue of: aTransfer on: anAccount

	self subclassResponsibility !
!TransferTransaction class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:08:12'!
register: aTransferValue of: aTransfer on: anAccount

	self subclassResponsibility ! !

!methodRemoval: TransferDeposit class #register:of:on: stamp: 'TB 5/30/2023 12:08:12'!
register: aTransferValue of: aTransfer on: anAccount

	self subclassResponsibility !
!TransferDeposit class methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:08:48' overrides: 50625566!
register: aTransferValue of: aTransfer on: anAccount

	^self new initializeFor: aTransferValue with: aTransfer on: anAccount ! !
!TransferDeposit class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:09:03' prior: 50625578 overrides: 50625566!
register: aTransferValue of: aTransfer on: anAccount

	^self new initializeRegister: aTransferValue with: aTransfer on: anAccount ! !
!TransferDeposit class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:09:08' prior: 50625586 overrides: 50625566!
register: aTransferValue of: aTransfer on: anAccount

	^self new initializeRegister: aTransferValue of: aTransfer on: anAccount ! !
!TransferDeposit methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:10:38'!
initializeRegister: aTransferValue of: aTransfer on: anAccount

	super initializeFor: aTransfer with: (Deposit for: aTransferValue).
! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:10:47' prior: 50625602!
initializeRegister: aTransferValue of: aTransfer on: anAccount

	self initializeFor: aTransfer with: (Deposit for: aTransferValue).
! !
!TransferDeposit class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:11:31' prior: 50625595 overrides: 50625566!
register: aTransferValue of: aTransfer on: anAccount

	| transaction |
	transaction := self new initializeRegister: aTransferValue of: aTransfer on: anAccount.
	anAccount register: transaction.
	^transaction! !
!TransferTransaction class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:11:45' prior: 50625566!
register: aTransferValue of: aTransfer on: anAccount

	| transaction |
	transaction := self new initializeRegister: aTransferValue of: aTransfer on: anAccount.
	anAccount register: transaction.
	^transaction! !

!methodRemoval: TransferDeposit class #register:of:on: stamp: 'TB 5/30/2023 12:11:47'!
register: aTransferValue of: aTransfer on: anAccount

	| transaction |
	transaction := self new initializeRegister: aTransferValue of: aTransfer on: anAccount.
	anAccount register: transaction.
	^transaction!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:13:09'!
initializeRegister: aTransferValue of: aTransfer 

	self initializeFor: aTransfer with: (Deposit for: aTransferValue).
! !
!TransferTransaction class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:13:09' prior: 50625629!
register: aTransferValue of: aTransfer on: anAccount

	| transaction |
	transaction := self new initializeRegister: aTransferValue of: aTransfer .
	anAccount register: transaction.
	^transaction! !

!methodRemoval: TransferDeposit #initializeRegister:of:on: stamp: 'TB 5/30/2023 12:13:09'!
initializeRegister: aTransferValue of: aTransfer on: anAccount

	self initializeFor: aTransfer with: (Deposit for: aTransferValue).
!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:13:46' overrides: 50625382!
initializeFor: aTransferValue with: aTransfer 

	self initializeFor: aTransfer with: (Deposit for: aTransferValue).
! !
!TransferTransaction class methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:13:46' prior: 50625656!
register: aTransferValue of: aTransfer on: anAccount

	| transaction |
	transaction := self new initializeFor: aTransferValue with: aTransfer .
	anAccount register: transaction.
	^transaction! !

!methodRemoval: TransferDeposit #initializeRegister:of: stamp: 'TB 5/30/2023 12:13:46'!
initializeRegister: aTransferValue of: aTransfer 

	self initializeFor: aTransfer with: (Deposit for: aTransferValue).
!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:13:52' prior: 50625673 overrides: 50625382!
initializeFor: aTransferValue with: aTransfer 

	super initializeFor: aTransfer with: (Deposit for: aTransferValue).
! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:14:15' overrides: 50625382!
initializeFor: aTransferValue with: aTransfer

	super initializeFor: aTransfer with: (Withdraw for: aTransferValue).! !

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 5/30/2023 12:14:40'!
ERROR!

!testRun: #TransferTest #test02SourceAccountHasTransferWithdrawRegistered stamp: 'TB 5/30/2023 12:14:40'!
ERROR!

!testRun: #TransferTest #test03DestinationAccountHasTransferDepositRegistered stamp: 'TB 5/30/2023 12:14:40'!
ERROR!

!testRun: #TransferTest #test04TransferDepositCanAccessTheTransfer stamp: 'TB 5/30/2023 12:14:40'!
ERROR!

!testRun: #TransferTest #test05TransferWithdrawalCanAccessTheTransfer stamp: 'TB 5/30/2023 12:14:40'!
ERROR!

!testRun: #TransferTest #test02SourceAccountHasTransferWithdrawRegistered stamp: 'TB 5/30/2023 12:14:47'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:15:41' prior: 50625474!
initializeRegister: anAmountToTransfer from: aSource to: aDestination

	withdrawal := TransferWithdraw register: anAmountToTransfer of: self on: aSource.
	deposit := TransferDeposit register: anAmountToTransfer of: self on: aDestination.! !

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 5/30/2023 12:15:47'!
PASSED!

!testRun: #TransferTest #test02SourceAccountHasTransferWithdrawRegistered stamp: 'TB 5/30/2023 12:15:47'!
PASSED!

!testRun: #TransferTest #test03DestinationAccountHasTransferDepositRegistered stamp: 'TB 5/30/2023 12:15:47'!
PASSED!

!testRun: #TransferTest #test04TransferDepositCanAccessTheTransfer stamp: 'TB 5/30/2023 12:15:47'!
PASSED!

!testRun: #TransferTest #test05TransferWithdrawalCanAccessTheTransfer stamp: 'TB 5/30/2023 12:15:47'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:15:49'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:15:49'!
ERROR!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:15:49'!
ERROR!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:15:49'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:15:49'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:15:49'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:15:49'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:15:49'!
ERROR!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:15:49'!
ERROR!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:15:49'!
ERROR!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:15:49'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:15:49'!
ERROR!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:15:49'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'TB 5/30/2023 12:15:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'TB 5/30/2023 12:15:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'TB 5/30/2023 12:15:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'TB 5/30/2023 12:15:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'TB 5/30/2023 12:15:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'TB 5/30/2023 12:15:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'TB 5/30/2023 12:15:51'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 5/30/2023 12:15:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 5/30/2023 12:15:53'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:16:22' prior: 50625249 overrides: 50625026!
accountSummary

	| accountSummary |
	accountSummary := transactions collect: [:transaction | 
		| newSummaryLine |
		(transaction isKindOf: Deposit) ifTrue: [newSummaryLine := 'Deposito por '].
		(transaction isKindOf: Withdraw) ifTrue: [newSummaryLine := 'Extraccion por '].
		(transaction isKindOf: TransferDeposit) ifTrue: [
			newSummaryLine := 'Entrada por transferencia de '
		].
		(transaction isKindOf: TransferWithdraw) ifTrue: [
			newSummaryLine := 'Salida por transferencia de '
		].
		
		newSummaryLine, transaction value asString, '.'
	].

	accountSummary add: 'Balance = ', self balance asString.
	^accountSummary ! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:16:41' prior: 50625276 overrides: 50625030!
transferNet
	
	^transactions sum: [:transaction | 
		| transferBalance |
		(transaction isKindOf: TransferTransaction) ifFalse: [transferBalance := 0]
			ifTrue:[
				(transaction isKindOf: TransferWithdraw) ifTrue: [transferBalance := -1 * transaction value].		
				(transaction isKindOf: TransferDeposit) ifTrue: [transferBalance := transaction value].
			].
		
		transferBalance.
	] ifEmpty: 0.! !

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:16:48'!
PASSED!

----SNAPSHOT----(30 May 2023 12:16:52) CuisUniversity-5832.image priorSource: 9366758!
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:18:54' prior: 50625894 overrides: 50625026!
accountSummary

	| accountSummary |
	accountSummary := OrderedCollection new.
	
	transactions do: [ :transaction |
		transaction contributeToSummary: accountSummary.
		"(transaction isKindOf: Deposit) ifTrue: [newSummaryLine := 'Deposito por '].
		(transaction isKindOf: Withdraw) ifTrue: [newSummaryLine := 'Extraccion por '].
		(transaction isKindOf: TransferDeposit) ifTrue: [
			newSummaryLine := 'Entrada por transferencia de '
		].
		(transaction isKindOf: TransferWithdraw) ifTrue: [
			newSummaryLine := 'Salida por transferencia de '
		].
		
		newSummaryLine, transaction value asString, '.'"
	].

	accountSummary add: 'Balance = ', self balance asString.
	^accountSummary ! !
!AccountTransaction methodsFor: 'nil' stamp: 'TB 5/30/2023 12:19:44'!
contributeToSummary: aSummary

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:19:49' overrides: 50626010!
contributeToSummary: aSummary

	self subclassResponsibility ! !
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:19:49' overrides: 50626010!
contributeToSummary: aSummary

	self subclassResponsibility ! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:19:49' overrides: 50626010!
contributeToSummary: aSummary

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #contributeToSummary: stamp: 'TB 5/30/2023 12:19:49'!
contributeToSummary: aSummary

	self subclassResponsibility !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:19:49'!
contributeToSummary: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:20:22' prior: 50626015 overrides: 50626036!
contributeToSummary: aSummary

	^aSummary add: 'Deposito por ', value asString, '.'.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:20:24' prior: 50626042 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Deposito por ', value asString, '.'.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:20:48' overrides: 50626021!
contributeToSummary: aSummary

	self subclassResponsibility ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:20:48' overrides: 50626021!
contributeToSummary: aSummary

	self subclassResponsibility ! !

!methodRemoval: TransferTransaction #contributeToSummary: stamp: 'TB 5/30/2023 12:20:48'!
contributeToSummary: aSummary

	self subclassResponsibility !
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:20:48' overrides: 50626036!
contributeToSummary: aSummary

	self subclassResponsibility! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:20:57' prior: 50626026 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Extraccion por ', value asString, '.'.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:21:13' prior: 50626055 overrides: 50626072!
contributeToSummary: aSummary

	aSummary add: 'Deposito por ', transaction value asString, '.'.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:21:24' prior: 50626061 overrides: 50626072!
contributeToSummary: aSummary

	aSummary add: 'Deposito por ', transaction value asString, '.'.! !

!methodRemoval: TransferTransaction #contributeToSummary: stamp: 'TB 5/30/2023 12:22:19'!
contributeToSummary: aSummary

	self subclassResponsibility!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:22:58'!
FAILURE!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:22:58'!
FAILURE!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:22:58'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:23:02'!
FAILURE!

account accountSummary !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:23:54' prior: 50626092 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Salida por transferencia por ', transaction value asString, '.'.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:24:02' prior: 50626085 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Entrada por transferencia por ', transaction value asString, '.'.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:24:07' prior: 50626165 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Entrada por transferencia de ', transaction value asString, '.'.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:24:10' prior: 50626158 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Salida por transferencia de ', transaction value asString, '.'.! !

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:24:15'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:24:15'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:24:27' prior: 50625986 overrides: 50625026!
accountSummary

	| accountSummary |
	accountSummary := OrderedCollection new.
	
	transactions do: [ :transaction | 		transaction contributeToSummary: accountSummary 	].

	accountSummary add: 'Balance = ', self balance asString.
	^accountSummary ! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:25:19' prior: 50625918 overrides: 50625030!
transferNet
	| transferNet |
	
	transferNet := 0.
	transactions do: [:transaction | 
		| transferBalance |
		transaction contributeToTransferNet: transferNet.
		(transaction isKindOf: TransferTransaction) ifFalse: [transferBalance := 0]
			ifTrue:[
				(transaction isKindOf: TransferWithdraw) ifTrue: [transferBalance := -1 * transaction value].		
				(transaction isKindOf: TransferDeposit) ifTrue: [transferBalance := transaction value].
			].
		
		transferBalance.
	].

	^transferNet! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:25:31' prior: 50626252 overrides: 50625030!
transferNet
	| transferNet |
	
	transferNet := 0.
	transactions do: [:transaction | 
		transaction contributeToTransferNet: transferNet.
		"(transaction isKindOf: TransferTransaction) ifFalse: [transferBalance := 0]
			ifTrue:[
				(transaction isKindOf: TransferWithdraw) ifTrue: [transferBalance := -1 * transaction value].		
				(transaction isKindOf: TransferDeposit) ifTrue: [transferBalance := transaction value].
			].
		
		transferBalance."
	].

	^transferNet! !
!AccountTransaction methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:14'!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !
!Deposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:30' overrides: 50626289!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !
!TransferTransaction methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:30' overrides: 50626289!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:30' overrides: 50626289!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !

!methodRemoval: AccountTransaction #contributeToTransferNet: stamp: 'TB 5/30/2023 12:26:30'!
contributeToTransferNet: aTransferNet

	self subclassResponsibility!
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:26:30'!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !
!Deposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:34' prior: 50626294 overrides: 50626315!
contributeToTransferNet: aTransferNet! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:39' prior: 50626305 overrides: 50626315!
contributeToTransferNet: aTransferNet! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:46' overrides: 50626300!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:26:46' overrides: 50626300!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !

!methodRemoval: TransferTransaction #contributeToTransferNet: stamp: 'TB 5/30/2023 12:26:46'!
contributeToTransferNet: aTransferNet

	self subclassResponsibility!
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:26:46' overrides: 50626315!
contributeToTransferNet: aTransferNet

	self subclassResponsibility! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:27:34' prior: 50626331 overrides: 50626348!
contributeToTransferNet: aTransferNet

	^aTransferNet + transaction value.! !

AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTransaction category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:30:46'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTransaction methodsFor: 'balance' stamp: 'TB 5/30/2023 12:30:55' prior: 50625396 overrides: 50625309!
affectBalance: aBalanceToAffect

	self subclassResponsibility ! !
!TransferTransaction methodsFor: 'initialization' stamp: 'TB 5/30/2023 12:31:00' prior: 50625382!
initializeFor: aTransfer with: aTransaction

	transfer := aTransfer .! !
!TransferTransaction methodsFor: 'initialization' stamp: 'TB 5/30/2023 12:31:06'!
initializeFor: aTransfer

	transfer := aTransfer .! !

!methodRemoval: TransferTransaction #initializeFor:with: stamp: 'TB 5/30/2023 12:31:09'!
initializeFor: aTransfer with: aTransaction

	transfer := aTransfer .!
!TransferTransaction methodsFor: 'value' stamp: 'TB 5/30/2023 12:31:19' prior: 50625402 overrides: 50625305!
value

	^transfer value! !

!methodRemoval: TransferTransaction class #register:of:on: stamp: 'TB 5/30/2023 12:31:56'!
register: aTransferValue of: aTransfer on: anAccount

	| transaction |
	transaction := self new initializeFor: aTransferValue with: aTransfer .
	anAccount register: transaction.
	^transaction!

!methodRemoval: TransferDeposit #initializeFor:with: stamp: 'TB 5/30/2023 12:32:16'!
initializeFor: aTransferValue with: aTransfer 

	super initializeFor: aTransfer with: (Deposit for: aTransferValue).
!

!methodRemoval: TransferWithdraw #initializeFor:with: stamp: 'TB 5/30/2023 12:32:19'!
initializeFor: aTransferValue with: aTransfer

	super initializeFor: aTransfer with: (Withdraw for: aTransferValue).!
!Transfer methodsFor: 'initialization' stamp: 'TB 5/30/2023 12:32:37' prior: 50625733!
initializeRegister: anAmountToTransfer from: aSource to: aDestination

	withdrawal := TransferWithdraw register: self on: aSource.
	deposit := TransferDeposit register: self on: aDestination.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:32:46'!
Object subclass: #Transfer
	instanceVariableNames: 'withdrawal deposit value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'accessing' stamp: 'TB 5/30/2023 12:32:44' overrides: 16902254!
value
	^value! !
!Transfer methodsFor: 'initialization' stamp: 'TB 5/30/2023 12:32:53' prior: 50626422!
initializeRegister: anAmountToTransfer from: aSource to: aDestination

	value := anAmountToTransfer.
	withdrawal := TransferWithdraw register: self on: aSource.
	deposit := TransferDeposit register: self on: aDestination.! !
!TransferDeposit methodsFor: 'balance' stamp: 'TB 5/30/2023 12:33:04' overrides: 50626374!
affectBalance: aBalanceToAffect

	self subclassResponsibility ! !
!TransferWithdraw methodsFor: 'balance' stamp: 'TB 5/30/2023 12:33:04' overrides: 50626374!
affectBalance: aBalanceToAffect

	self subclassResponsibility ! !

!methodRemoval: TransferTransaction #affectBalance: stamp: 'TB 5/30/2023 12:33:04'!
affectBalance: aBalanceToAffect

	self subclassResponsibility !
!TransferTransaction methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:33:04' overrides: 50625309!
affectBalance: aBalanceToAffect

	self subclassResponsibility! !

!methodRemoval: TransferTransaction #contributeToTransferNet: stamp: 'TB 5/30/2023 12:33:18'!
contributeToTransferNet: aTransferNet

	self subclassResponsibility!
!TransferDeposit methodsFor: 'balance' stamp: 'TB 5/30/2023 12:33:32' prior: 50626453 overrides: 50626469!
affectBalance: aBalanceToAffect

	^aBalanceToAffect + transfer value! !
!TransferWithdraw methodsFor: 'balance' stamp: 'TB 5/30/2023 12:33:43' prior: 50626458 overrides: 50626469!
affectBalance: aBalanceToAffect

	^aBalanceToAffect - transfer value! !

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 5/30/2023 12:33:46'!
ERROR!

!testRun: #TransferTest #test02SourceAccountHasTransferWithdrawRegistered stamp: 'TB 5/30/2023 12:33:46'!
ERROR!

!testRun: #TransferTest #test03DestinationAccountHasTransferDepositRegistered stamp: 'TB 5/30/2023 12:33:46'!
ERROR!

!testRun: #TransferTest #test04TransferDepositCanAccessTheTransfer stamp: 'TB 5/30/2023 12:33:46'!
ERROR!

!testRun: #TransferTest #test05TransferWithdrawalCanAccessTheTransfer stamp: 'TB 5/30/2023 12:33:46'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 5/30/2023 12:33:49'!
ERROR!

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 5/30/2023 12:34:02'!
ERROR!
!TransferDeposit class methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:34:28'!
for: aTransfer

	^self new initializeFor: aTransfer! !
!TransferTransaction class methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:34:33'!
for: aTransfer

	^self new initializeFor: aTransfer! !

!methodRemoval: TransferDeposit class #for: stamp: 'TB 5/30/2023 12:34:37'!
for: aTransfer

	^self new initializeFor: aTransfer!

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 5/30/2023 12:34:41'!
PASSED!

!testRun: #TransferTest #test02SourceAccountHasTransferWithdrawRegistered stamp: 'TB 5/30/2023 12:34:41'!
PASSED!

!testRun: #TransferTest #test03DestinationAccountHasTransferDepositRegistered stamp: 'TB 5/30/2023 12:34:41'!
PASSED!

!testRun: #TransferTest #test04TransferDepositCanAccessTheTransfer stamp: 'TB 5/30/2023 12:34:41'!
PASSED!

!testRun: #TransferTest #test05TransferWithdrawalCanAccessTheTransfer stamp: 'TB 5/30/2023 12:34:41'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:34:43'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:34:43'!
FAILURE!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:34:43'!
FAILURE!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:34:43'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:34:43'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:34:43'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:34:43'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:34:43'!
ERROR!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:34:43'!
ERROR!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:34:43'!
ERROR!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:34:43'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:34:43'!
ERROR!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:34:43'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 5/30/2023 12:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'TB 5/30/2023 12:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'TB 5/30/2023 12:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'TB 5/30/2023 12:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'TB 5/30/2023 12:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'TB 5/30/2023 12:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'TB 5/30/2023 12:34:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'TB 5/30/2023 12:34:47'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:34:49'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:34:49'!
FAILURE!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:34:49'!
FAILURE!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:34:49'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:34:49'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:34:49'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:34:49'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:34:49'!
ERROR!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:34:49'!
ERROR!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:34:49'!
ERROR!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:34:49'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:34:49'!
ERROR!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:34:49'!
ERROR!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:34:50'!
FAILURE!

account accountSummary !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:35:13' prior: 50626172 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Entrada por transferencia de ', transfer value asString, '.'.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:35:19' prior: 50626354 overrides: 50626315!
contributeToTransferNet: aTransferNet

	^aTransferNet + transfer value.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:35:25' prior: 50626179 overrides: 50626036!
contributeToSummary: aSummary

	aSummary add: 'Salida por transferencia de ', transfer value asString, '.'.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:35:37' prior: 50626337 overrides: 50626315!
contributeToTransferNet: aTransferNet

	^aTransferNet - transfer value! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:35:47' prior: 50626271 overrides: 50625030!
transferNet
	| transferNet |
	
	transferNet := 0.
	transactions do: [:transaction | 
		transferNet := transaction contributeToTransferNet: transferNet.
		"(transaction isKindOf: TransferTransaction) ifFalse: [transferBalance := 0]
			ifTrue:[
				(transaction isKindOf: TransferWithdraw) ifTrue: [transferBalance := -1 * transaction value].		
				(transaction isKindOf: TransferDeposit) ifTrue: [transferBalance := transaction value].
			].
		
		transferBalance."
	].

	^transferNet! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:36:13' prior: 50626759 overrides: 50625030!
transferNet
	
	^transactions inject: 0 into: [:transferNet :transaction | 
		transaction contributeToTransferNet: transferNet.
		"(transaction isKindOf: TransferTransaction) ifFalse: [transferBalance := 0]
			ifTrue:[
				(transaction isKindOf: TransferWithdraw) ifTrue: [transferBalance := -1 * transaction value].		
				(transaction isKindOf: TransferDeposit) ifTrue: [transferBalance := transaction value].
			].
		
		transferBalance."
	].! !

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:36:15'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:36:15'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:36:27' prior: 50626778 overrides: 50625030!
transferNet
	
	^transactions inject: 0 into: [:transferNet :transaction | 		transaction contributeToTransferNet: transferNet 	].! !

Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:38:06'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary class methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:38:17'!
of: anAccount

	^self new initializeOf: anAccount! !

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:38:31'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:38:30'!
initializeOf: anAccount

	account := anAccount ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:38:47' overrides: 16902254!
value

	! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:39:34' prior: 50626880 overrides: 16902254!
value

	| accountSummary |
	accountSummary := OrderedCollection new.
	account addToAccountSummary: accountSummary.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:39:49' prior: 50626885 overrides: 16902254!
value

	| accountSummary |
	accountSummary := OrderedCollection new.
	account contributeToAccountSummary: accountSummary.
	
	^accountSummary ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:40:13' prior: 50626893 overrides: 16902254!
value

	| accountSummary |
	accountSummary := OrderedCollection new.
	account contributeToAccountSummary: accountSummary.
	
	accountSummary add: 'Balance = ', account balance asString.
	^accountSummary ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:42:54' prior: 50626902 overrides: 16902254!
value

	| accountSummary |
	accountSummary := OrderedCollection new.
	account contributeToAccountSummary: self.
	
	accountSummary add: 'Balance = ', account balance asString.
	^accountSummary ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:44:36' prior: 50626913 overrides: 16902254!
value

	| accountSummary |
	accountSummary := OrderedCollection new.
	account informAccountSummary: self.
		
	accountSummary add: 'Balance = ', account balance asString.
	^accountSummary ! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:45:17'!
informAccountSummary: anAccountSummary
	
	^transactions do: [ :transaction | 		transaction contributeToSummary: anAccountSummary 	]! !
!AccountTransaction methodsFor: 'reports' stamp: 'TB 5/30/2023 12:45:22'!
contributeToAccountSummary: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:45:22' overrides: 50626939!
contributeToAccountSummary: aSummary

	aSummary add: 'Deposito por ', value asString, '.'.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:45:22' overrides: 50626939!
contributeToAccountSummary: aSummary

	aSummary add: 'Entrada por transferencia de ', transfer value asString, '.'.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:45:22' overrides: 50626939!
contributeToAccountSummary: aSummary

	aSummary add: 'Salida por transferencia de ', transfer value asString, '.'.! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:45:22' overrides: 50626939!
contributeToAccountSummary: aSummary

	aSummary add: 'Extraccion por ', value asString, '.'.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:45:23' prior: 50626932!
informAccountSummary: anAccountSummary
	
	^transactions do: [ :transaction | 		transaction contributeToAccountSummary: anAccountSummary 	]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:45:23' prior: 50626240 overrides: 50625026!
accountSummary

	| accountSummary |
	accountSummary := OrderedCollection new.
	
	transactions do: [ :transaction | 		transaction contributeToAccountSummary: accountSummary 	].

	accountSummary add: 'Balance = ', self balance asString.
	^accountSummary ! !

!methodRemoval: AccountTransaction #contributeToSummary: stamp: 'TB 5/30/2023 12:45:23'!
contributeToSummary: aSummary

	self subclassResponsibility!

!methodRemoval: Deposit #contributeToSummary: stamp: 'TB 5/30/2023 12:45:23'!
contributeToSummary: aSummary

	aSummary add: 'Deposito por ', value asString, '.'.!

!methodRemoval: TransferDeposit #contributeToSummary: stamp: 'TB 5/30/2023 12:45:23'!
contributeToSummary: aSummary

	aSummary add: 'Entrada por transferencia de ', transfer value asString, '.'.!

!methodRemoval: TransferWithdraw #contributeToSummary: stamp: 'TB 5/30/2023 12:45:23'!
contributeToSummary: aSummary

	aSummary add: 'Salida por transferencia de ', transfer value asString, '.'.!

!methodRemoval: Withdraw #contributeToSummary: stamp: 'TB 5/30/2023 12:45:23'!
contributeToSummary: aSummary

	aSummary add: 'Extraccion por ', value asString, '.'.!
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:45:38' prior: 50626971!
informAccountSummary: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToAccountSummary: anAccountSummary 	]! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:47:11'!
addDepositLineOf: aDeposit
	
	|accountSummary|
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.! !

Object subclass: #AccountSummary
	instanceVariableNames: 'account accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountSummary
	instanceVariableNames: 'account accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:47:40' prior: 50626923 overrides: 16902254!
value

	| a |
	a := OrderedCollection new.
	account informAccountSummary: self.
		
	a add: 'Balance = ', account balance asString.
	^a ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:47:45' prior: 50627026!
addDepositLineOf: aDeposit
	
	|a|
	a add: 'Deposito por ', aDeposit value asString, '.'.! !

Object subclass: #AccountSummary
	instanceVariableNames: 'account accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:47:52'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account accountSummary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:48:11' prior: 50627044 overrides: 16902254!
value

	accountSummary := OrderedCollection new.
	account informAccountSummary: self.
		
	accountSummary add: 'Balance = ', account balance asString.
	^accountSummary ! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:48:20' prior: 50627052!
addDepositLineOf: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:48:30'!
addDepositLineFor: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.! !

!methodRemoval: AccountSummary #addDepositLineOf: stamp: 'TB 5/30/2023 12:48:30'!
addDepositLineOf: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.!
!Deposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:48:34' prior: 50626944 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary addDepositLineFor: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:49:09' prior: 50626950 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary addTransferDepositFor: self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:49:32'!
addTransferDepositLineFor: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 12:49:37' prior: 50627106 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary addTransferDepositLineFor: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:49:59' prior: 50626957 overrides: 50626939!
contributeToAccountSummary: aSummary

	aSummary addTransferWithdrawLineFor: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:50:02' prior: 50627128 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary addTransferWithdrawLineFor: self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:50:18'!
addTransferWithdrawLineFor: aTransferDeposit
	
	accountSummary add: 'Salida por transferencia de ', aTransferDeposit transfer value asString, '.'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:50:22' prior: 50627141!
addTransferWithdrawLineFor: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:50:39' prior: 50627135 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary addTransferWithdrawLineFor: self.! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:51:04' prior: 50626964 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary addWithdrawLineFor: self.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:51:18'!
addWithdrawLineFor: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 12:51:22' prior: 50627165 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary addWithdrawLineFor: self.! !
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:51:55' prior: 50624746!
test01EmptyAccountHasEmptyAccountSummary

	self assert: 'Balance = 0' equals: (AccountSummary for: ReceptiveAccount new) value first.! !

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:51:56'!
ERROR!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:52:01' prior: 50627184!
test01EmptyAccountHasEmptyAccountSummary

	self assert: 'Balance = 0' equals: (AccountSummary of: ReceptiveAccount new) value first.! !

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:52:02'!
ERROR!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:52:02'!
ERROR!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:52:02'!
ERROR!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:52:02'!
ERROR!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:52:02'!
PASSED!

!methodRemoval: ReceptiveAccount #accountSummary stamp: 'TB 5/30/2023 12:52:14'!
accountSummary

	| accountSummary |
	accountSummary := OrderedCollection new.
	
	transactions do: [ :transaction | 		transaction contributeToAccountSummary: accountSummary 	].

	accountSummary add: 'Balance = ', self balance asString.
	^accountSummary !

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:52:20'!
ERROR!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:52:20'!
ERROR!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:52:20'!
ERROR!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:52:20'!
ERROR!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:52:20'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:52:22'!
ERROR!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:52:35' prior: 50624752!
test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary

	| account |
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	Withdraw register: 5 on: account.
	Transfer register: 1 from: account to: ReceptiveAccount new.
	Transfer register: 1 from: ReceptiveAccount new to: account.
	
	self assert: (OrderedCollection 
		with: 'Deposito por 10.'
		with: 'Extraccion por 5.'
		with: 'Salida por transferencia de 1.'
		with: 'Entrada por transferencia de 1.'
		with: 'Balance = 5') equals: (AccountSummary of: account) value.! !

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:52:42'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:52:48' prior: 50624772!
test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary

	| account expectedSummary |
	account := ReceptiveAccount new.
	Deposit register: 10 on: account.
	Withdraw register: 5 on: account.
	Deposit register: 10 on: account.
	Transfer register: 1 from: account to: ReceptiveAccount new.
	Withdraw register: 5 on: account.
	Transfer register: 1 from: ReceptiveAccount new to: account.
	Transfer register: 1 from: ReceptiveAccount new to: account.
	Transfer register: 1 from: account to: ReceptiveAccount new.
	
	expectedSummary := 	OrderedCollection 
		with: 'Deposito por 10.'
		with: 'Extraccion por 5.'
		with: 'Deposito por 10.'
		with: 'Salida por transferencia de 1.'
		with: 'Extraccion por 5.'
		with: 'Entrada por transferencia de 1.'.
		
	expectedSummary add: 'Entrada por transferencia de 1.'.
	expectedSummary add: 'Salida por transferencia de 1.'.
	expectedSummary add: 'Balance = 10'.
	
	self assert: expectedSummary equals: (AccountSummary of: account) value.! !

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:52:49'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:52:57' prior: 50624811!
test05PortfolioWithOneAccountHasCorrectSummary
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 5 on: account.
	
	portfolio add: account.
	self assert: (OrderedCollection with: 'Deposito por 5.' with: 'Balance = 5') equals: (AccountSummary of: portfolio) value.! !

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:53:00'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/30/2023 12:53:22'!
informAccountSummary: anAccountSummary

	| summary |
	summary := (accounts collect: [:cuenta | cuenta accountSummary allButLast]) flatten.
	summary add: 'Balance = ', self balance asString.
	
	^summary! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/30/2023 12:53:43'!
informSummary: anAccountSummary

	| summary |
	summary := (accounts collect: [:cuenta | cuenta accountSummary allButLast]) flatten.
	summary add: 'Balance = ', self balance asString.
	
	^summary! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 12:53:43'!
informSummary: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToAccountSummary: anAccountSummary 	]! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 12:53:43' prior: 50627072 overrides: 16902254!
value

	accountSummary := OrderedCollection new.
	account informSummary: self.
		
	accountSummary add: 'Balance = ', account balance asString.
	^accountSummary ! !

!methodRemoval: Portfolio #informAccountSummary: stamp: 'TB 5/30/2023 12:53:43'!
informAccountSummary: anAccountSummary

	| summary |
	summary := (accounts collect: [:cuenta | cuenta accountSummary allButLast]) flatten.
	summary add: 'Balance = ', self balance asString.
	
	^summary!

!methodRemoval: ReceptiveAccount #informAccountSummary: stamp: 'TB 5/30/2023 12:53:43'!
informAccountSummary: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToAccountSummary: anAccountSummary 	]!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/30/2023 12:54:13' prior: 50627406!
informSummary: anAccountSummary

	accounts do: [ :cuenta | cuenta informSummary: anAccountSummary ]! !

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:54:15'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:55:45' prior: 50624823!
test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary
	| portfolioHijo cuentaDelPortfolioHijo portfolioPadre cuentaDescendienteDirecto |
	
	portfolioHijo := Portfolio new.
	cuentaDelPortfolioHijo := ReceptiveAccount new.
	Deposit register: 5 on: cuentaDelPortfolioHijo.
	
	portfolioHijo add: cuentaDelPortfolioHijo.
	
	portfolioPadre := Portfolio new.
	cuentaDescendienteDirecto := ReceptiveAccount new.
	Withdraw register: 2 on: cuentaDescendienteDirecto.
	
	portfolioPadre add: cuentaDescendienteDirecto.
	portfolioPadre add: portfolioHijo.
	
	self assert: (OrderedCollection with: 'Extraccion por 2.' with: 'Deposito por 5.' with: 'Balance = 3') equals: (AccountSummary of: portfolioPadre) accountSummary.! !

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:55:46'!
ERROR!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:55:52' prior: 50627457!
test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary
	| portfolioHijo cuentaDelPortfolioHijo portfolioPadre cuentaDescendienteDirecto |
	
	portfolioHijo := Portfolio new.
	cuentaDelPortfolioHijo := ReceptiveAccount new.
	Deposit register: 5 on: cuentaDelPortfolioHijo.
	
	portfolioHijo add: cuentaDelPortfolioHijo.
	
	portfolioPadre := Portfolio new.
	cuentaDescendienteDirecto := ReceptiveAccount new.
	Withdraw register: 2 on: cuentaDescendienteDirecto.
	
	portfolioPadre add: cuentaDescendienteDirecto.
	portfolioPadre add: portfolioHijo.
	
	self assert: (OrderedCollection with: 'Extraccion por 2.' with: 'Deposito por 5.' with: 'Balance = 3') equals: (AccountSummary of: portfolioPadre) value.! !

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:55:53'!
PASSED!

!methodRemoval: Portfolio #accountSummary stamp: 'TB 5/30/2023 12:56:01'!
accountSummary

	| summary |
	summary := (accounts collect: [:cuenta | cuenta accountSummary allButLast]) flatten.
	summary add: 'Balance = ', self balance asString.
	
	^summary!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 5/30/2023 12:56:05'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:56:08'!
ERROR!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:56:08'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:56:08'!
ERROR!

!methodRemoval: Account #accountSummary stamp: 'TB 5/30/2023 12:56:14'!
accountSummary
	
	self subclassResponsibility !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 5/30/2023 12:56:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'TB 5/30/2023 12:56:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'TB 5/30/2023 12:56:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'TB 5/30/2023 12:56:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'TB 5/30/2023 12:56:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'TB 5/30/2023 12:56:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'TB 5/30/2023 12:56:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'TB 5/30/2023 12:56:19'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:56:20'!
ERROR!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 12:56:20'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 12:56:20'!
ERROR!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 12:56:33' prior: 50624805!
test04EmptyPortfolioHasEmptyAccountSummary

	self assert: 'Balance = 0' equals: (AccountSummary of: Portfolio new) value first.! !

Object subclass: #TransferNet
	instanceVariableNames: 'account transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 12:56:51'!
Object subclass: #TransferNet
	instanceVariableNames: 'account transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNet class methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:57:04'!
of: anAccount

	^self new initializeOf: anAccount! !
!TransferNet methodsFor: 'no messages' stamp: 'TB 5/30/2023 12:57:14'!
initializeOf: anAccount

	account := anAccount.! !
!TransferNet methodsFor: 'nil' stamp: 'TB 5/30/2023 13:00:30' overrides: 16902254!
value

	transferNet := 0.
	
	account informTransferNet: self.
	
	^transferNet.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:00:37' prior: 50627802 overrides: 16902254!
value

	transferNet := 0.	
	account informTransferNet: self.	
	^transferNet.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 13:01:06'!
informTransferNet: aTransferNet
	
	transactions do: [ :transaction | 		transaction contributeToTransferNet: aTransferNet 	].! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/30/2023 13:01:46'!
informTransferNet: aTransferNet
	
	accounts do: [:account | account informTransferNet: aTransferNet]! !

!methodRemoval: Portfolio #transferNet stamp: 'TB 5/30/2023 13:01:49'!
transferNet
	
	^accounts sum: [:account | account transferNet] ifEmpty: 0!

!methodRemoval: ReceptiveAccount #transferNet stamp: 'TB 5/30/2023 13:01:55'!
transferNet
	
	^transactions inject: 0 into: [:transferNet :transaction | 		transaction contributeToTransferNet: transferNet 	].!
!Deposit methodsFor: 'reports' stamp: 'TB 5/30/2023 13:02:30' prior: 50626321 overrides: 50626315!
contributeToTransferNet: aTransferNet
	
	aTransferNet modifyNetWithDeposit: self.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:03:42'!
modifyNetWithDeposit: aDeposit! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:03:48'!
modifyNetWithWithdraw: aWithdraw! !
!Deposit methodsFor: 'reports' stamp: 'TB 5/30/2023 13:03:53' prior: 50627839 overrides: 50626315!
contributeToTransferNet: aTransferNet
	
	aTransferNet modifyNetWithDeposit: self.! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 13:04:06' prior: 50626326 overrides: 50626315!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithWithdraw: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 13:04:17' prior: 50626740 overrides: 50626315!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWith: self! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 13:04:24' prior: 50627866 overrides: 50626315!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithTransferDeposit: self! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:04:41'!
modifyNetWithTransferDeposit: aTransferDeposit

	transferNet := transferNet + aTransferDeposit value.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 13:04:48' prior: 50627872 overrides: 50626315!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithTransferDeposit: self! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 13:05:03' prior: 50626753 overrides: 50626315!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithTransferWithdraw: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 13:05:08' prior: 50627892 overrides: 50626315!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithTransferWithdraw: self! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:05:24'!
modifyNetWithTransferWithdraw: aTransferWithdraw

	transferNet := transferNet - aTransferWithdraw value.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 13:05:29' prior: 50627899 overrides: 50626315!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithTransferWithdraw: self! !

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 13:05:31'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 13:05:31'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 13:05:31'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 13:05:31'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 13:05:31'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 13:05:31'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 13:05:31'!
ERROR!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 13:05:31'!
ERROR!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 13:05:31'!
ERROR!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 13:05:31'!
ERROR!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 13:05:31'!
ERROR!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 13:05:31'!
ERROR!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 13:05:31'!
ERROR!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:06:11' prior: 50624847!
test07EmptyAccountHasZeroTransferNet
		
	self assert: 0 equals: (TransferNet of: ReceptiveAccount new) value.! !

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 13:06:12'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:06:21' prior: 50624853!
test08AccountWithOneIncomingTransferHasPositiveTransferNet

	| account |
	account := ReceptiveAccount new.
	Transfer register: 5 from: ReceptiveAccount new to: account.
	self assert: 5 equals: (TransferNet of: account) value! !
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:06:22' prior: 50627976!
test08AccountWithOneIncomingTransferHasPositiveTransferNet

	| account |
	account := ReceptiveAccount new.
	Transfer register: 5 from: ReceptiveAccount new to: account.
	self assert: 5 equals: (TransferNet of: account) value.! !

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 13:06:23'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:06:31' prior: 50624862!
test09AccountWithOneOutgoingTransferHasNegativeTransferNet

	| account |
	account := ReceptiveAccount new.
	Transfer register: 5 from: account to: ReceptiveAccount new.
	self assert: -5 equals: (TransferNet of: account) value.! !

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 13:06:32'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:06:40' prior: 50624871!
test10AccountWithMultipleTransferHasCorrespondingTransferNet

	| account |
	account := ReceptiveAccount new.
	Transfer register: 3 from: account to: ReceptiveAccount new.
	Transfer register: 5 from: ReceptiveAccount new to: account.
	self assert: 2 equals: (TransferNet of: account) value.! !

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 13:06:40'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:06:49' prior: 50624882!
test11EmptyPortfolioHasZeroTransferNet

	self assert: 0 equals: (TransferNet of: Portfolio new) value.! !

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 13:06:50'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:06:57' prior: 50624888!
test12PortfolioWithOneAccountHasAccountsTransferNet

	| portfolio account |
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Transfer register: 5 from: ReceptiveAccount new to: account.
	portfolio add: account.
	
	self assert: 5 equals: (TransferNet of: portfolio) value.! !

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 13:06:58'!
PASSED!
!ReportsTest methodsFor: 'testing' stamp: 'TB 5/30/2023 13:07:08' prior: 50624899!
test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets
	| portfolioHijo cuentaDelPortfolioHijo portfolioPadre cuentaDescendienteDirecto |
	
	portfolioHijo := Portfolio new.
	cuentaDelPortfolioHijo := ReceptiveAccount new.
	Transfer register: 5 from: ReceptiveAccount new to: cuentaDelPortfolioHijo.
	
	portfolioHijo add: cuentaDelPortfolioHijo.
	
	portfolioPadre := Portfolio new.
	cuentaDescendienteDirecto := ReceptiveAccount new.
	Transfer register: 2 from: cuentaDescendienteDirecto to: ReceptiveAccount new.
	
	portfolioPadre add: cuentaDescendienteDirecto.
	portfolioPadre add: portfolioHijo.
	
	self assert: 3 equals: (TransferNet of: portfolioPadre) value.! !

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 13:07:09'!
PASSED!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 13:07:13'!
PASSED!

Object subclass: #Report
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 13:08:29'!
Object subclass: #Report
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 13:08:37'!
Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'TB 5/30/2023 13:08:46'!
Report subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:08:59'!
addDepositLineFor: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.! !

!methodRemoval: AccountSummary #addDepositLineFor: stamp: 'TB 5/30/2023 13:08:59'!
addDepositLineFor: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:09:05'!
addTransferDepositLineFor: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.! !

!methodRemoval: AccountSummary #addTransferDepositLineFor: stamp: 'TB 5/30/2023 13:09:05'!
addTransferDepositLineFor: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:09:08'!
addTransferWithdrawLineFor: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.! !

!methodRemoval: AccountSummary #addTransferWithdrawLineFor: stamp: 'TB 5/30/2023 13:09:08'!
addTransferWithdrawLineFor: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:09:12'!
addWithdrawLineFor: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.! !

!methodRemoval: AccountSummary #addWithdrawLineFor: stamp: 'TB 5/30/2023 13:09:12'!
addWithdrawLineFor: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:09:22'!
initializeOf: anAccount

	account := anAccount ! !

!methodRemoval: AccountSummary #initializeOf: stamp: 'TB 5/30/2023 13:09:22'!
initializeOf: anAccount

	account := anAccount !

!methodRemoval: TransferNet #initializeOf: stamp: 'TB 5/30/2023 13:09:22'!
initializeOf: anAccount

	account := anAccount.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:05'!
contributeWithDeposit: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:05' prior: 50627099 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithDeposit: self.! !

!methodRemoval: Report #addDepositLineFor: stamp: 'TB 5/30/2023 13:10:05'!
addDepositLineFor: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:17'!
contributeWithTransferDeposit: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:17' prior: 50627121 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithTransferDeposit: self.! !

!methodRemoval: Report #addTransferDepositLineFor: stamp: 'TB 5/30/2023 13:10:17'!
addTransferDepositLineFor: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:27'!
contributeWithTransferWithdraw: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:27' prior: 50627158 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithTransferWithdraw: self.! !

!methodRemoval: Report #addTransferWithdrawLineFor: stamp: 'TB 5/30/2023 13:10:27'!
addTransferWithdrawLineFor: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:35'!
contributeWithWithdraw: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:10:35' prior: 50627178 overrides: 50626939!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithWithdraw: self.! !

!methodRemoval: Report #addWithdrawLineFor: stamp: 'TB 5/30/2023 13:10:35'!
addWithdrawLineFor: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:02' overrides: 50628234!
contributeWithDeposit: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:02' overrides: 50628234!
contributeWithDeposit: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.! !

!methodRemoval: Report #contributeWithDeposit: stamp: 'TB 5/30/2023 13:11:02'!
contributeWithDeposit: aDeposit
	
	accountSummary add: 'Deposito por ', aDeposit value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:02'!
contributeWithDeposit: aDeposit

	self subclassResponsibility! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:10' prior: 50628315 overrides: 50628334!
contributeWithDeposit: aDeposit
	
	report add: 'Deposito por ', aDeposit value asString, '.'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:18' overrides: 50628252!
contributeWithTransferDeposit: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:18' overrides: 50628252!
contributeWithTransferDeposit: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.! !

!methodRemoval: Report #contributeWithTransferDeposit: stamp: 'TB 5/30/2023 13:11:18'!
contributeWithTransferDeposit: aTransferDeposit
	
	accountSummary add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:18'!
contributeWithTransferDeposit: aTransferDeposit

	self subclassResponsibility! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:21' overrides: 50628274!
contributeWithTransferWithdraw: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:22' overrides: 50628274!
contributeWithTransferWithdraw: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.! !

!methodRemoval: Report #contributeWithTransferWithdraw: stamp: 'TB 5/30/2023 13:11:22'!
contributeWithTransferWithdraw: aTransferWithdraw
	
	accountSummary add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:22'!
contributeWithTransferWithdraw: aTransferWithdraw

	self subclassResponsibility! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:24' overrides: 50628296!
contributeWithWithdraw: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:24' overrides: 50628296!
contributeWithWithdraw: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.! !

!methodRemoval: Report #contributeWithWithdraw: stamp: 'TB 5/30/2023 13:11:24'!
contributeWithWithdraw: aWithdraw
	
	accountSummary add: 'Extraccion por ', aWithdraw value asString, '.'.!
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:24'!
contributeWithWithdraw: aWithdraw

	self subclassResponsibility! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:35' prior: 50628347 overrides: 50628370!
contributeWithTransferDeposit: aTransferDeposit
	
	report add: 'Entrada por transferencia de ', aTransferDeposit transfer value asString, '.'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:40' prior: 50628376 overrides: 50628399!
contributeWithTransferWithdraw: aTransferWithdraw
	
	report add: 'Salida por transferencia de ', aTransferWithdraw transfer value asString, '.'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:42' prior: 50628405 overrides: 50628424!
contributeWithWithdraw: aWithdraw
	
	report add: 'Extraccion por ', aWithdraw value asString, '.'.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:11:48' prior: 50627423 overrides: 16902254!
value

	report := OrderedCollection new.
	account informSummary: self.
		
	report add: 'Balance = ', account balance asString.
	^report ! !
!Report methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:12:29' overrides: 16902254!
value

	self subclassResponsibility ! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:14:14' prior: 50628322 overrides: 50628334!
contributeWithDeposit: aDeposit! !

!methodRemoval: TransferNet #modifyNetWithDeposit: stamp: 'TB 5/30/2023 13:14:17'!
modifyNetWithDeposit: aDeposit!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:14:43' prior: 50628355 overrides: 50628370!
contributeWithTransferDeposit: aTransferDeposit

	report := report + aTransferDeposit value.! !

!methodRemoval: TransferNet #modifyNetWithTransferDeposit: stamp: 'TB 5/30/2023 13:14:47'!
modifyNetWithTransferDeposit: aTransferDeposit

	transferNet := transferNet + aTransferDeposit value.!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:15:02' prior: 50628384 overrides: 50628399!
contributeWithTransferWithdraw: aTransferWithdraw

	report := report - aTransferWithdraw value.! !

!methodRemoval: TransferNet #modifyNetWithTransferWithdraw: stamp: 'TB 5/30/2023 13:15:06'!
modifyNetWithTransferWithdraw: aTransferWithdraw

	transferNet := transferNet - aTransferWithdraw value.!

!methodRemoval: TransferNet #modifyNetWithWithdraw: stamp: 'TB 5/30/2023 13:15:09'!
modifyNetWithWithdraw: aWithdraw!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:15:11' prior: 50628412 overrides: 50628424!
contributeWithWithdraw: aWithdraw! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:15:18' prior: 50627809 overrides: 50628463!
value

	report := 0.	
	account informTransferNet: self.	
	^report.! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/30/2023 13:15:36'!
informReport: anAccountSummary

	accounts do: [ :cuenta | cuenta informSummary: anAccountSummary ]! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/30/2023 13:15:36'!
informReport: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToAccountSummary: anAccountSummary 	]! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:15:36' prior: 50628455 overrides: 50628463!
value

	report := OrderedCollection new.
	account informReport: self.
		
	report add: 'Balance = ', account balance asString.
	^report ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:15:36' prior: 50627447!
informSummary: anAccountSummary

	accounts do: [ :cuenta | cuenta informReport: anAccountSummary ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:15:36' prior: 50628517!
informReport: anAccountSummary

	accounts do: [ :cuenta | cuenta informReport: anAccountSummary ]! !

!methodRemoval: Portfolio #informSummary: stamp: 'TB 5/30/2023 13:15:36'!
informSummary: anAccountSummary

	accounts do: [ :cuenta | cuenta informReport: anAccountSummary ]!

!methodRemoval: ReceptiveAccount #informSummary: stamp: 'TB 5/30/2023 13:15:36'!
informSummary: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToAccountSummary: anAccountSummary 	]!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:15:43' prior: 50628512 overrides: 50628463!
value

	report := 0.	
	account informReport: self.	
	^report.! !

!methodRemoval: Account #transferNet stamp: 'TB 5/30/2023 13:16:03'!
transferNet

	self subclassResponsibility!
!Account methodsFor: 'reports' stamp: 'TB 5/30/2023 13:16:13'!
informReport: aReport! !
!Account methodsFor: 'reports' stamp: 'TB 5/30/2023 13:16:18' prior: 50628573!
informReport: aReport

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'reports' stamp: 'TB 5/30/2023 13:16:39'!
contributeToReport: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'reports' stamp: 'TB 5/30/2023 13:16:39' overrides: 50628582!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithDeposit: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/30/2023 13:16:39' overrides: 50628582!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 13:16:39' overrides: 50628582!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithTransferWithdraw: self.! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/30/2023 13:16:39' overrides: 50628582!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithWithdraw: self.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TB 5/30/2023 13:16:39' prior: 50628523 overrides: 50628577!
informReport: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToReport: anAccountSummary 	]! !

!methodRemoval: AccountTransaction #contributeToAccountSummary: stamp: 'TB 5/30/2023 13:16:39'!
contributeToAccountSummary: aSummary

	self subclassResponsibility!

!methodRemoval: Deposit #contributeToAccountSummary: stamp: 'TB 5/30/2023 13:16:39'!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithDeposit: self.!

!methodRemoval: TransferDeposit #contributeToAccountSummary: stamp: 'TB 5/30/2023 13:16:39'!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithTransferDeposit: self.!

!methodRemoval: TransferWithdraw #contributeToAccountSummary: stamp: 'TB 5/30/2023 13:16:39'!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithTransferWithdraw: self.!

!methodRemoval: Withdraw #contributeToAccountSummary: stamp: 'TB 5/30/2023 13:16:39'!
contributeToAccountSummary: anAccountSummary

	anAccountSummary contributeWithWithdraw: self.!

!methodRemoval: ReceptiveAccount #informTransferNet: stamp: 'TB 5/30/2023 13:16:42'!
informTransferNet: aTransferNet
	
	transactions do: [ :transaction | 		transaction contributeToTransferNet: aTransferNet 	].!

!methodRemoval: Portfolio #informTransferNet: stamp: 'TB 5/30/2023 13:16:44'!
informTransferNet: aTransferNet
	
	accounts do: [:account | account informTransferNet: aTransferNet]!

!methodRemoval: Deposit #contributeToTransferNet: stamp: 'TB 5/30/2023 13:16:51'!
contributeToTransferNet: aTransferNet
	
	aTransferNet modifyNetWithDeposit: self.!

!methodRemoval: AccountTransaction #contributeToTransferNet: stamp: 'TB 5/30/2023 13:16:53'!
contributeToTransferNet: aTransferNet

	self subclassResponsibility!

!methodRemoval: TransferDeposit #contributeToTransferNet: stamp: 'TB 5/30/2023 13:16:56'!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithTransferDeposit: self!

!methodRemoval: TransferWithdraw #contributeToTransferNet: stamp: 'TB 5/30/2023 13:16:57'!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithTransferWithdraw: self!

!methodRemoval: Withdraw #contributeToTransferNet: stamp: 'TB 5/30/2023 13:16:58'!
contributeToTransferNet: aTransferNet

	aTransferNet modifyNetWithWithdraw: self.!

!testRun: #ReportsTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

!testRun: #ReportsTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/30/2023 13:17:01'!
PASSED!

----SNAPSHOT----(30 May 2023 13:17:04) CuisUniversity-5832.image priorSource: 9418598!

----SNAPSHOT----(30 May 2023 13:18:34) CuisUniversity-5832.image priorSource: 9506702!

----STARTUP---- (31 May 2023 14:47:05) as /Users/developer/Downloads/Portfolio2/CuisUniversity-5832.image!


!classRenamed: #ReportsTest as: #ReportTest stamp: 'TB 5/31/2023 14:48:44'!
Smalltalk renameClassNamed: #ReportsTest as: #ReportTest!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 14:48:47'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 14:48:47'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'TB 5/31/2023 14:51:27'!
test01ReceptiveAccountCanHaveName

	self assert: 'Cuenta de prueba' equals: (ReceptiveAccount named: 'Cuenta de prueba') name.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountCanHaveName stamp: 'TB 5/31/2023 14:51:28'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 14:51:52'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 14:52:15' prior: 50628808!
named: aString 
	
	^self new initializeNamed: aString ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountCanHaveName stamp: 'TB 5/31/2023 14:52:15'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'TB 5/31/2023 14:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'TB 5/31/2023 14:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'TB 5/31/2023 14:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'TB 5/31/2023 14:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'TB 5/31/2023 14:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'TB 5/31/2023 14:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'TB 5/31/2023 14:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountCanHaveName stamp: 'TB 5/31/2023 14:52:15'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:52:23'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'TB 5/31/2023 14:52:23'!
initializeNamed: aString 
	self shouldBeImplemented.
	string := aString.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'TB 5/31/2023 14:52:30' prior: 50628862!
initializeNamed: aString 
	
	string := aString.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'TB 5/31/2023 14:52:32' prior: 50628868!
initializeNamed: aName 
	
	string := aName.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:52:37'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 14:52:37' prior: 50628873!
initializeNamed: aName 
	
	name := aName.! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 14:52:45' prior: 50628816!
named: aName 
	
	^self new initializeNamed: aName ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountCanHaveName stamp: 'TB 5/31/2023 14:52:49'!
FAILURE!
!ReceptiveAccount methodsFor: 'name' stamp: 'TB 5/31/2023 14:53:13' overrides: 16903442!
name

	^name! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'TB 5/31/2023 14:53:26'!
test08ReceptiveAccountCanHaveName

	self assert: 'Cuenta de prueba' equals: (ReceptiveAccount named: 'Cuenta de prueba') name.
! !

!methodRemoval: ReceptiveAccountTest #test01ReceptiveAccountCanHaveName stamp: 'TB 5/31/2023 14:53:26'!
test01ReceptiveAccountCanHaveName

	self assert: 'Cuenta de prueba' equals: (ReceptiveAccount named: 'Cuenta de prueba') name.
!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanHaveName stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'TB 5/31/2023 14:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanHaveName stamp: 'TB 5/31/2023 14:53:27'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'TB 5/31/2023 14:55:12'!
test16PortfolioCanHaveName

	self assert: 'Portfolio de prueba' equals: (Portfolio named: 'Portfolio de prueba' with: ReceptiveAccount new) name.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 5/31/2023 14:55:34'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'TB 5/31/2023 14:55:43' prior: 50628949!
test16PortfolioCanHaveName

	self assert: 'Portfolio de prueba' equals: (Portfolio named: 'Portfolio de prueba' with: ReceptiveAccount new with: ReceptiveAccount new) name.! !

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 5/31/2023 14:55:46'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 14:55:50'!
named: aString with: aReceptiveAccount with: aReceptiveAccount3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString with: aReceptiveAccount with: aReceptiveAccount3 ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 14:56:13' prior: 50628971!
named: aName with: anAccount with: anotherAccount 
	
	^self new initializeNamed: aName with: anAccount with: anotherAccount ! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 5/31/2023 14:56:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 5/31/2023 14:56:15'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 5/31/2023 14:56:15'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:56:22'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:56:22'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:56:22'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name account anotherAccount_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'TB 5/31/2023 14:56:22'!
initializeNamed: aName with: anAccount with: anotherAccount 
	self shouldBeImplemented.
	name := aName.
	account := anAccount.
	anotherAccount_CHANGE_ME := anotherAccount.! !
!Portfolio methodsFor: 'initialization' stamp: 'TB 5/31/2023 14:57:00'!
initializeNamed: aName
	
	name := aName.! !

!methodRemoval: Portfolio #initializeNamed:with:with: stamp: 'TB 5/31/2023 14:57:03'!
initializeNamed: aName with: anAccount with: anotherAccount 
	self shouldBeImplemented.
	name := aName.
	account := anAccount.
	anotherAccount_CHANGE_ME := anotherAccount.!
!Portfolio class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 14:57:26' prior: 50628982!
named: aName with: anAccount with: anotherAccount 
	
	^self new initializeNamed: aName;
		add: anAccount;
		add: anotherAccount;
		yourself.! !
!Portfolio methodsFor: 'name' stamp: 'TB 5/31/2023 14:58:09' overrides: 16903442!
name

	^name! !

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:58:18'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:58:27'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:58:30'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 14:58:33'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'name' stamp: 'TB 5/31/2023 14:58:47' overrides: 16903442!
name

	^name! !

!methodRemoval: Portfolio #name stamp: 'TB 5/31/2023 14:58:47'!
name

	^name!

!methodRemoval: ReceptiveAccount #name stamp: 'TB 5/31/2023 14:58:47'!
name

	^name!

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 5/31/2023 14:59:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 5/31/2023 14:59:00'!
PASSED!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:01:55'!
printStructure

	! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:02:18' prior: 50629233!
printStructure

	| structure |
	structure := OrderedCollection new.
	accounts do: [].! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:03:02' prior: 50629237!
printStructure

	| structure |
	structure := OrderedCollection new.
	accounts do: [].! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:03:16' prior: 50629243!
printStructure

	| structure |
	structure := OrderedCollection with: name.
	accounts do: [].! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:04:08' prior: 50629249!
printStructure

	| structure |
	structure := OrderedCollection with: name.
	accounts do: [:account | 
		(account isKindOf: ReceptiveAccount) ifTrue: []
	].! !
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:05:43'!
test14EmptyPortfolioHasItselfAsStructure

	self assert: (OrderedCollection with: 'Portfolio de prueba') equals: (Portfolio named: 'Portfolio de prueba') printStructure.! !

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:05:44'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 15:05:48'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 15:05:56' prior: 50629275!
named: aName 
	
	^self new initializeNamed: aName ! !

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:05:59'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:06:13' prior: 50629255!
printStructure

	^'Portfolio de prueba'! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:06:22' prior: 50629291!
printStructure

	^OrderedCollection with: 'Portfolio de prueba'! !

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:06:27'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:06:27'!
PASSED!
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:07:34'!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab, 'Cuenta de prueba') equals: (Portfolio named: 'Portfolio de prueba' with: cuenta) printStructure.! !

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:07:35'!
ERROR!
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:07:48' prior: 50629354!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') equals: (Portfolio named: 'Portfolio de prueba' with: cuenta) printStructure.! !

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:07:48'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 15:07:52'!
named: aString with: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString with: aReceptiveAccount ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'TB 5/31/2023 15:08:12' prior: 50629386!
named: aName with: anAccount 
	
	^self new initializeNamed: aName;
		add: anAccount;
		yourself.! !

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:08:14'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:09:26' prior: 50629295!
printStructure
	
	| structure |
	structure := OrderedCollection with: 'Portfolio de prueba'.
	accounts isEmpty ifFalse: [
		structure add: Character tab asString, accounts first name
	]
	^structure! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:09:29' prior: 50629406!
printStructure
	
	| structure |
	structure := OrderedCollection with: 'Portfolio de prueba'.
	accounts isEmpty ifFalse: [		structure add: Character tab asString, accounts first name	]
	^structure! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:09:36'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:09:36'!
ERROR!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:09:36'!
ERROR!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:09:37'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:09:45' prior: 50629415!
printStructure
	
	| structure |
	structure := OrderedCollection with: 'Portfolio de prueba'.
	accounts isEmpty ifFalse: [		structure add: Character tab asString, accounts first name	].
	^structure! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 5/31/2023 15:09:48'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:09:51'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:09:51'!
PASSED!
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:10:58'!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') equals: (Portfolio named: 'Portfolio de prueba' with: cuenta) printStructure.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:11:14' prior: 50629607!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo) printStructure.! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:11:33'!
showStructure
	
	| structure |
	structure := OrderedCollection with: 'Portfolio de prueba'.
	accounts isEmpty ifFalse: [		structure add: Character tab asString, accounts first name	].
	^structure! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:11:33' prior: 50629263!
test14EmptyPortfolioHasItselfAsStructure

	self assert: (OrderedCollection with: 'Portfolio de prueba') equals: (Portfolio named: 'Portfolio de prueba') showStructure.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:11:33' prior: 50629370!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') equals: (Portfolio named: 'Portfolio de prueba' with: cuenta) showStructure.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:11:33' prior: 50629625!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo) showStructure.! !

!methodRemoval: Portfolio #printStructure stamp: 'TB 5/31/2023 15:11:33'!
printStructure
	
	| structure |
	structure := OrderedCollection with: 'Portfolio de prueba'.
	accounts isEmpty ifFalse: [		structure add: Character tab asString, accounts first name	].
	^structure!
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:11:38' prior: 50629675!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo) showStucture.! !

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:11:45'!
ERROR!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:11:53'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:11:53'!
ERROR!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:11:53'!
ERROR!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:00'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:00'!
ERROR!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:00'!
ERROR!
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:12:09' prior: 50629703!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo) showStructure.! !

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:12'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:15'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:12:15'!
PASSED!
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:13:11' prior: 50629857!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo) showStructure.! !

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:13:13'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:16:22' prior: 50629643!
showStructure
	
	| structure |
	structure := OrderedCollection with: 'Portfolio de prueba'.
	
	accounts do: [ :account |
		(account isKindOf: ReceptiveAccount) ifTrue: [structure add: Character tab asString, account name].
		(account isKindOf: Portfolio) ifTrue: [
			account showStructure do: [ :structureLine |
				structure add: Character tab asString, structureLine.
			]
		]
	].
	^structure
	"accounts isEmpty ifFalse: [		
		structure add: Character tab asString, accounts first name	.
		
	].
	^structure"! !

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:16:28'!
FAILURE!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:16:28'!
FAILURE!

self showStructure!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:17:23' prior: 50630031!
showStructure
	
	| structure |
	structure := OrderedCollection with: name.
	
	accounts do: [ :account |
		(account isKindOf: ReceptiveAccount) ifTrue: [structure add: Character tab asString, account name].
		(account isKindOf: Portfolio) ifTrue: [
			account showStructure do: [ :structureLine |
				structure add: Character tab asString, structureLine.
			]
		]
	].
	^structure
	"accounts isEmpty ifFalse: [		
		structure add: Character tab asString, accounts first name	.
		
	].
	^structure"! !

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:17:25'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:17:25'!
PASSED!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:17:35' prior: 50630059!
showStructure
	
	| structure |
	structure := OrderedCollection with: name.
	
	accounts do: [ :account |
		(account isKindOf: ReceptiveAccount) ifTrue: [structure add: Character tab asString, account name].
		(account isKindOf: Portfolio) ifTrue: [
			account showStructure do: [ :structureLine |
				structure add: Character tab asString, structureLine.
			]
		]
	].
	^structure! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/31/2023 15:19:05'!
contributeToPortfolioStructure: aPortfolioStructure

	aPortfolioStructure add: Character tab asString, name! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:20:19'!
contributeToPortfolioStructure: aPortfolioStructure

	self showStructure do: [ :structureLine |
		aPortfolioStructure add: Character tab asString, structureLine.
	]! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:20:29' prior: 50630141!
showStructure
	
	| structure |
	structure := OrderedCollection with: name.
	
	accounts do: [ :account |
		account contributeToPortfolioStructure: structure
	].
	^structure! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:20:33' prior: 50630170!
showStructure
	
	| structure |
	structure := OrderedCollection with: name.
	
	accounts do: [ :account | account contributeToPortfolioStructure: structure 	].
	^structure! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:20:38'!
PASSED!

!classRenamed: #Report as: #TransactionReport stamp: 'TB 5/31/2023 15:21:30'!
Smalltalk renameClassNamed: #Report as: #TransactionReport!

Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'TB 5/31/2023 15:21:56'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport class methodsFor: 'no messages' stamp: 'TB 5/31/2023 15:22:22'!
of: aPortfolio

	^self new initializeOf: aPortfolio ! !
!PortfolioReport methodsFor: 'no messages' stamp: 'TB 5/31/2023 15:22:34'!
initializeOf: aPortfolio

	portfolio := aPortfolio ! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:22:46' overrides: 16902254!
value

	portfolio showStructure ! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:22:48' prior: 50630273 overrides: 16902254!
value

	^portfolio showStructure ! !
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:23:19' prior: 50629653!
test14EmptyPortfolioHasItselfAsStructure

	self assert: (OrderedCollection with: 'Portfolio de prueba') equals: (PortfolioReport of: (Portfolio named: 'Portfolio de prueba')) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:23:33' prior: 50629662!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (PortfolioReport of: (Portfolio named: 'Portfolio de prueba' with: cuenta)) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 5/31/2023 15:23:42' prior: 50630003!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (PortfolioReport of: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo)) value.! !

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:23:44'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:23:45'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:23:45'!
PASSED!
!Account methodsFor: 'reports' stamp: 'TB 5/31/2023 15:25:10'!
informTransactionReport: aReport

	self subclassResponsibility ! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:25:10' overrides: 50630391!
informTransactionReport: anAccountSummary

	accounts do: [ :cuenta | cuenta informReport: anAccountSummary ]! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/31/2023 15:25:10' overrides: 50630391!
informTransactionReport: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToReport: anAccountSummary 	]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:10' prior: 50628546 overrides: 50628577!
informReport: anAccountSummary

	accounts do: [ :cuenta | cuenta informTransactionReport: anAccountSummary ]! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:10' prior: 50628565 overrides: 50628463!
value

	report := 0.	
	account informTransactionReport: self.	
	^report.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:10' prior: 50628531 overrides: 50628463!
value

	report := OrderedCollection new.
	account informTransactionReport: self.
		
	report add: 'Balance = ', account balance asString.
	^report ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:10' prior: 50630396 overrides: 50630391!
informTransactionReport: anAccountSummary

	accounts do: [ :cuenta | cuenta informTransactionReport: anAccountSummary ]! !

!methodRemoval: Account #informReport: stamp: 'TB 5/31/2023 15:25:10'!
informReport: aReport

	self subclassResponsibility !

!methodRemoval: Portfolio #informReport: stamp: 'TB 5/31/2023 15:25:10'!
informReport: anAccountSummary

	accounts do: [ :cuenta | cuenta informTransactionReport: anAccountSummary ]!

!methodRemoval: ReceptiveAccount #informReport: stamp: 'TB 5/31/2023 15:25:10'!
informReport: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToReport: anAccountSummary 	]!
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:52' prior: 50630278 overrides: 16902254!
value

	report := OrderedCollection new.	
	portfolio informAccountReport: self.
	
	^report! !

!classRenamed: #PortfolioReport as: #AccountReport stamp: 'TB 5/31/2023 15:25:59'!
Smalltalk renameClassNamed: #PortfolioReport as: #AccountReport!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:59' prior: 50630304!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (AccountReport of: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo)) value.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:59' prior: 50630282!
test14EmptyPortfolioHasItselfAsStructure

	self assert: (OrderedCollection with: 'Portfolio de prueba') equals: (AccountReport of: (Portfolio named: 'Portfolio de prueba')) value.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:25:59' prior: 50630291!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (AccountReport of: (Portfolio named: 'Portfolio de prueba' with: cuenta)) value.! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:26:19'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:26:19'!
ERROR!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:26:19'!
ERROR!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:26:19'!
ERROR!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:26:21'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:27:02'!
informAccountReport: anAccountReport 
	self shouldBeImplemented.! !
!AccountTransaction methodsFor: 'reports' stamp: 'TB 5/31/2023 15:27:44'!
contributeToTransctionReport: aSummary

	self subclassResponsibility! !
!Deposit methodsFor: 'reports' stamp: 'TB 5/31/2023 15:27:44' overrides: 50630583!
contributeToTransctionReport: anAccountSummary

	anAccountSummary contributeWithDeposit: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'TB 5/31/2023 15:27:44' overrides: 50630583!
contributeToTransctionReport: anAccountSummary

	anAccountSummary contributeWithTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'TB 5/31/2023 15:27:44' overrides: 50630583!
contributeToTransctionReport: anAccountSummary

	anAccountSummary contributeWithTransferWithdraw: self.! !
!Withdraw methodsFor: 'reports' stamp: 'TB 5/31/2023 15:27:44' overrides: 50630583!
contributeToTransctionReport: anAccountSummary

	anAccountSummary contributeWithWithdraw: self.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:27:44' prior: 50630403 overrides: 50630391!
informTransactionReport: anAccountSummary
	
	transactions do: [ :transaction | 		transaction contributeToTransctionReport: anAccountSummary 	]! !

!methodRemoval: AccountTransaction #contributeToReport: stamp: 'TB 5/31/2023 15:27:44'!
contributeToReport: aSummary

	self subclassResponsibility!

!methodRemoval: Deposit #contributeToReport: stamp: 'TB 5/31/2023 15:27:44'!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithDeposit: self.!

!methodRemoval: TransferDeposit #contributeToReport: stamp: 'TB 5/31/2023 15:27:44'!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithTransferDeposit: self.!

!methodRemoval: TransferWithdraw #contributeToReport: stamp: 'TB 5/31/2023 15:27:44'!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithTransferWithdraw: self.!

!methodRemoval: Withdraw #contributeToReport: stamp: 'TB 5/31/2023 15:27:44'!
contributeToReport: anAccountSummary

	anAccountSummary contributeWithWithdraw: self.!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:28:01'!
contributeToAccountReport: aPortfolioStructure

	self showStructure do: [ :structureLine |
		aPortfolioStructure add: Character tab asString, structureLine.
	]! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/31/2023 15:28:01'!
contributeToAccountReport: aPortfolioStructure

	aPortfolioStructure add: Character tab asString, name! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:28:01' prior: 50630178!
showStructure
	
	| structure |
	structure := OrderedCollection with: name.
	
	accounts do: [ :account | account contributeToAccountReport: structure 	].
	^structure! !

!methodRemoval: Portfolio #contributeToPortfolioStructure: stamp: 'TB 5/31/2023 15:28:01'!
contributeToPortfolioStructure: aPortfolioStructure

	self showStructure do: [ :structureLine |
		aPortfolioStructure add: Character tab asString, structureLine.
	]!

!methodRemoval: ReceptiveAccount #contributeToPortfolioStructure: stamp: 'TB 5/31/2023 15:28:01'!
contributeToPortfolioStructure: aPortfolioStructure

	aPortfolioStructure add: Character tab asString, name!
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:28:08' prior: 50630578!
informAccountReport: anAccountReport 
	
	accounts do: [:account | account contributeToAccountReport: anAccountReport].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/31/2023 15:28:54' prior: 50630655!
contributeToAccountReport: aPortfolioStructure

	aPortfolioStructure contributeWithReceptiveAccount: self.! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:29:29' prior: 50630647!
contributeToAccountReport: aPortfolioStructure

	aPortfolioStructure contributeWithPortfolio: self! !
!Portfolio methodsFor: 'reports' stamp: 'TB 5/31/2023 15:29:36' prior: 50630698!
contributeToAccountReport: anAccountReport

	anAccountReport contributeWithPortfolio: self! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'TB 5/31/2023 15:29:42' prior: 50630692!
contributeToAccountReport: anAccountReport

	anAccountReport contributeWithReceptiveAccount: self.! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:31:08'!
contributeWithReceptiveAccount: aReceptiveAccount

	report add: Character tab asString, aReceptiveAccount name.! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:32:21'!
contributeWithPortfolio: aPortfolio
	
	(AccountReport of: aPortfolio) value do: [:aReportLine | 
		report add: Character tab asString, aReportLine.
	]
! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:32:26'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:32:26'!
FAILURE!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:32:26'!
FAILURE!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:32:26'!
FAILURE!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:32:27'!
FAILURE!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 5/31/2023 15:32:46' prior: 50630459 overrides: 16902254!
value

	report := OrderedCollection with: portfolio name.	
	portfolio informAccountReport: self.
	
	^report! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 5/31/2023 15:32:49'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:32:50'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 5/31/2023 15:32:50'!
PASSED!

----SNAPSHOT----(31 May 2023 15:33:33) CuisUniversity-5832.image priorSource: 9506790!

----STARTUP---- (1 June 2023 14:47:32) as /Users/developer/Downloads/Portfolio2/CuisUniversity-5832.image!

!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:49:30' prior: 50630723!
contributeWithPortfolio: aPortfolio

	aPortfolio informAccountReport: self.
	"
	(AccountReport of: aPortfolio) value do: [:aReportLine | 
		report add: Character tab asString, aReportLine.
	]"
! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:49:32'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:49:32'!
FAILURE!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:49:33'!
FAILURE!

(AccountReport of: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo)) value!

!classDefinition: #AccountReport category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 14:50:51'!
Object subclass: #AccountReport
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:50:50' prior: 50630868!
contributeWithPortfolio: aPortfolio

	currentIndentation := currentIndentation, Character tab asString.
	aPortfolio informAccountReport: self.
	"
	(AccountReport of: aPortfolio) value do: [:aReportLine | 
		report add: Character tab asString, aReportLine.
	]"
! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:51:06' prior: 50630953!
contributeWithPortfolio: aPortfolio

	currentIndentation := currentIndentation, Character tab asString.
	aPortfolio informAccountReport: self.
	currentIndentation := currentIndentation allButLast
	"
	(AccountReport of: aPortfolio) value do: [:aReportLine | 
		report add: Character tab asString, aReportLine.
	]"
! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:51:07' prior: 50630965!
contributeWithPortfolio: aPortfolio

	currentIndentation := currentIndentation, Character tab asString.
	aPortfolio informAccountReport: self.
	currentIndentation := currentIndentation allButLast.
	"
	(AccountReport of: aPortfolio) value do: [:aReportLine | 
		report add: Character tab asString, aReportLine.
	]"
! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:51:18' prior: 50630795 overrides: 16902254!
value

	currentIndentation := ''.
	report := OrderedCollection with: portfolio name.	
	portfolio informAccountReport: self.
	
	^report! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:51:28' prior: 50630716!
contributeWithReceptiveAccount: aReceptiveAccount

	report add: currentIndentation, aReceptiveAccount name.! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:51:44' prior: 50630992 overrides: 16902254!
value

	currentIndentation := Character tab asString.
	report := OrderedCollection with: portfolio name.	
	portfolio informAccountReport: self.
	
	^report! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:51:55'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:51:55'!
FAILURE!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:51:55'!
FAILURE!

(AccountReport of: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo)) value!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:52:38' prior: 50630978!
contributeWithPortfolio: aPortfolio

	report add: currentIndentation, aPortfolio name.
	
	currentIndentation := currentIndentation, Character tab asString.
	aPortfolio informAccountReport: self.
	currentIndentation := currentIndentation allButLast.
	"
	(AccountReport of: aPortfolio) value do: [:aReportLine | 
		report add: Character tab asString, aReportLine.
	]"
! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:52:44'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:52:44'!
PASSED!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:53:38' prior: 50631008 overrides: 16902254!
value

	currentIndentation := ''.
	report := OrderedCollection new.
	self contributeWithPortfolio: portfolio.
	
	^report! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:53:42'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:53:44'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:53:44'!
PASSED!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:53:52' prior: 50631083!
contributeWithPortfolio: aPortfolio

	report add: currentIndentation, aPortfolio name.
	
	currentIndentation := currentIndentation, Character tab asString.
	aPortfolio informAccountReport: self.
	currentIndentation := currentIndentation allButLast.! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:54:52'!
withIncreasedIndent: aPortfolio

	currentIndentation := currentIndentation, Character tab asString.
	aPortfolio informAccountReport: self.
	currentIndentation := currentIndentation allButLast! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:54:52' prior: 50631283!
contributeWithPortfolio: aPortfolio

	report add: currentIndentation, aPortfolio name.
	
	self withIncreasedIndent: aPortfolio.! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:55:04' prior: 50631294!
withIncreasedIndent: aPortfolio

	currentIndentation := currentIndentation, Character tab asString.
	aPortfolio value.
	currentIndentation := currentIndentation allButLast! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:55:06' prior: 50631312!
withIncreasedIndent: aBlock

	currentIndentation := currentIndentation, Character tab asString.
	aBlock value.
	currentIndentation := currentIndentation allButLast! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:55:18' prior: 50631304!
contributeWithPortfolio: aPortfolio

	report add: currentIndentation, aPortfolio name.
	
	self withIncreasedIndent: [		
		aPortfolio informAccountReport: self.
	].! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:55:20' prior: 50631330!
contributeWithPortfolio: aPortfolio

	report add: currentIndentation, aPortfolio name.	
	self withIncreasedIndent: [		
		aPortfolio informAccountReport: self.
	].! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:55:49'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:55:49'!
PASSED!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:56:23' prior: 50631339!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio name.
	self withIncreasedIndent: [		
		aPortfolio informAccountReport: self.
	].! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:56:40'!
addToReport: aPortfolio

	report add: currentIndentation, aPortfolio name.	! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:56:44' prior: 50631407!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio.
	self withIncreasedIndent: [		
		aPortfolio informAccountReport: self.
	].! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:57:08' prior: 50631000!
contributeWithReceptiveAccount: aReceptiveAccount

	self addToReport: aReceptiveAccount.! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 14:57:14' prior: 50631415!
addToReport: anAccount

	report add: currentIndentation, anAccount name.	! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 14:57:21'!
PASSED!

AccountReport subclass: #PortfolioStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioStructure category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 15:00:20'!
AccountReport subclass: #PortfolioStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:01:37' prior: 50630268!
initializeOf: anAccount

	portfolio := anAccount ! !

!classDefinition: #AccountReport category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 15:01:40'!
Object subclass: #AccountReport
	instanceVariableNames: 'account report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:01:40' prior: 50631512!
initializeOf: anAccount

	account := anAccount ! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:01:40' prior: 50631158 overrides: 16902254!
value

	currentIndentation := ''.
	report := OrderedCollection new.
	self contributeWithPortfolio: account.
	
	^report! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:01:51' overrides: 50631435!
addToReport: anAccount

	report add: currentIndentation, anAccount name.	! !

!methodRemoval: AccountReport #addToReport: stamp: 'TB 6/1/2023 15:01:51'!
addToReport: anAccount

	report add: currentIndentation, anAccount name.	!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:01:51'!
addToReport: anAccount

	self subclassResponsibility! !

!methodRemoval: AccountReport #addToReport: stamp: 'TB 6/1/2023 15:01:53'!
addToReport: anAccount

	self subclassResponsibility!
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:01' overrides: 50631421!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio.
	self withIncreasedIndent: [		
		aPortfolio informAccountReport: self.
	].! !

!methodRemoval: AccountReport #contributeWithPortfolio: stamp: 'TB 6/1/2023 15:02:01'!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio.
	self withIncreasedIndent: [		
		aPortfolio informAccountReport: self.
	].!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:01'!
contributeWithPortfolio: aPortfolio

	self subclassResponsibility! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:04' overrides: 50631429!
contributeWithReceptiveAccount: aReceptiveAccount

	self addToReport: aReceptiveAccount.! !

!methodRemoval: AccountReport #contributeWithReceptiveAccount: stamp: 'TB 6/1/2023 15:02:04'!
contributeWithReceptiveAccount: aReceptiveAccount

	self addToReport: aReceptiveAccount.!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:04'!
contributeWithReceptiveAccount: aReceptiveAccount

	self subclassResponsibility! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:08' overrides: 50631531!
value

	currentIndentation := ''.
	report := OrderedCollection new.
	self contributeWithPortfolio: account.
	
	^report! !

!methodRemoval: AccountReport #value stamp: 'TB 6/1/2023 15:02:08'!
value

	currentIndentation := ''.
	report := OrderedCollection new.
	self contributeWithPortfolio: account.
	
	^report!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:08' overrides: 16902254!
value

	self subclassResponsibility! !
!PortfolioStructure methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:11' overrides: 50631321!
withIncreasedIndent: aBlock

	currentIndentation := currentIndentation, Character tab asString.
	aBlock value.
	currentIndentation := currentIndentation allButLast! !

!methodRemoval: AccountReport #withIncreasedIndent: stamp: 'TB 6/1/2023 15:02:11'!
withIncreasedIndent: aBlock

	currentIndentation := currentIndentation, Character tab asString.
	aBlock value.
	currentIndentation := currentIndentation allButLast!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:02:11'!
withIncreasedIndent: aBlock

	self subclassResponsibility! !

!methodRemoval: AccountReport #withIncreasedIndent: stamp: 'TB 6/1/2023 15:02:13'!
withIncreasedIndent: aBlock

	self subclassResponsibility!

Object subclass: #AccountReport
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReport category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 15:02:24'!
Object subclass: #AccountReport
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReport subclass: #PortfolioStructure
	instanceVariableNames: 'currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioStructure category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 15:02:33'!
AccountReport subclass: #PortfolioStructure
	instanceVariableNames: 'currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:02:59'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:02:59'!
ERROR!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:02:59'!
ERROR!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:02:59'!
ERROR!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:03:01'!
ERROR!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:03:13' prior: 50630494!
test14EmptyPortfolioHasItselfAsStructure

	self assert: (OrderedCollection with: 'Portfolio de prueba') equals: (PortfolioStructure of: (Portfolio named: 'Portfolio de prueba')) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:03:20' prior: 50630503!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (PortfolioStructure of: (Portfolio named: 'Portfolio de prueba' with: cuenta)) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:03:25' prior: 50630470!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (PortfolioStructure of: (Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo)) value.! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:03:28'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:03:28'!
PASSED!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:05:10'!
emptyAccountAccountSummary

	^ 'Balance = 0'! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:05:10' prior: 50627195!
test01EmptyAccountHasEmptyAccountSummary

	self assert: self emptyAccountAccountSummary equals: (AccountSummary of: ReceptiveAccount new) value first.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:05:10' prior: 50627773!
test04EmptyPortfolioHasEmptyAccountSummary

	self assert: self emptyAccountAccountSummary equals: (AccountSummary of: Portfolio new) value first.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:06:12'!
portfolioConCuentaHija
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 5 on: account.
	
	portfolio add: account.
	^portfolio! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:06:38' prior: 50627381!
test05PortfolioWithOneAccountHasCorrectSummary
	
	self assert: (OrderedCollection with: 'Deposito por 5.' with: 'Balance = 5') 
		equals: (AccountSummary of: self portfolioConCuentaHija) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:07:15' prior: 50627487!
test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary
	| portfolioHijo portfolioPadre cuentaDescendienteDirecto |
	
	portfolioHijo := self portfolioConCuentaHija.
	
	portfolioPadre := Portfolio new.
	cuentaDescendienteDirecto := ReceptiveAccount new.
	Withdraw register: 2 on: cuentaDescendienteDirecto.
	
	portfolioPadre add: cuentaDescendienteDirecto.
	portfolioPadre add: portfolioHijo.
	
	self assert: (OrderedCollection with: 'Extraccion por 2.' with: 'Deposito por 5.' with: 'Balance = 3') equals: (AccountSummary of: portfolioPadre) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:08:11'!
portfolioConCuentaHija: aBlockToRunOnChildAccount
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 5 on: account.
	
	portfolio add: account.
	^portfolio! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:08:11' prior: 50631863!
test05PortfolioWithOneAccountHasCorrectSummary
	
	self assert: (OrderedCollection with: 'Deposito por 5.' with: 'Balance = 5') 
		equals: (AccountSummary of: self portfolioConCuentaHija: [:account | Deposit register: 5 on: account]) value.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 15:08:11' prior: 50631872!
test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary
	| portfolioHijo portfolioPadre cuentaDescendienteDirecto |
	
	portfolioHijo := self portfolioConCuentaHija: [:account | Deposit register: 5 on: account].
	
	portfolioPadre := Portfolio new.
	cuentaDescendienteDirecto := ReceptiveAccount new.
	Withdraw register: 2 on: cuentaDescendienteDirecto.
	
	portfolioPadre add: cuentaDescendienteDirecto.
	portfolioPadre add: portfolioHijo.
	
	self assert: (OrderedCollection with: 'Extraccion por 2.' with: 'Deposito por 5.' with: 'Balance = 3') equals: (AccountSummary of: portfolioPadre) value.! !

!methodRemoval: ReportTest #portfolioConCuentaHija stamp: 'TB 6/1/2023 15:08:11'!
portfolioConCuentaHija
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 5 on: account.
	
	portfolio add: account.
	^portfolio!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:08:19' prior: 50631892!
portfolioConCuentaHija: aBlockToRunOnChildAccount
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aBlockToRunOnChildAccount value: account.
	
	portfolio add: account.
	^portfolio! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:08:43' prior: 50631902!
test05PortfolioWithOneAccountHasCorrectSummary
	
	| portfolio |
	portfolio := self portfolioConCuentaHija: [:account | Deposit register: 5 on: account].
	self assert: (OrderedCollection with: 'Deposito por 5.' with: 'Balance = 5') 
		equals: (AccountSummary of: portfolio) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:08:46' prior: 50631953!
test05PortfolioWithOneAccountHasCorrectSummary
	
	| portfolio |
	portfolio := self portfolioConCuentaHija: [:account | Deposit register: 5 on: account].
	
	self assert: (OrderedCollection with: 'Deposito por 5.' with: 'Balance = 5') 
		equals: (AccountSummary of: portfolio) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:09:32' prior: 50631913!
test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary
	| portfolioHijo portfolioPadre cuentaDescendienteDirecto |
	
	portfolioHijo := self portfolioConCuentaHija: [:account | Deposit register: 5 on: account].
	
	portfolioPadre := self portfolioConCuentaHija: [:account | Withdraw register: 2 on: cuentaDescendienteDirecto].
	portfolioPadre add: portfolioHijo.
	
	self assert: (OrderedCollection with: 'Extraccion por 2.' with: 'Deposito por 5.' with: 'Balance = 3') equals: (AccountSummary of: portfolioPadre) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:09:35' prior: 50631977!
test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary
	| portfolioHijo portfolioPadre |
	
	portfolioHijo := self portfolioConCuentaHija: [:account | Deposit register: 5 on: account].
	
	portfolioPadre := self portfolioConCuentaHija: [:account | Withdraw register: 2 on: account].
	portfolioPadre add: portfolioHijo.
	
	self assert: (OrderedCollection with: 'Extraccion por 2.' with: 'Deposito por 5.' with: 'Balance = 3') equals: (AccountSummary of: portfolioPadre) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:10:30' prior: 50628040!
test12PortfolioWithOneAccountHasAccountsTransferNet

	| portfolio |
	portfolio := self portfolioConCuentaHija: [:account | 	Transfer register: 5 from: ReceptiveAccount new to: account].
	
	self assert: 5 equals: (TransferNet of: portfolio) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:11:08' prior: 50628056!
test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets
	| portfolioHijo portfolioPadre cuentaDescendienteDirecto |
	
	portfolioHijo := self portfolioConCuentaHijaYTransferenciaDe: 5.
	
	portfolioPadre := Portfolio new.
	cuentaDescendienteDirecto := ReceptiveAccount new.
	Transfer register: 2 from: cuentaDescendienteDirecto to: ReceptiveAccount new.
	
	portfolioPadre add: cuentaDescendienteDirecto.
	portfolioPadre add: portfolioHijo.
	
	self assert: 3 equals: (TransferNet of: portfolioPadre) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:11:55'!
portfolioConCuentaHijaYTransferenciaDe: unValor

	^self portfolioConCuentaHija: [:account | Transfer register: unValor from: ReceptiveAccount new to: account]! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:12:07' prior: 50632015!
test12PortfolioWithOneAccountHasAccountsTransferNet

	| portfolio |
	portfolio := self portfolioConCuentaHijaYTransferenciaDe: 5.
	
	self assert: 5 equals: (TransferNet of: portfolio) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:12:46' prior: 50632026!
test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets
	| portfolioHijo portfolioPadre |
	
	portfolioHijo := self portfolioConCuentaHijaYTransferenciaDe: 5.
	
	portfolioPadre := self portfolioConCuentaHija: [:account | Transfer register: 2 from: account to: ReceptiveAccount new].
	
	portfolioPadre add: portfolioHijo.
	
	self assert: 3 equals: (TransferNet of: portfolioPadre) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:12:50' prior: 50632062!
test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets
	| portfolioHijo portfolioPadre |
	
	portfolioHijo := self portfolioConCuentaHijaYTransferenciaDe: 5.
	
	portfolioPadre := self portfolioConCuentaHija: [:account | Transfer register: 2 from: account to: ReceptiveAccount new].
	portfolioPadre add: portfolioHijo.
	
	self assert: 3 equals: (TransferNet of: portfolioPadre) value.! !

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:12:51'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:12:51'!
PASSED!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:14:14'!
portfolioConNombre

	^Portfolio named: 'Portfolio de prueba'! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:14:22' prior: 50631730!
test14EmptyPortfolioHasItselfAsStructure

	self assert: (OrderedCollection with: 'Portfolio de prueba') equals: (PortfolioStructure of: self portfolioConNombre) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:14:45' prior: 50631739!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (PortfolioStructure of: (self portfolioConNombre; add: cuenta; yourself)) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:15:19'!
portfolioConNombreEHijo: unHijo

	^self portfolioConNombre; add: unHijo; yourself! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:15:31' prior: 50632181!
portfolioConNombreEHijo: unHijo

	^self portfolioConNombre; 
		add: unHijo; 
		yourself ! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:15:42' prior: 50632168!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (PortfolioStructure of: (self portfolioConNombreEHijo: cuenta)) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:16:28' prior: 50631752!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| cuenta portfolioHijo cuentaHija portfolio |
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
		
	cuenta := ReceptiveAccount named: 'Cuenta de prueba'.
	portfolio := Portfolio named: 'Portfolio de prueba' with: cuenta with: portfolioHijo.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (PortfolioStructure of: portfolio) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:17:05' prior: 50632206!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| portfolioHijo cuentaHija portfolio |
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	portfolio := self portfolioConNombreEHijo: portfolioHijo.
	portfolio add: (ReceptiveAccount named: 'Cuenta de prueba').
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (PortfolioStructure of: portfolio) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:17:26'!
cuentaConNombre

	^ ReceptiveAccount named: 'Cuenta de prueba'! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:17:26' prior: 50632231!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| portfolioHijo cuentaHija portfolio |
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	portfolio := self portfolioConNombreEHijo: portfolioHijo.
	portfolio add: (self cuentaConNombre).
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (PortfolioStructure of: portfolio) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:17:26' prior: 50632193!
test15PortfolioWithAccountPrintsStructureCorrectly

	| cuenta |
	cuenta := self cuentaConNombre.
	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Cuenta de prueba') 
		equals: (PortfolioStructure of: (self portfolioConNombreEHijo: cuenta)) value.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:17:31' prior: 50632260!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| portfolioHijo cuentaHija portfolio |
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	portfolio := self portfolioConNombreEHijo: portfolioHijo.
	portfolio add: self cuentaConNombre.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija') 			
	       equals: (PortfolioStructure of: portfolio) value.! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:17:44'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:17:44'!
ERROR!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:17:44'!
ERROR!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:17:45'!
ERROR!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:18:26' prior: 50632187!
portfolioConNombreEHijo: unHijo

	^self portfolioConNombre add: unHijo! !

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:18:28'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:18:29'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:18:29'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:18:29'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:18:29'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:18:29'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:29'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:29'!
FAILURE!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:29'!
FAILURE!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:31'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:32'!
FAILURE!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:18:42' prior: 50632296!
test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly

	| portfolioHijo cuentaHija portfolio |
	cuentaHija := ReceptiveAccount named: 'Cuenta hija'.
	portfolioHijo := Portfolio named: 'Un portfolio hijo' with: cuentaHija.
	
	portfolio := self portfolioConNombreEHijo: portfolioHijo.
	portfolio add: self cuentaConNombre.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba' 
				with: Character tab asString, 'Un portfolio hijo'
				with: Character tab asString, Character tab asString, 'Cuenta hija'
				with: Character tab asString, 'Cuenta de prueba') 			
	       equals: (PortfolioStructure of: portfolio) value.! !

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:44'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:18:46'!
PASSED!

----SNAPSHOT----(1 June 2023 15:18:55) CuisUniversity-5832.image priorSource: 9574717!
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:19:38'!
transferOf5

	^ Transfer register: 5 from: ReceptiveAccount new to: ReceptiveAccount new! !
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:19:38' prior: 50624981!
test05TransferWithdrawalCanAccessTheTransfer

	| transfer |
	transfer := self transferOf5 .
	
	self assert: transfer equals: (transfer withdrawal transfer).! !
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:19:38' prior: 50624971!
test04TransferDepositCanAccessTheTransfer

	| transfer |
	transfer := self transferOf5 .
	
	self assert: transfer equals: (transfer deposit transfer).! !
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:19:40' prior: 50632557!
test05TransferWithdrawalCanAccessTheTransfer

	| transfer |
	transfer := self transferOf5.
	
	self assert: transfer equals: (transfer withdrawal transfer).! !
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:19:45' prior: 50632565!
test04TransferDepositCanAccessTheTransfer

	self assert: self transferOf5 equals: (self transferOf5 deposit transfer).! !
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:19:48' prior: 50632573!
test05TransferWithdrawalCanAccessTheTransfer

	self assert: self transferOf5 equals: (self transferOf5 withdrawal transfer).! !
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:21:41' prior: 50632581!
test04TransferDepositCanAccessTheTransfer

	| transfer |
	transfer := self transferOf5.
	self assert: transfer equals: transfer deposit transfer.! !
!TransferTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:22:02' prior: 50632588!
test05TransferWithdrawalCanAccessTheTransfer

	| transfer |
	transfer := self transferOf5.
	self assert: transfer equals: transfer withdrawal transfer.! !

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 6/1/2023 15:22:08'!
PASSED!

!testRun: #TransferTest #test02SourceAccountHasTransferWithdrawRegistered stamp: 'TB 6/1/2023 15:22:08'!
PASSED!

!testRun: #TransferTest #test03DestinationAccountHasTransferDepositRegistered stamp: 'TB 6/1/2023 15:22:08'!
PASSED!

!testRun: #TransferTest #test04TransferDepositCanAccessTheTransfer stamp: 'TB 6/1/2023 15:22:08'!
PASSED!

!testRun: #TransferTest #test05TransferWithdrawalCanAccessTheTransfer stamp: 'TB 6/1/2023 15:22:08'!
PASSED!

!testRun: #TransferTest #test01TransferAffectsAccountBalances stamp: 'TB 6/1/2023 15:22:52'!
PASSED!

!testRun: #TransferTest #test02SourceAccountHasTransferWithdrawRegistered stamp: 'TB 6/1/2023 15:22:52'!
PASSED!

!testRun: #TransferTest #test03DestinationAccountHasTransferDepositRegistered stamp: 'TB 6/1/2023 15:22:52'!
PASSED!

!testRun: #TransferTest #test04TransferDepositCanAccessTheTransfer stamp: 'TB 6/1/2023 15:22:52'!
PASSED!

!testRun: #TransferTest #test05TransferWithdrawalCanAccessTheTransfer stamp: 'TB 6/1/2023 15:22:52'!
PASSED!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:29:35'!
test17EmptyPortfolioHasEmptyPortfolioSummary

	self assert: (OrderedCollection with: 'Un portfolio de prueba' with: Character tab asString, 'Balance = 0') equals: self portfolioConNombre portfolioSummary.! !

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:29:38'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:29:42'!
portfolioSummary
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:30:13' prior: 50632657!
portfolioSummary
	
	^OrderedCollection with: name with: 'Balance = 0'! !

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:30:15'!
FAILURE!

!methodRemoval: Portfolio #showStructure stamp: 'TB 6/1/2023 15:30:28'!
showStructure
	
	| structure |
	structure := OrderedCollection with: name.
	
	accounts do: [ :account | account contributeToAccountReport: structure 	].
	^structure!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:30:36' prior: 50632661!
portfolioSummary
	
	^OrderedCollection with: name with: Character tab asString, 'Balance = 0'! !

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:30:37'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:31:08' prior: 50632677!
portfolioSummary
	
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:31:09' prior: 50632645!
test17EmptyPortfolioHasEmptyPortfolioSummary

	self assert: (OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0') equals: self portfolioConNombre portfolioSummary.! !

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:31:10'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:31:10'!
PASSED!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:33:49'!
test18PortfolioConCuentaSeDescribeEnPortfolioSummary
	| portfolio hijo |
	
	hijo := self cuentaConNombre.
	Deposit register: 5 on: hijo.
	portfolio := self portfolioConNombreEHijo: hijo.

	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
		 		with: Character tab asString, 'Balance = 0') 
		equals: self portfolioConNombre portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:34:00' prior: 50632768!
test18PortfolioConCuentaSeDescribeEnPortfolioSummary
	| portfolio hijo |
	
	hijo := self cuentaConNombre.
	Deposit register: 5 on: hijo.
	portfolio := self portfolioConNombreEHijo: hijo.

	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
		 		with: Character tab asString, 'Balance = 0') 
		equals: portfolio portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:34:37' prior: 50632782!
test18PortfolioConCuentaSeDescribeEnPortfolioSummary
	| portfolio hijo |
	
	hijo := self cuentaConNombre.
	Deposit register: 5 on: hijo.
	portfolio := self portfolioConNombreEHijo: hijo.

	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5'
		 		with: Character tab asString, 'Balance = 0') 
		equals: portfolio portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:34:39' prior: 50632796!
test18PortfolioConCuentaSeDescribeEnPortfolioSummary
	| portfolio hijo |
	
	hijo := self cuentaConNombre.
	Deposit register: 5 on: hijo.
	portfolio := self portfolioConNombreEHijo: hijo.

	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
		 		with: Character tab asString, 'Balance = 0') 
		equals: portfolio portfolioSummary.! !

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:34:42'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:36:05' prior: 50632686!
portfolioSummary
	
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
		 		with: Character tab asString, 'Balance = 0'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:36:21'!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio hijo |
	
	hijo := self cuentaConNombre.
	Deposit register: 5 on: hijo.
	portfolio := self portfolioConNombreEHijo: hijo.

	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
		 		with: Character tab asString, 'Balance = 0') 
		equals: portfolio portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:36:27' prior: 50632849!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija |
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.
	portfolio := self portfolioConNombreEHijo: cuentaHija.

	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
		 		with: Character tab asString, 'Balance = 0') 
		equals: portfolio portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:37:25' prior: 50632867!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := self portlioConNombreEHijo: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
		 		with: Character tab asString, 'Balance = 0') 
		equals: portfolio portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:39:11' prior: 50632886!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := Portfolio named: 'portfolio hijo'.
	portfolioHijo add: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	portfolio add: cuentaNieta.
	
	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, 'portfolio hijo'
				with: Character tab asString, Character tab asString, 'cuenta nieta'
				with: Character tab asString, Character tab asString, Character tab asString, 'Extraccion por 3.'
		 		with: Character tab asString, 'Balance = 0') 
		equals: portfolio portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:39:39' prior: 50632814!
test18PortfolioConCuentaSeDescribeEnPortfolioSummary
	| portfolio hijo |
	
	hijo := self cuentaConNombre.
	Deposit register: 5 on: hijo.
	portfolio := self portfolioConNombreEHijo: hijo.

	self assert: (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5') 
		equals: portfolio portfolioSummary.! !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:40:21' prior: 50632835!
portfolioSummary
	
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanHaveName stamp: 'TB 6/1/2023 15:40:22'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:40:24'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:40:24'!
ERROR!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:40:24'!
ERROR!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:41:22' prior: 50632911!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo expectedResult |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := Portfolio named: 'portfolio hijo'.
	portfolioHijo add: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	portfolio add: cuentaNieta.
	
	expectedResult := (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, 'portfolio hijo'
				with: Character tab asString, Character tab asString, 'cuenta nieta'
				with: Character tab asString, Character tab asString, Character tab asString, 'Extraccion por 3.').
	
	expectedResult add: Character tab asString, 'Balance = 0'.
	self assert: expectedResult 		equals: portfolio portfolioSummary.! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:41:27'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:41:27'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:41:27'!
FAILURE!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:43:06' prior: 50633116!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo expectedResult |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := Portfolio named: 'portfolio hijo'.
	portfolioHijo add: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	portfolio add: cuentaNieta.
	
	expectedResult := (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, Character tab asString, 'Balance = 5'
				with: Character tab asString, 'portfolio hijo'
				with: Character tab asString, Character tab asString, 'cuenta nieta').
				
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Extraccion por 3.'.
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Balance = -3'.
	expectedResult add: Character tab asString, Character tab asString, 'Balance = -3'.
	
	expectedResult add: Character tab asString, 'Balance = 0'.
	self assert: expectedResult 		equals: portfolio portfolioSummary.! !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:43:12' prior: 50633226!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo expectedResult |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := Portfolio named: 'portfolio hijo'.
	portfolioHijo add: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	portfolio add: cuentaNieta.
	
	expectedResult := (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, Character tab asString, 'Balance = 5'
				with: Character tab asString, 'portfolio hijo'
				with: Character tab asString, Character tab asString, 'cuenta nieta').
				
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Extraccion por 3.'.
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Balance = -3'.
	expectedResult add: Character tab asString, Character tab asString, 'Balance = -3'.	
	expectedResult add: Character tab asString, 'Balance = 0'.
	
	self assert: expectedResult 		equals: portfolio portfolioSummary.! !

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:43:18'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:45:32' prior: 50632965!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts
	summary add: Character tab asString, 'Balance = ', self balance.
	
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:46:54' prior: 50633319!
portfolioSummary
	
	| summary indentation |
	summary := OrderedCollection with: name.
	indentation := Character tab asString.
	accounts do: [:account | 
		summary add: account name
	].
	
	summary add: Character tab asString, 'Balance = ', self balance.
	
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:47:08' prior: 50633340!
portfolioSummary
	
	| summary indentation |
	summary := OrderedCollection with: name.
	indentation := Character tab asString.
	accounts do: [:account | 
		summary add: indentation, account name
	].
	
	summary add: Character tab asString, 'Balance = ', self balance.
	
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:48:00' prior: 50633365!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [summary addAll: (AccountSummary of: account) value].
		(account isKindOf: Portfolio) ifTrue: [summary addAll: account portfolioSummary].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance.
	
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:50:09'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:50:09'!
ERROR!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:50:09'!
ERROR!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:50:09'!
ERROR!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:50:14'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:50:24' prior: 50633390!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [summary addAll: (AccountSummary of: account) value].
		(account isKindOf: Portfolio) ifTrue: [summary addAll: account portfolioSummary].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:50:30'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:50:30'!
FAILURE!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:50:30'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:50:30'!
FAILURE!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:50:31'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:50:38' prior: 50633493!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [summary addAll: (AccountSummary of: account) value].
		(account isKindOf: Portfolio) ifTrue: [summary addAll: account portfolioSummary].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	^summary
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:50:42'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:50:42'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:50:42'!
FAILURE!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:50:43'!
FAILURE!

portfolio portfolioSummary !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:51:48' prior: 50633596!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [summary addAll: (AccountSummary of: account) value].
		(account isKindOf: Portfolio) ifTrue: [
			account portfolioSummary do: [				
				summary add: Character tab asString, account portfolioSummary
			]
		].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	^summary
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:51:52'!
FAILURE!

portfolio portfolioSummary !

account!

account name!

summary!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:54:26' prior: 50633701!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [summary addAll: (AccountSummary of: account) value].
		(account isKindOf: Portfolio) ifTrue: [
			account portfolioSummary do: [				:summaryLine |
				summary add: Character tab asString, summaryLine
			]
		].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	^summary
	"
	accounts isEmpty ifFalse: [
		^OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'				
				with: Character tab asString, Character tab asString, 'Balance = 5'
		 		with: Character tab asString, 'Balance = 5'
	].
	^OrderedCollection with: 'Portfolio de prueba' with: Character tab asString, 'Balance = 0'"! !

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:54:31'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:54:31'!
FAILURE!

portfolio portfolioSummary !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 15:55:05' prior: 50633270!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo expectedResult |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := Portfolio named: 'portfolio hijo'.
	portfolioHijo add: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	portfolio add: cuentaNieta.
	
	expectedResult := (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, Character tab asString, 'Balance = 5'
				with: Character tab asString, 'portfolio hijo'
				with: Character tab asString, Character tab asString, 'cuenta nieta').
				
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Extraccion por 3.'.
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Balance = -3'.
	expectedResult add: Character tab asString, Character tab asString, 'Balance = -3'.	
	expectedResult add: Character tab asString, 'Balance = 2'.
	
	self assert: expectedResult 		equals: portfolio portfolioSummary.! !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:55:14' prior: 50633740!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [summary addAll: (AccountSummary of: account) value].
		(account isKindOf: Portfolio) ifTrue: [
			account portfolioSummary do: [				:summaryLine |
				summary add: Character tab asString, summaryLine
			]
		].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	^summary! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 15:55:36'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:55:36'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:55:36'!
FAILURE!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:55:38'!
FAILURE!

portfolio portfolioSummary !

portfolio portfolioSummary!
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:57:09' prior: 50633826!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [
			(AccountSummary of: account) value do: [ :summaryLine |
				summary add: Character tab asString, summaryLine 
			]
		].
	
		(account isKindOf: Portfolio) ifTrue: [
			account portfolioSummary do: [				:summaryLine |
				summary add: Character tab asString, summaryLine
			]
		].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	^summary! !

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:57:12'!
FAILURE!

portfolio portfolioSummary !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:58:12' prior: 50633920!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		summary add: Character tab asString, account name.
		(account isKindOf: ReceptiveAccount) ifTrue: [
			(AccountSummary of: account) value do: [ :summaryLine |
				summary add: Character tab asString, Character tab asString, summaryLine 
			]
		].
	
		(account isKindOf: Portfolio) ifTrue: [
			account portfolioSummary do: [				:summaryLine |
				summary add: Character tab asString, summaryLine
			]
		].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	^summary! !

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:58:19'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:58:19'!
FAILURE!

portfolio portfolioSummary !
!Portfolio methodsFor: 'reports' stamp: 'TB 6/1/2023 15:59:50' prior: 50633946!
portfolioSummary
	
	| summary |
	summary := OrderedCollection with: name.
	accounts do: [:account | 
		(account isKindOf: ReceptiveAccount) ifTrue: [			
			summary add: Character tab asString, account name.
			(AccountSummary of: account) value do: [ :summaryLine |
				summary add: Character tab asString, Character tab asString, summaryLine 
			]
		].
	
		(account isKindOf: Portfolio) ifTrue: [
			account portfolioSummary do: [				:summaryLine |
				summary add: Character tab asString, summaryLine
			]
		].
	].
	
	summary add: Character tab asString, 'Balance = ', self balance asString.
	^summary! !

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:59:59'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 15:59:59'!
FAILURE!

AccountReport subclass: #PortfolioSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioSummary category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 16:02:08'!
AccountReport subclass: #PortfolioSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioSummary methodsFor: 'no messages' stamp: 'TB 6/1/2023 16:02:26' overrides: 50631574!
contributeWithPortfolio: aPortfolio

	self subclassResponsibility! !
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:04:17' overrides: 50631592!
contributeWithReceptiveAccount: aReceptiveAccount

	self subclassResponsibility! !
!PortfolioSummary methodsFor: 'nil' stamp: 'TB 6/1/2023 16:04:32' overrides: 50631611!
value

	self subclassResponsibility! !

!classDefinition: #PortfolioSummary category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 16:05:42'!
AccountReport subclass: #PortfolioSummary
	instanceVariableNames: 'currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioSummary methodsFor: 'evaluating' stamp: 'TB 6/1/2023 16:05:41' prior: 50634032 overrides: 50631611!
value

	currentIndentation := ''.
	report := OrderedCollection new.
	
	self contributeWithPortfolio: account.
	
	^report! !
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:06:15' prior: 50634020 overrides: 50631574!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio.! !
!PortfolioSummary methodsFor: 'nil' stamp: 'TB 6/1/2023 16:06:31'!
addToReport: anAccount

	report add: currentIndentation, anAccount name! !
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:06:56' prior: 50634053 overrides: 50631574!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio.
	self withIncreasedIndent: [
		aPortfolio informAccountReport: self.
	]! !
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:07:53' prior: 50634026 overrides: 50631592!
contributeWithReceptiveAccount: aReceptiveAccount

	self addToReport: aReceptiveAccount.
	(AccountSummary of: aReceptiveAccount) value do: [:summaryLine | self addToReport: summaryLine].! !
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:08:00' prior: 50634073 overrides: 50631592!
contributeWithReceptiveAccount: aReceptiveAccount

	self addToReport: aReceptiveAccount name.
	(AccountSummary of: aReceptiveAccount) value do: [:summaryLine | self addToReport: summaryLine].! !
!PortfolioSummary methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 16:08:06' prior: 50634058!
addToReport: aString

	report add: currentIndentation, aString name! !
!PortfolioSummary methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 16:08:10' prior: 50634093!
addToReport: aString

	report add: currentIndentation, aString! !
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:08:29' prior: 50634064 overrides: 50631574!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio name.
	self withIncreasedIndent: [
		aPortfolio informAccountReport: self.
	].
	
	self addToReport: aPortfolio balance asString.! !
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:08:38' prior: 50634105 overrides: 50631574!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio name.
	self withIncreasedIndent: [
		aPortfolio informAccountReport: self.
	].
	
	self addToReport: 'Balance = ', aPortfolio balance asString.! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:08:52'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:08:52'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:08:52'!
FAILURE!

portfolio portfolioSummary !
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 16:09:19' prior: 50633782!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo expectedResult |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := Portfolio named: 'portfolio hijo'.
	portfolioHijo add: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	portfolio add: cuentaNieta.
	
	expectedResult := (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, Character tab asString, 'Balance = 5'
				with: Character tab asString, 'portfolio hijo'
				with: Character tab asString, Character tab asString, 'cuenta nieta').
				
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Extraccion por 3.'.
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Balance = -3'.
	expectedResult add: Character tab asString, Character tab asString, 'Balance = -3'.	
	expectedResult add: Character tab asString, 'Balance = 2'.
	
	self assert: expectedResult 		equals: (PortfolioSummary of: portfolio) value.! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:09:26'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:09:26'!
ERROR!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:09:26'!
ERROR!
!PortfolioSummary methodsFor: 'as yet unclassified' stamp: 'TB 6/1/2023 16:09:42'!
withIncreasedIndent: aBlock

	currentIndentation := currentIndentation, Character tab asString.
	aBlock value.
	currentIndentation := currentIndentation allButLast! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:09:52'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:09:52'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:09:52'!
FAILURE!

(PortfolioSummary of: portfolio) value!
!ReportTest methodsFor: 'testing' stamp: 'TB 6/1/2023 16:10:42' prior: 50634200!
test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary
	| portfolio cuentaHija cuentaNieta portfolioHijo expectedResult |
	
	cuentaNieta := ReceptiveAccount named: 'cuenta nieta'.
	Withdraw register: 3 on: cuentaNieta.
	portfolioHijo := Portfolio named: 'portfolio hijo'.
	portfolioHijo add: cuentaNieta.
	
	cuentaHija := self cuentaConNombre.
	Deposit register: 5 on: cuentaHija.	

	portfolio := self portfolioConNombreEHijo: cuentaHija.
	portfolio add: portfolioHijo.
	
	expectedResult := (OrderedCollection 
				with: 'Portfolio de prueba'
				with: Character tab asString, 'Cuenta de prueba'
				with: Character tab asString, Character tab asString, 'Deposito por 5.'
				with: Character tab asString, Character tab asString, 'Balance = 5'
				with: Character tab asString, 'portfolio hijo'
				with: Character tab asString, Character tab asString, 'cuenta nieta').
				
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Extraccion por 3.'.
	expectedResult add: Character tab asString, Character tab asString, Character tab asString, 'Balance = -3'.
	expectedResult add: Character tab asString, Character tab asString, 'Balance = -3'.	
	expectedResult add: Character tab asString, 'Balance = 2'.
	
	self assert: expectedResult 		equals: (PortfolioSummary of: portfolio) value.! !

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:10:46'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:10:47'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:10:47'!
FAILURE!

(PortfolioSummary of: portfolio) value!
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:12:34' prior: 50634083 overrides: 50631592!
contributeWithReceptiveAccount: aReceptiveAccount

	self addToReport: aReceptiveAccount name.
	self withIncreasedIndent: [
		(AccountSummary of: aReceptiveAccount) value do: [:summaryLine | self addToReport: summaryLine].
	].! !

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:12:41'!
FAILURE!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:12:41'!
FAILURE!

(PortfolioSummary of: portfolio) value!
!PortfolioSummary methodsFor: 'double dispatch' stamp: 'TB 6/1/2023 16:14:24' prior: 50634115 overrides: 50631574!
contributeWithPortfolio: aPortfolio

	self addToReport: aPortfolio name.
	self withIncreasedIndent: [
		aPortfolio informAccountReport: self.		
		self addToReport: 'Balance = ', aPortfolio balance asString.
	].
	! !

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:14:26'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:14:29'!
PASSED!

!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:14:31'!
PASSED!

----SNAPSHOT----(1 June 2023 16:14:42) CuisUniversity-5832.image priorSource: 9628726!

Object subclass: #AccountReport
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReport category: 'Portfolio-Solucion' stamp: 'TB 6/1/2023 16:15:30'!
Object subclass: #AccountReport
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----STARTUP---- (1 June 2023 16:15:43) as /Users/developer/Downloads/Portfolio2/CuisUniversity-5832.image!


!testRun: #ReportTest #test01EmptyAccountHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountWithOneOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test03ReceptiveAccountWithMultiplesOfEachTransactionHasCorrectAccountSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test04EmptyPortfolioHasEmptyAccountSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithOneAccountHasCorrectSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test06PortfolioWithOneAccountAndOnePortfolioHasCorrectSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test07EmptyAccountHasZeroTransferNet stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test08AccountWithOneIncomingTransferHasPositiveTransferNet stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test09AccountWithOneOutgoingTransferHasNegativeTransferNet stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test10AccountWithMultipleTransferHasCorrespondingTransferNet stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test11EmptyPortfolioHasZeroTransferNet stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test12PortfolioWithOneAccountHasAccountsTransferNet stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test13PortfolioWithOneAccountAndOnePortfolioHasSumOfTransferNets stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test14EmptyPortfolioHasItselfAsStructure stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test15PortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test16PortfolioWithAccountAndPortfolioWithAccountPrintsStructureCorrectly stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test17EmptyPortfolioHasEmptyPortfolioSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test18PortfolioConCuentaSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

!testRun: #ReportTest #test19PortfolioConCuentaYPortfolioHijoSeDescribeEnPortfolioSummary stamp: 'TB 6/1/2023 16:15:48'!
PASSED!

----SNAPSHOT----(1 June 2023 16:15:52) CuisUniversity-5832.image priorSource: 9695420!